diff --git a/NtupleAnalysis/python/tools/crosssection.py b/NtupleAnalysis/python/tools/crosssection.py
index 477904c..e9c3ca4 100644
--- a/NtupleAnalysis/python/tools/crosssection.py
+++ b/NtupleAnalysis/python/tools/crosssection.py
@@ -31,7 +31,7 @@ https://twiki.cern.ch/twiki/bin/view/CMS/HowToGenXSecAnalyzer#Running_the_GenXSe
 
 '''
 
-DEGUB = False
+DEBUG = False
 def Verbose(msg, printHeader=False):
     '''
     Calls Print() only if verbose options is set to true.
@@ -116,6 +116,8 @@ class CrossSectionList:
 # [17] https://twiki.cern.ch/twiki/bin/view/CMS/SummaryTable1G25ns#DY_Z and https://arxiv.org/pdf/1105.0020v1.pdf
 # [18] top mass 172.5, https://twiki.cern.ch/twiki/bin/view/LHCPhysics/TtbarNNLO
 # [19} https://twiki.cern.ch/twiki/bin/viewauth/CMS/SingleTopSigma
+# [20] https://twiki.cern.ch/twiki/bin/view/LHCPhysics/CERNYellowReportPageAt14TeV#VBF_Process
+# [21] http://ac.els-cdn.com/S2405601415006240/1-s2.0-S2405601415006240-main.pdf?_tid=ba665958-25bf-11e7-8a34-00000aab0f26&acdnat=1492689285_2ebe153f5603767e979806f35c427599
 
 backgroundCrossSections = CrossSectionList(
     CrossSection("QCD_Pt_15to30", {
@@ -570,6 +572,12 @@ backgroundCrossSections = CrossSectionList(
     CrossSection("ttbb_4FS_ckm_amcatnlo_madspin_pythia8", {
             "13": 1.393e+01, #1.393e+01 +- 3.629e-02 pb [16] (inputFiles="0641890F-F72C-E611-9EA8-02163E014B5F.root")
             }),   
+    CrossSection("Neutrino_Pt2to20_gun", {
+            "14": (100.0/1000.0)*1e12, #100 mb
+            }),
+    CrossSection("VBF_HToTauTau_125_14TeV_powheg_pythia6", {
+        "14": 4.278*0.063, #[20, 21]
+    }),   
     )
 
 ## Set background process cross sections
@@ -611,7 +619,7 @@ def setBackgroundCrossSectionForDataset(dataset, doWNJetsWeighting=True, quietMo
             msg = ""
         if not quietMode:
             msg = txtAlign.format("Setting", dataset.getName(), "cross section to ", "%0.6f" %(value), "pb", msg)
-            Print(msg, False)
+            Verbose(msg, False)
     else:
         Print("Warning: no cross section for dataset %s with energy %s TeV (see python/tools/crosssection.py)" % (dataset.getName(), dataset.getEnergy()), True)
 
diff --git a/NtupleAnalysis/python/tools/dataset.py b/NtupleAnalysis/python/tools/dataset.py
index cb09899..f0ccc95 100644
--- a/NtupleAnalysis/python/tools/dataset.py
+++ b/NtupleAnalysis/python/tools/dataset.py
@@ -33,7 +33,7 @@ from sys import platform as _platform
 #================================================================================================
 # Global Definitions
 #================================================================================================
-DEBUG = True
+DEBUG = False
 _debugNAllEvents = False
 _debugCounters = False
 
@@ -113,10 +113,10 @@ def getDatasetsFromMulticrabDirs(multiDirs, **kwargs):
     # For-loop: All multicrab directories
     for d in multiDirs:
         if isinstance(d, str):
-            Print("Getting datasets from multicrab.cfg file (directory=%s)" % (d), True) # hplus-to-hltaus
+            Verbose("Getting datasets from multicrab.cfg file (directory=%s)" % (d), True) # hplus-to-hltaus
             dset = getDatasetsFromMulticrabCfg(directory=d, **kwargs)
         else:
-            Print("Getting datasets from multicrab.cfg file (directory=%s, namePostfix=%s" % (d[0], d[1]), True)
+            Verbose("Getting datasets from multicrab.cfg file (directory=%s, namePostfix=%s" % (d[0], d[1]), True)
             dset = getDatasetsFromMulticrabCfg(directory=d[0], namePostfix=d[1], **kwargs) # hplus-to-hltaus
         datasets.extend(dset)
 
@@ -202,7 +202,7 @@ def readFromMulticrabCfg(**kwargs):
     taskDirs = aux.includeExcludeTasks(taskDirs, **kwargs)
     taskDirs.sort()
 
-    Print("Reading from CRAB dirs (taskDirs=%s, baseDirectory=%s)" % (taskDirs, dirname), True)
+    Verbose("Reading from CRAB dirs (taskDirs=%s, baseDirectory=%s)" % (taskDirs, dirname), True)
     managerCreator = readFromCrabDirs(taskDirs, baseDirectory=dirname, **kwargs)
     return managerCreator
 
diff --git a/NtupleAnalysis/python/tools/histograms.py b/NtupleAnalysis/python/tools/histograms.py
index 41b49b6..d4aae3b 100644
--- a/NtupleAnalysis/python/tools/histograms.py
+++ b/NtupleAnalysis/python/tools/histograms.py
@@ -85,6 +85,9 @@ uncertaintyMode = Uncertainty()
 ## Default energy text
 energyText = "13 TeV"
 
+## Default PU text
+pileupText = "PU=140"
+
 ## Class to provide default positions of the various texts.
 #
 # The attributes which can be set are the x and y coordinates and the
@@ -96,6 +99,7 @@ class TextDefaults:
         self._setDefaults("cmsPreliminary", x=0.62, y=0.96)
         self._setDefaults("energy", x=0.19, y=0.96)
         self._setDefaults("lumi", x=0.43, y=0.96)
+        self._setDefaults("pileup", x=0.17, y=0.96)
 
     ## Modify the default values
     # 
@@ -121,6 +125,9 @@ class TextDefaults:
     # \param kwargs  Keyword arguments (forwarded to _setDefaults())
     def setEnergyDefaults(self, **kwargs):
         self._setDefaults("energy", **kwargs)
+
+    def setPileupDefaults(self, **kwargs):
+        self._setDefaults("pileup", **kwargs)
         
     ## Modify the default position of integrated luminosity text
     #
@@ -331,6 +338,14 @@ def addEnergyText(x=None, y=None, s=None):
         text = s
     addText(x, y, "#sqrt{s} = "+text, textDefaults.getSize("energy"), bold=False)
 
+def addPileupText(x=None, y=None, s=None):
+    _printTextDeprecationWarning("histograms.addPileupText()")
+    (x, y) = textDefaults.getValues("pileup", x, y)
+    text = pileupText
+    if s != None:
+        text = s
+    addText(x, y, "PU="+text, textDefaults.getSize("pileup"), bold=False)
+    
 ## Format luminosity number to fb
 #
 # \param lumi  Luminosity in pb^-1
@@ -404,13 +419,14 @@ def addStandardTexts(lumi=None, sqrts=None, addCmsText=True, cmsTextPosition=Non
         else:
             lumiText = formatLuminosityInFb(lumi)
         lumiText += " fb^{-1} ("
+
+    lumiText += pileupText + ", "
     if sqrts is not None:
         lumiText += sqrts
     else:
         lumiText += energyText
-    if lumi is not None:
-        lumiText += ")"
 
+    
     lumiTextOffset = 0.2
     l = ROOT.gPad.GetLeftMargin()
     t = ROOT.gPad.GetTopMargin()
diff --git a/NtupleAnalysis/python/tools/plots.py b/NtupleAnalysis/python/tools/plots.py
index 0bcd7fd..f561d15 100644
--- a/NtupleAnalysis/python/tools/plots.py
+++ b/NtupleAnalysis/python/tools/plots.py
@@ -109,6 +109,9 @@ _physicalMcAdd = {
     "DYJetsToLL_M_50_ext"        : "DYJetsToLL_M_50",
     "DYJetsToLL_M_50_ext1"       : "DYJetsToLL_M_50",
 
+    "Neutrino_Pt2to20_gun"                  : "MinBias",
+    "VBF_HToTauTau_125_14TeV_powheg_pythia6": "VBF_HToTauTau",
+    
     "ChargedHiggs_HplusTB_HplusToTauNu_M_500_ext1" : "ChargedHiggs_HplusTB_HplusToTauNu_M_500",
     "ChargedHiggs_HplusTB_HplusToTauNu_M_750_reHLT" : "ChargedHiggs_HplusTB_HplusToTauNu_M_750",
     "ChargedHiggs_HplusTB_HplusToTauNu_M_800_reHLT" : "ChargedHiggs_HplusTB_HplusToTauNu_M_800",
@@ -332,7 +335,11 @@ _datasetMerge = {
     "WZ"    : "Diboson",
     "ZZ"    : "Diboson",
 
-    "ttbb_4FS_ckm_amcatnlo_madspin_pythia8"     : "TTBB",
+    "ttbb_4FS_ckm_amcatnlo_madspin_pythia8" : "TTBB",
+
+    "Neutrino_Pt2to20_gun"                  : "MinBias",
+    "VBF_HToTauTau_125_14TeV_powheg_pythia6": "VBF_HToTauTau",
+
 
     #"ChargedHiggs_HplusTB_HplusToTauNu_M_200": "ChargedHiggs_HplusTB_HplusToTauNu_M_200",
     #"ChargedHiggs_HplusTB_HplusToTauB_M_200": "ChargedHiggs_HplusTB_HplusToTauNu_M_200",
@@ -389,6 +396,8 @@ _datasetOrder.extend([
     "WWTo4Q",      # Htb
     "TTBB",        # Htb
     "TTTT",        # Htb
+    "MinBias",
+    "VBF_HToTauTau",    
     ]) 
 
 ## Map the logical dataset names to legend labels
@@ -429,6 +438,9 @@ _legendLabels = {
     "WJets_2bquark": "W+jets (2 b)",
     "WJets_3bquark": "W+jets (#geq3 b)",   
 
+    "MinBias"      : "MB",
+    "VBF_HToTauTau": "VBF H^{0} #rightarrow #tau #tau",
+
     "QCD_Pt15to30"    : "QCD,   15 < #hat{p}_{T} <   30",
     "QCD_Pt30to50"    : "QCD,   30 < #hat{p}_{T} <   50",
     "QCD_Pt50to80"    : "QCD,   50 < #hat{p}_{T} <   80",
@@ -558,6 +570,10 @@ _plotStyles = {
     "WZ"            : styles.dibStyle,
     "ZZ"            : styles.dibStyle,
 
+    "MinBias"       : styles.MinBiasStyle,
+    "VBF_HToTauTau" : styles.HToTauTauStyle,
+
+
     "WJets_0bquark": styles.Style(ROOT.kFullTriangleDown, ROOT.kRed+1),
     "WJets_1bquark": styles.Style(ROOT.kFullTriangleDown, ROOT.kRed+4),
     "WJets_2bquark": styles.Style(ROOT.kFullTriangleDown, ROOT.kRed+3),
diff --git a/NtupleAnalysis/python/tools/styles.py b/NtupleAnalysis/python/tools/styles.py
index 1f910c0..c5c2c62 100644
--- a/NtupleAnalysis/python/tools/styles.py
+++ b/NtupleAnalysis/python/tools/styles.py
@@ -325,6 +325,12 @@ invertedStyle     = StyleCompound([StyleMarker(markerSize=1.2, markerColor=ROOT.
 altEwkStyle       = StyleCompound([StyleMarker(markerSize=1.2, markerColor=ROOT.kMagenta-2, markerSizes=None, markerStyle=ROOT.kFullTriangleDown),
                                    StyleLine(lineColor=ROOT.kMagenta-2, lineStyle=ROOT.kSolid, lineWidth=3),
                                    StyleFill(fillColor=ROOT.kMagenta-2, fillStyle=3001)])
+HToTauTauStyle    = StyleCompound([StyleMarker(markerSize=1.2, markerColor=ROOT.kRed, markerSizes=None, markerStyle=ROOT.kFullTriangleUp),
+                                   StyleLine(lineColor=ROOT.kRed, lineStyle=ROOT.kDotted, lineWidth=3), 
+                                   StyleFill(fillColor=ROOT.kRed, fillStyle=1001)])
+MinBiasStyle     = StyleCompound([StyleMarker(markerSize=1.2, markerColor=ROOT.kBlack, markerSizes=None, markerStyle=ROOT.kFullCircle),
+                                   StyleLine(lineColor=ROOT.kBlack, lineStyle=ROOT.kSolid, lineWidth=3), 
+                                   StyleFill(fillColor=ROOT.kBlack, fillStyle=3001)])
 
 
 
diff --git a/NtupleAnalysis/python/tools/styles.pyc b/NtupleAnalysis/python/tools/styles.pyc
index 3f7ab84..a77d217 100644
Binary files a/NtupleAnalysis/python/tools/styles.pyc and b/NtupleAnalysis/python/tools/styles.pyc differ
diff --git a/NtupleAnalysis/src/CaloPlusTracks/work/json/L1TkTau/Multiplicity.json b/NtupleAnalysis/src/CaloPlusTracks/work/json/L1TkTau/Multiplicity.json
index 6f78219..6429c7e 100644
--- a/NtupleAnalysis/src/CaloPlusTracks/work/json/L1TkTau/Multiplicity.json
+++ b/NtupleAnalysis/src/CaloPlusTracks/work/json/L1TkTau/Multiplicity.json
@@ -6,21 +6,22 @@
     "histogram": "L1TkTau_Multiplicity",
     "title": "L1TkTau_Multiplicity",
     "saveFormats": [".png", ".pdf", ".C"],
-    "saveDir": "",
+    "saveDir": "plots",
     "samples": ["VBF", "Neutrino"],
+    "normalization": "normalizeToOne",
     "rebinX": 1,
     "rebinY": "None",
-    "xlabel": "jet #eta",
+    "xlabel": "Jet Multiplicity",
     "ylabel": "Events / %.2f",
     "divideByBinWidth": "False",
     "drawStyle": "COLZ",
-    "opts": {"xmin": -2.5, "xmax": 2.5, "ymin": 1e+0, "ymaxfactor": 100},
-    "ratioOpts": {"ymin": 0.0, "ymax": 2.0},
+    "opts": {"xmin": 0.0, "xmax": 11.0, "ymin": 1e-04, "ymaxfactor": 10.0},
+    "ratioOpts": {"emacs ymin": 0.0, "ymax": 2.0},
     "ratio": "True",
-    "ratioYlabel": "Data/MC",
+    "ratioYlabel": "Ratio",
     "ratioInvert": "False",
-    "stackMCHistograms": "True",
-    "addMCUncertainty": "True",
+    "stackMCHistograms": "False",
+    "addMCUncertainty": "False",
     "addLuminosityText": "False",
     "addCmsText": "True",
     "errorBarsX": "True",
@@ -28,13 +29,13 @@
     "logY": "True",
     "gridX": "False",
     "gridY": "True",
-    "cmsExtraText": "Preliminary",
+    "cmsExtraText": "Phase-2 Simulation",
     "removeLegend": "False",
-    "moveLegend": {"dx": -0.05, "dy": 0.0, "dh": 0.1},
+    "moveLegend": {"dx": -0.10, "dy": 0.0, "dh": -0.1},
     "extraText": {"text": "", "x": 0.18, "y": 0.92, "size": 17},
-    "cutValue": 0.0,
+    "cutValue": 1.0,
     "cutFillColour": 16,
     "cutBox": "False",
-    "cutLine": "True",
-    "cutGreaterThan": "True"
+    "cutLine": "False",
+    "cutGreaterThan": "False"
 }
diff --git a/NtupleAnalysis/src/CaloPlusTracks/work/plotMC.py b/NtupleAnalysis/src/CaloPlusTracks/work/plotMC.py
index 81e8261..6f00ad7 100755
--- a/NtupleAnalysis/src/CaloPlusTracks/work/plotMC.py
+++ b/NtupleAnalysis/src/CaloPlusTracks/work/plotMC.py
@@ -91,7 +91,7 @@ def Plot(jsonfile, opts):
     with open(os.path.abspath(jsonfile)) as jfile:
         j = json.load(jfile)
 
-        Print("Plotting %s in %s" % (j["title"], j["saveDir"]), True)
+        Verbose("Plotting %s. Will save under \"%s\"" % (j["title"], j["saveDir"]), True)
 
         # Setup the style
         style = tdrstyle.TDRStyle()
@@ -103,7 +103,8 @@ def Plot(jsonfile, opts):
 
         # Setup & configure the dataset manager
         datasetsMgr = GetDatasetsFromDir(opts, j)
-        datasetsMgr.loadLuminosities()
+        if 0:
+            datasetsMgr.loadLuminosities()
         #datasetsMgr.updateNAllEventsToPUWeighted()
 
         # Print information
@@ -133,7 +134,7 @@ def MCPlot(datasetsMgr, json):
     # Create the MC Plot with selected normalization ("normalizeToOne", "normalizeByCrossSection", "normalizeToLumi")
     if json["normalization"]=="normalizeToLumi":
         kwargs = {}
-        p = plots.MCPlot(datasetsMgr, json["histogram"], normalizeToLumi=float(json["luminosity"]), **kwargs)
+        p = plots.MCPlot(datasetsMgr, json["histogram"], normalizeToLumi=1.0, **kwargs)
     else:
         kwargs = {json["normalization"]: True}
         p = plots.MCPlot(datasetsMgr, json["histogram"], **kwargs)

