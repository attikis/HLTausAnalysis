// Class: ReadBDTG
// Automatically generated by MethodBase::MakeClass
//

/* configuration options =====================================================

#GEN -*-*-*-*-*-*-*-*-*-*-*- general info -*-*-*-*-*-*-*-*-*-*-*-

Method         : BDT::BDTG
TMVA Release   : 4.2.0         [262656]
ROOT Release   : 5.34/36       [336420]
Creator        : skonstan
Date           : Wed Oct  4 11:05:37 2017
Host           : Linux buildvm-19.phx2.fedoraproject.org 4.3.5-300.fc23.x86_64 #1 SMP Mon Feb 1 03:18:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux
Dir            : /afs/cern.ch/work/s/skonstan/TMVA_BDT/test
Training events: 27323
Analysis type  : [Classification]


#OPT -*-*-*-*-*-*-*-*-*-*-*-*- options -*-*-*-*-*-*-*-*-*-*-*-*-

# Set by User:
V: "False" [Verbose output (short form of "VerbosityLevel" below - overrides the latter one)]
H: "True" [Print method-specific help message]
NTrees: "1000" [Number of trees in the forest]
MaxDepth: "3" [Max depth of the decision tree allowed]
MinNodeSize: "2.5%" [Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%)]
BoostType: "Grad" [Boosting type for the trees in the forest (note: AdaCost is still experimental)]
UseBaggedBoost: "True" [Use only a random subsample of all events for growing the trees in each boost iteration.]
Shrinkage: "1.000000e-01" [Learning rate for GradBoost algorithm]
BaggedSampleFraction: "5.000000e-01" [Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedBoost, Bagging,)]
# Default:
VerbosityLevel: "Default" [Verbosity level]
VarTransform: "None" [List of variable transformations performed before training, e.g., "D_Background,P_Signal,G,N_AllClasses" for: "Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)"]
CreateMVAPdfs: "False" [Create PDFs for classifier outputs (signal and background)]
IgnoreNegWeightsInTraining: "False" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]
nCuts: "20" [Number of grid points in variable range used in finding optimal cut in node splitting]
AdaBoostR2Loss: "quadratic" [Type of Loss function in AdaBoostR2]
AdaBoostBeta: "5.000000e-01" [Learning rate  for AdaBoost algorithm]
UseRandomisedTrees: "False" [Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests)]
UseNvars: "3" [Size of the subset of variables used with RandomisedTree option]
UsePoissonNvars: "True" [Interpret "UseNvars" not as fixed number but as mean of a Possion distribution in each split with RandomisedTree option]
UseYesNoLeaf: "True" [Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost]
NegWeightTreatment: "ignorenegweightsintraining" [How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining;  Boost With inverse boostweight; Pair events with negative and positive weights in traning sample and *annihilate* them (experimental!)]
Css: "1.000000e+00" [AdaCost: cost of true signal selected signal]
Cts_sb: "1.000000e+00" [AdaCost: cost of true signal selected bkg]
Ctb_ss: "1.000000e+00" [AdaCost: cost of true bkg    selected signal]
Cbb: "1.000000e+00" [AdaCost: cost of true bkg    selected bkg ]
NodePurityLimit: "5.000000e-01" [In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise.]
SeparationType: "giniindex" [Separation criterion for node splitting]
DoBoostMonitor: "False" [Create control plot with ROC integral vs tree number]
UseFisherCuts: "False" [Use multivariate splits using the Fisher criterion]
MinLinCorrForFisher: "8.000000e-01" [The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting]
UseExclusiveVars: "False" [Variables already used in fisher criterion are not anymore analysed individually for node splitting]
DoPreselection: "False" [and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training]
SigToBkgFraction: "1.000000e+00" [Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost]
PruneMethod: "nopruning" [Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning:  Pruning: Method used for pruning (removal) of statistically insignificant branches ]
PruneStrength: "0.000000e+00" [Pruning strength]
PruningValFraction: "5.000000e-01" [Fraction of events to use for optimizing automatic pruning.]
nEventsMin: "0" [deprecated: Use MinNodeSize (in % of training events) instead]
UseBaggedGrad: "False" [deprecated: Use *UseBaggedBoost* instead:  Use only a random subsample of all events for growing the trees in each iteration.]
GradBaggingFraction: "5.000000e-01" [deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. ]
UseNTrainEvents: "0" [deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees]
NNodesMax: "0" [deprecated: Use MaxDepth instead to limit the tree size]
##


#VAR -*-*-*-*-*-*-*-*-*-*-*-* variables *-*-*-*-*-*-*-*-*-*-*-*-

NVar 10
TrijetPtDR                    TrijetPtDR                    TrijetPtDR                    p_{T} #Delta R_{T}                                              'F'    [2.61185979843,3756.65014648]
TrijetDijetPtDR               TrijetDijetPtDR               TrijetDijetPtDR               p_{T} #Delta R_{W}                                              'F'    [1.44850981236,2992.83691406]
TrijetBjetMass                TrijetBjetMass                TrijetBjetMass                m_{b-tagged jet}                                                'F'    [3.2485563755,165.04838562]
TrijetLdgJetBDisc             TrijetLdgJetBDisc             TrijetLdgJetBDisc             Leading jet CSV                                                 'F'    [0,0.847830355167]
TrijetSubldgJetBDisc          TrijetSubldgJetBDisc          TrijetSubldgJetBDisc          Subleading jet CSV                                              'F'    [0,0.847815871239]
TrijetBJetLdgJetMass          TrijetBJetLdgJetMass          TrijetBJetLdgJetMass          m_{b, leading jet}                                              'F'    [21.6390266418,4872.05322266]
TrijetBJetSubldgJetMass       TrijetBJetSubldgJetMass       TrijetBJetSubldgJetMass       m_{b, subleading jet}                                           'F'    [20.7592811584,1628.92663574]
TrijetMass                    TrijetMass                    TrijetMass                    m_{t}                         GeV                               'F'    [50.7328414917,5533.42529297]
TrijetDijetMass               TrijetDijetMass               TrijetDijetMass               m_{W}                                                           'F'    [18.8226451874,2746.66479492]
TrijetBJetBDisc               TrijetBJetBDisc               TrijetBJetBDisc               b-tagged jet CSV                                                'F'    [0.848475754261,0.999541044235]
NSpec 0


============================================================================ */

#include <vector>
#include <cmath>
#include <string>
#include <iostream>

#define NN new BDTGNode
   
#ifndef BDTGNode__def
#define BDTGNode__def
   
class BDTGNode {
   
public:
   
   // constructor of an essentially "empty" node floating in space
   BDTGNode ( BDTGNode* left,BDTGNode* right,
                          int selector, double cutValue, bool cutType, 
                          int nodeType, double purity, double response ) :
   fLeft         ( left         ),
   fRight        ( right        ),
   fSelector     ( selector     ),
   fCutValue     ( cutValue     ),
   fCutType      ( cutType      ),
   fNodeType     ( nodeType     ),
   fPurity       ( purity       ),
   fResponse     ( response     ){
   }

   virtual ~BDTGNode();

   // test event if it decends the tree at this node to the right
   virtual bool GoesRight( const std::vector<double>& inputValues ) const;
   BDTGNode* GetRight( void )  {return fRight; };

   // test event if it decends the tree at this node to the left 
   virtual bool GoesLeft ( const std::vector<double>& inputValues ) const;
   BDTGNode* GetLeft( void ) { return fLeft; };   

   // return  S/(S+B) (purity) at this node (from  training)

   double GetPurity( void ) const { return fPurity; } 
   // return the node type
   int    GetNodeType( void ) const { return fNodeType; }
   double GetResponse(void) const {return fResponse;}

private:

   BDTGNode*   fLeft;     // pointer to the left daughter node
   BDTGNode*   fRight;    // pointer to the right daughter node
   int                     fSelector; // index of variable used in node selection (decision tree)   
   double                  fCutValue; // cut value appplied on this node to discriminate bkg against sig
   bool                    fCutType;  // true: if event variable > cutValue ==> signal , false otherwise
   int                     fNodeType; // Type of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal 
   double                  fPurity;   // Purity of node from training
   double                  fResponse; // Regression response value of node
}; 
   
//_______________________________________________________________________
   BDTGNode::~BDTGNode()
{
   if (fLeft  != NULL) delete fLeft;
   if (fRight != NULL) delete fRight;
}; 
   
//_______________________________________________________________________
bool BDTGNode::GoesRight( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the right
   bool result;
     result = (inputValues[fSelector] > fCutValue );
   if (fCutType == true) return result; //the cuts are selecting Signal ;
   else return !result;
}
   
//_______________________________________________________________________
bool BDTGNode::GoesLeft( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the left
   if (!this->GoesRight(inputValues)) return true;
   else return false;
}
   
#endif
   
#ifndef IClassifierReader__def
#define IClassifierReader__def

class IClassifierReader {

 public:

   // constructor
   IClassifierReader() : fStatusIsClean( true ) {}
   virtual ~IClassifierReader() {}

   // return classifier response
   virtual double GetMvaValue( const std::vector<double>& inputValues ) const = 0;

   // returns classifier status
   bool IsStatusClean() const { return fStatusIsClean; }

 protected:

   bool fStatusIsClean;
};

#endif

class ReadBDTG : public IClassifierReader {

 public:

   // constructor
   ReadBDTG( std::vector<std::string>& theInputVars ) 
      : IClassifierReader(),
        fClassName( "ReadBDTG" ),
        fNvars( 10 ),
        fIsNormalised( false )
   {      
      // the training input variables
      const char* inputVars[] = { "TrijetPtDR", "TrijetDijetPtDR", "TrijetBjetMass", "TrijetLdgJetBDisc", "TrijetSubldgJetBDisc", "TrijetBJetLdgJetMass", "TrijetBJetSubldgJetMass", "TrijetMass", "TrijetDijetMass", "TrijetBJetBDisc" };

      // sanity checks
      if (theInputVars.size() <= 0) {
         std::cout << "Problem in class \"" << fClassName << "\": empty input vector" << std::endl;
         fStatusIsClean = false;
      }

      if (theInputVars.size() != fNvars) {
         std::cout << "Problem in class \"" << fClassName << "\": mismatch in number of input values: "
                   << theInputVars.size() << " != " << fNvars << std::endl;
         fStatusIsClean = false;
      }

      // validate input variables
      for (size_t ivar = 0; ivar < theInputVars.size(); ivar++) {
         if (theInputVars[ivar] != inputVars[ivar]) {
            std::cout << "Problem in class \"" << fClassName << "\": mismatch in input variable names" << std::endl
                      << " for variable [" << ivar << "]: " << theInputVars[ivar].c_str() << " != " << inputVars[ivar] << std::endl;
            fStatusIsClean = false;
         }
      }

      // initialize min and max vectors (for normalisation)
      fVmin[0] = 0;
      fVmax[0] = 0;
      fVmin[1] = 0;
      fVmax[1] = 0;
      fVmin[2] = 0;
      fVmax[2] = 0;
      fVmin[3] = 0;
      fVmax[3] = 0;
      fVmin[4] = 0;
      fVmax[4] = 0;
      fVmin[5] = 0;
      fVmax[5] = 0;
      fVmin[6] = 0;
      fVmax[6] = 0;
      fVmin[7] = 0;
      fVmax[7] = 0;
      fVmin[8] = 0;
      fVmax[8] = 0;
      fVmin[9] = 0;
      fVmax[9] = 0;

      // initialize input variable types
      fType[0] = 'F';
      fType[1] = 'F';
      fType[2] = 'F';
      fType[3] = 'F';
      fType[4] = 'F';
      fType[5] = 'F';
      fType[6] = 'F';
      fType[7] = 'F';
      fType[8] = 'F';
      fType[9] = 'F';

      // initialize constants
      Initialize();

   }

   // destructor
   virtual ~ReadBDTG() {
      Clear(); // method-specific
   }

   // the classifier response
   // "inputValues" is a vector of input values in the same order as the 
   // variables given to the constructor
   double GetMvaValue( const std::vector<double>& inputValues ) const;

 private:

   // method-specific destructor
   void Clear();

   // common member variables
   const char* fClassName;

   const size_t fNvars;
   size_t GetNvar()           const { return fNvars; }
   char   GetType( int ivar ) const { return fType[ivar]; }

   // normalisation of input variables
   const bool fIsNormalised;
   bool IsNormalised() const { return fIsNormalised; }
   double fVmin[10];
   double fVmax[10];
   double NormVariable( double x, double xmin, double xmax ) const {
      // normalise to output range: [-1, 1]
      return 2*(x - xmin)/(xmax - xmin) - 1.0;
   }

   // type of input variable: 'F' or 'I'
   char   fType[10];

   // initialize internal variables
   void Initialize();
   double GetMvaValue__( const std::vector<double>& inputValues ) const;

   // private members (method specific)
   std::vector<BDTGNode*> fForest;       // i.e. root nodes of decision trees
   std::vector<double>                fBoostWeights; // the weights applied in the individual boosts
};

double ReadBDTG::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTGNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTGNode*)current->GetRight();
         else current=(BDTGNode*)current->GetLeft();
      }
      myMVA += current->GetResponse();
   }
   return 2.0/(1.0+exp(-2.0*myMVA))-1.0;
};

void ReadBDTG::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.440874,-0.000559679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855301,0.0018664) , 
1, 106.117, 1, 0, 0.792805,0.292805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545174,0.000333209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0975305,-0.0152398) , 
9, 0.891654, 1, 0, 0.253596,-0.246404) , 
7, 221.844, 1, 0, 0.695635,0.195635) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.349617,-0.00176425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0988938,-0.0147055) , 
4, 0.242231, 1, 0, 0.26576,-0.23424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.195976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.197338) , 
1, 726.36, 1, 0, 0,-0.5) , 
8, 208.934, 1, 0, 0.158222,-0.341778) , 
8, 116.197, 1, 0, 0.494916,-0.00508356)    );
  // itree = 1
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459772,-0.000361654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817349,0.00174384) , 
1, 88.1236, 1, 0, 0.782004,0.28164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.194255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602273,0.000648723) , 
5, 127.731, 1, 0, 0.300907,-0.196333) , 
8, 116.95, 1, 0, 0.729916,0.229891) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.161262,-0.00728939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.021236,-0.0606383) , 
4, 0.219146, 1, 0, 0.103891,-0.354254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464999,-8.70263e-05) , 
4, 0.767071, 1, 0, 0.128928,-0.330318) , 
7, 234.843, 1, 0, 0.487407,0.00383625)    );
  // itree = 2
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462135,-0.000232011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875905,0.00195226) , 
0, 180.619, 1, 0, 0.785599,0.288403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.178662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269936,-0.00318993) , 
5, 114.75, 1, 0, 0.225058,-0.248744) , 
7, 201.571, 1, 0, 0.622779,0.132379) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.172055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469851,6.74264e-05) , 
9, 0.879333, 1, 0, 0.201647,-0.24244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0750892,-0.0173653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.17323) , 
6, 160.109, 1, 0, 0.0344839,-0.395481) , 
9, 0.891654, 1, 0, 0.0719645,-0.361167) , 
7, 304.669, 1, 0, 0.470537,-0.0040349)    );
  // itree = 3
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688889,0.00118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920559,0.00204746) , 
0, 215.181, 1, 0, 0.831329,0.33324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428586,-0.000331058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.180246) , 
7, 270.006, 1, 0, 0.369772,-0.0912124) , 
7, 200.013, 1, 0, 0.710694,0.222303) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.182875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.161874) , 
6, 153.006, 1, 0, 0,-0.422907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.154605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0891526,-0.0116136) , 
4, 0.20182, 1, 0, 0.0480748,-0.295756) , 
8, 216.72, 1, 0, 0.0255662,-0.355288) , 
7, 291.925, 1, 0, 0.53954,0.0780138)    );
  // itree = 4
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.434032,-0.000462916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808112,0.0016875) , 
0, 172.529, 1, 0, 0.732262,0.236976) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.358318,-0.000522851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0832492,-0.0138971) , 
8, 82.4885, 1, 0, 0.179601,-0.210306) , 
7, 242.653, 1, 0, 0.628614,0.153092) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.158972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0413781,-0.025659) , 
6, 97.3387, 1, 0, 0.0310104,-0.304225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180821,-0.00413572) , 
4, 0.565206, 1, 0, 0.053191,-0.285289) , 
8, 148.72, 1, 0, 0.471826,0.0336438)    );
  // itree = 5
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834308,0.00180493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340124,-0.00175229) , 
7, 194.652, 1, 0, 0.766362,0.265563) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.152964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129183,-0.00611209) , 
7, 364.891, 1, 0, 0.0628111,-0.290096) , 
7, 266.973, 1, 0, 0.700707,0.21371) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.151852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143523,-0.00567274) , 
2, 10.9533, 1, 0, 0.0863678,-0.251036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414647,0.000602232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0851626,-0.0111432) , 
3, 0.242102, 1, 0, 0.304544,-0.0454597) , 
9, 0.985097, 1, 0, 0.163181,-0.178658) , 
8, 119.41, 1, 0, 0.505083,0.0709135)    );
  // itree = 6
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493486,6.96519e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911345,0.00201706) , 
0, 184.283, 1, 0, 0.828478,0.33014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.160542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369253,-0.000555669) , 
0, 206.445, 1, 0, 0.259353,-0.1408) , 
7, 199.907, 1, 0, 0.675731,0.203745) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249838,-0.000891139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.137027) , 
7, 393.329, 1, 0, 0.118457,-0.160558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.135332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.139624) , 
2, 10.9533, 1, 0, 0,-0.292034) , 
6, 104.589, 1, 0, 0.0271109,-0.261944) , 
7, 311.813, 1, 0, 0.530466,0.0994492)    );
  // itree = 7
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589392,0.000791387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.906062,0.0019906) , 
0, 205.893, 1, 0, 0.808833,0.31185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.166921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420582,-8.68341e-05) , 
3, 0.282603, 1, 0, 0.196096,-0.212357) , 
7, 203.984, 1, 0, 0.74229,0.254922) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.436638,0.000746015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0795866,-0.0117239) , 
3, 0.161489, 1, 0, 0.26503,-0.0707273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207637,-0.0433123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0604591,-0.0124636) , 
8, 249.708, 1, 0, 0.0365603,-0.226889) , 
1, 144.211, 1, 0, 0.0903509,-0.190123) , 
7, 239.017, 1, 0, 0.504254,0.0924269)    );
  // itree = 8
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629539,0.000900061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893613,0.00193539) , 
0, 210.089, 1, 0, 0.816622,0.31455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.14764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119418,-0.00592211) , 
2, 17.9658, 1, 0, 0.0476992,-0.269254) , 
7, 225.81, 1, 0, 0.723446,0.243806) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.142886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136301,-0.00481341) , 
6, 75.421, 1, 0, 0.0697023,-0.219458) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.264439,-0.000775371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0286553,-0.0286026) , 
8, 208.935, 1, 0, 0.160975,-0.109871) , 
6, 97.3387, 1, 0, 0.136881,-0.1388) , 
8, 116.197, 1, 0, 0.516036,0.108516)    );
  // itree = 9
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.432896,-0.000385196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854229,0.00192433) , 
0, 176.465, 1, 0, 0.77079,0.282274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722978,0.00141394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131683,-0.00540954) , 
7, 219.359, 1, 0, 0.345119,-0.0263577) , 
5, 142.251, 1, 0, 0.647705,0.193031) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221127,-0.000627612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0346073,-0.021455) , 
6, 119.844, 1, 0, 0.118672,-0.123858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.131355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.123787) , 
8, 272.481, 1, 0, 0,-0.227274) , 
3, 0.282548, 1, 0, 0.0792169,-0.158241) , 
8, 148.72, 1, 0, 0.495754,0.0991397)    );
  // itree = 10
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515123,0.000184382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842842,0.00180177) , 
0, 172.529, 1, 0, 0.787334,0.287245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302284,0.000355804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.133989) , 
3, 0.161491, 1, 0, 0.160267,-0.110725) , 
7, 236.374, 1, 0, 0.701344,0.232671) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184675,-0.00124659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0509595,-0.0162592) , 
9, 0.884493, 1, 0, 0.0765303,-0.168357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306304,6.80163e-05) , 
3, 0.685955, 1, 0, 0.0969284,-0.153003) , 
8, 116.197, 1, 0, 0.483632,0.09375)    );
  // itree = 11
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809517,0.00171056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240418,-0.00062305) , 
6, 144.647, 1, 0, 0.751186,0.276132) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227675,-0.00242947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414395,0.000389081) , 
3, 0.40364, 1, 0, 0.274186,-0.084848) , 
8, 99.2179, 1, 0, 0.649665,0.199304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.334683,0.0010969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114334,-0.00399551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.127253) , 
9, 0.949207, 1, 0, 0.0586269,-0.153022) , 
4, 0.0807444, 1, 0, 0.0909818,-0.125716) , 
8, 148.72, 1, 0, 0.501158,0.112909)    );
  // itree = 12
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610283,0.00085106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.861017,0.0018866) , 
1, 113.977, 1, 0, 0.805325,0.306632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239702,-0.000998561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.134837) , 
9, 0.941973, 1, 0, 0.125047,-0.149071) , 
5, 176.823, 1, 0, 0.724197,0.252286) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0849788,-0.00753695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.128221) , 
4, 0.44409, 1, 0, 0.0691083,-0.146969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36265,0.00120874) , 
3, 0.686083, 1, 0, 0.0994369,-0.122338) , 
8, 119.512, 1, 0, 0.521565,0.130782)    );
  // itree = 13
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.164523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372213,-5.4969e-05) , 
3, 0.201151, 1, 0, 0.222303,-0.142195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874927,0.00186613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398245,0.00075719) , 
7, 187.057, 1, 0, 0.678096,0.241218) , 
0, 141.975, 1, 0, 0.631227,0.201792) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.133132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.120428) , 
8, 230.02, 1, 0, 0,-0.199772) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140576,-0.00247328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.123115) , 
9, 0.949139, 1, 0, 0.0724881,-0.127023) , 
3, 0.161401, 1, 0, 0.0442332,-0.15538) , 
1, 223.398, 1, 0, 0.498068,0.120768)    );
  // itree = 14
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810982,0.00168575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106683,-0.0102002) , 
5, 161.039, 1, 0, 0.772332,0.277735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.120326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291863,0.00163456) , 
0, 498.413, 1, 0, 0.125002,-0.0631917) , 
7, 266.973, 1, 0, 0.709376,0.244578) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0254561,-0.0275416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135218,-0.00174798) , 
9, 0.937565, 1, 0, 0.0808803,-0.109007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.467944,0.00246285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141874,-0.00136002) , 
1, 237.049, 1, 0, 0.305907,0.0912017) , 
9, 0.992351, 1, 0, 0.136832,-0.0592258) , 
8, 116.197, 1, 0, 0.500119,0.133542)    );
  // itree = 15
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609035,0.000986031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.913873,0.00197) , 
0, 216.93, 1, 0, 0.80558,0.309814) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.139891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293403,2.10529e-05) , 
4, 0.121115, 1, 0, 0.242303,-0.0431283) , 
7, 204.184, 1, 0, 0.653421,0.214473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184884,-9.08886e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.119711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.11462) , 
8, 183.188, 1, 0, 0,-0.148266) , 
1, 143.896, 1, 0, 0.0310951,-0.123879) , 
7, 315.988, 1, 0, 0.504882,0.133714)    );
  // itree = 16
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520868,0.00050819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142572,-0.00573231) , 
8, 90.0719, 1, 0, 0.358223,-0.0453359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863554,0.00185044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330356,0.000818338) , 
7, 197.717, 1, 0, 0.671311,0.245031) , 
0, 170.862, 1, 0, 0.617595,0.195214) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107215,-0.00200033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.116059) , 
9, 0.874585, 1, 0, 0.019415,-0.11916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.119033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165768,0.00226573) , 
8, 237.509, 1, 0, 0.0896234,-0.0433754) , 
9, 0.985165, 1, 0, 0.0405266,-0.0963719) , 
8, 151.933, 1, 0, 0.464097,0.117653)    );
  // itree = 17
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591715,0.00106224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.124592) , 
8, 132.364, 1, 0, 0.48897,0.0874161) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.905519,0.00196119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401906,0.000867377) , 
7, 206.388, 1, 0, 0.777443,0.313878) , 
0, 216.555, 1, 0, 0.673936,0.232622) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.116403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.113806) , 
8, 171.319, 1, 0, 0,-0.148543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255077,-0.0252353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117806,0.000417405) , 
4, 0.322977, 1, 0, 0.0563093,-0.0535147) , 
1, 234.069, 1, 0, 0.0362811,-0.0873145) , 
7, 291.925, 1, 0, 0.502493,0.146602)    );
  // itree = 18
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840478,0.00175018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293672,-0.000819935) , 
7, 200.054, 1, 0, 0.78545,0.293232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0946672,-0.0054885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448221,0.00268204) , 
6, 126.184, 1, 0, 0.214736,0.0130478) , 
8, 104.331, 1, 0, 0.593654,0.199072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.306664,0.00253732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287307,0.00155977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.119288) , 
9, 0.891665, 1, 0, 0.0715931,-0.0739433) , 
0, 184.324, 1, 0, 0.113889,-0.0347631) , 
6, 158.789, 1, 0, 0.502134,0.154466)    );
  // itree = 19
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681993,0.00118591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115391,-0.00816592) , 
8, 102.924, 1, 0, 0.592412,0.117661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777066,0.00144362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.935843,0.0020782) , 
8, 72.9305, 1, 0, 0.904972,0.390274) , 
0, 215.181, 1, 0, 0.788196,0.288422) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267088,0.00213036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0760964,-0.00469219) , 
3, 0.161401, 1, 0, 0.168342,0.00161719) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.123867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.234255,0.000310274) , 
3, 0.403729, 1, 0, 0.0659048,-0.102813) , 
4, 0.161487, 1, 0, 0.10853,-0.059358) , 
7, 201.581, 1, 0, 0.468836,0.125008)    );
  // itree = 20
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493508,0.000137361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857894,0.00179321) , 
0, 172.874, 1, 0, 0.796242,0.290974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.131029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0975694,-0.0018767) , 
6, 186.169, 1, 0, 0.0408918,-0.137365) , 
7, 219.102, 1, 0, 0.687416,0.229261) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0256408,-0.0179267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144041,5.92463e-05) , 
3, 0.20182, 1, 0, 0.0876537,-0.0433202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438265,0.00317433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.114156) , 
1, 230.278, 1, 0, 0.223526,0.07272) , 
9, 0.992351, 1, 0, 0.118481,-0.0169924) , 
8, 116.197, 1, 0, 0.470276,0.135276)    );
  // itree = 21
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.856752,0.00182637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181676,-0.00249808) , 
7, 202.488, 1, 0, 0.797478,0.307398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105182) , 
9, 0.941973, 1, 0, 0,-0.0934795) , 
7, 274.359, 1, 0, 0.736974,0.276984) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.119638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350583,0.00239709) , 
9, 0.920418, 1, 0, 0.260321,0.0858764) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0516641,-0.00754584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119554,0.000877793) , 
4, 0.403722, 1, 0, 0.068466,-0.0491548) , 
6, 97.3387, 1, 0, 0.132305,-0.00422371) , 
8, 119.673, 1, 0, 0.539174,0.184995)    );
  // itree = 22
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625093,0.000990085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102874,-0.00463113) , 
8, 112.38, 1, 0, 0.510336,0.0959398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456808,-0.00028977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851332,0.00190156) , 
8, 66.5325, 1, 0, 0.81245,0.322158) , 
0, 195.194, 1, 0, 0.718261,0.251631) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.114154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26782,0.00260185) , 
0, 229.021, 1, 0, 0.160166,0.0216166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.1118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125041,0.000849274) , 
3, 0.40364, 1, 0, 0.0324069,-0.0664653) , 
5, 187.633, 1, 0, 0.074569,-0.0373971) , 
7, 239.017, 1, 0, 0.468359,0.139421)    );
  // itree = 23
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671669,0.00144681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388922,-0.000870769) , 
3, 0.201355, 1, 0, 0.574812,0.123279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661103,0.000971036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890836,0.00186905) , 
9, 0.905986, 1, 0, 0.867503,0.357581) , 
0, 174.062, 1, 0, 0.801433,0.304691) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141157,0.00047775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544043,0.00317241) , 
5, 123.707, 1, 0, 0.336755,0.158901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.177853,0.0015391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.117141) , 
9, 0.97796, 1, 0, 0.124671,0.00232562) , 
5, 146.159, 1, 0, 0.183707,0.0459099) , 
7, 204.054, 1, 0, 0.512586,0.183686)    );
  // itree = 24
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568839,0.000428209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.901454,0.00191534) , 
8, 61.1195, 1, 0, 0.86612,0.356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329199,-0.00100858) , 
8, 99.6011, 1, 0, 0.818548,0.317857) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226862,0.000922849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0181317,-0.0155915) , 
7, 341.943, 1, 0, 0.133062,-0.00140799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561852,0.00200676) , 
3, 0.726712, 1, 0, 0.176947,0.0252178) , 
7, 199.879, 1, 0, 0.520137,0.181749)    );
  // itree = 25
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258056,-0.000460458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.162613) , 
3, 0.282605, 1, 0, 0.189388,-0.0902607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580343,0.00116411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109462) , 
7, 223.046, 1, 0, 0.422499,0.0872054) , 
9, 0.970684, 1, 0, 0.301383,-0.00499964) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.90354,0.0019355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412751,0.00209322) , 
7, 182.787, 1, 0, 0.661173,0.275392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0482638,-0.0046439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424209,0.00821703) , 
2, 34.0676, 1, 0, 0.112599,0.0202004) , 
6, 160.121, 1, 0, 0.549091,0.223252) , 
0, 182.102, 1, 0, 0.50041,0.178395)    );
  // itree = 26
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618781,0.000818878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.285956,-0.00130544) , 
6, 87.5559, 1, 0, 0.454566,0.021693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8324,0.00190938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.117771) , 
6, 160.525, 1, 0, 0.782952,0.323232) , 
1, 107.89, 1, 0, 0.726464,0.271362) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.130403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0823397,-0.00126581) , 
7, 241.013, 1, 0, 0.0692808,-0.0454479) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457435,0.00317054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.104525) , 
8, 191.025, 1, 0, 0.281141,0.141737) , 
9, 0.985154, 1, 0, 0.142121,0.0189087) , 
8, 113.761, 1, 0, 0.517714,0.181176)    );
  // itree = 27
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278839,-0.00250958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544709,0.00101934) , 
0, 245.497, 1, 0, 0.40302,-0.0275437) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815539,0.00178423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142389,0.00214007) , 
5, 176.677, 1, 0, 0.729787,0.282934) , 
1, 90.4024, 1, 0, 0.691316,0.246381) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.051189,-0.00596709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248424,0.00400808) , 
9, 0.920412, 1, 0, 0.190338,0.0812744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.116752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180176,0.00196212) , 
2, 17.4501, 1, 0, 0.0504141,-0.056621) , 
3, 0.242147, 1, 0, 0.13896,0.030641) , 
8, 116.197, 1, 0, 0.484331,0.165537)    );
  // itree = 28
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570228,0.000631285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.912841,0.00192897) , 
0, 195.683, 1, 0, 0.841609,0.324726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.134442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304839,0.00171972) , 
2, 11.9952, 1, 0, 0.218183,0.0240458) , 
7, 200.606, 1, 0, 0.730179,0.270983) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.116006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148324,0.000963579) , 
9, 0.98516, 1, 0, 0.0482085,-0.0566903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659751,0.00239469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0985879,0.000571575) , 
7, 238.377, 1, 0, 0.28644,0.120087) , 
3, 0.282548, 1, 0, 0.146409,0.016178) , 
8, 110.548, 1, 0, 0.510704,0.175186)    );
  // itree = 29
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476023,0.000824759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806444,0.00185333) , 
0, 170.443, 1, 0, 0.749209,0.288671) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240399,0.00451581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.108895) , 
9, 0.949139, 1, 0, 0.134422,0.0470936) , 
7, 266.973, 1, 0, 0.667643,0.25662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366499,0.00608921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0336247,-0.00823612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345358,0.00824234) , 
2, 25.5189, 1, 0, 0.0754725,0.0174521) , 
1, 147.55, 1, 0, 0.11435,0.0498628) , 
8, 152.544, 1, 0, 0.530235,0.205273)    );
  // itree = 30
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312128,-0.000311592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585673,0.00159182) , 
3, 0.241626, 1, 0, 0.453094,0.093408) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920993,0.00194184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329119,0.00157384) , 
7, 198.11, 1, 0, 0.747404,0.310033) , 
0, 220.178, 1, 0, 0.642612,0.232901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0938029,0.00638151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102704) , 
9, 0.949207, 1, 0, 0,-0.053132) , 
0, 184.293, 1, 0, 0.0148117,-0.0376946) , 
7, 311.813, 1, 0, 0.488781,0.166597)    );
  // itree = 31
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372129,-0.00089352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566508,0.00122607) , 
0, 226.354, 1, 0, 0.476431,0.0510657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.844969,0.00190948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10007) , 
7, 288.076, 1, 0, 0.790282,0.327505) , 
1, 112.682, 1, 0, 0.727479,0.272188) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0637046,-0.0063041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282585,0.00325429) , 
0, 244.705, 1, 0, 0.172749,0.0577899) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101362) , 
9, 0.949207, 1, 0, 0,-0.0427068) , 
7, 397.689, 1, 0, 0.106042,0.0189833) , 
8, 116.197, 1, 0, 0.511978,0.184382)    );
  // itree = 32
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128144,-0.00754465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55754,0.0014174) , 
1, 90.8391, 1, 0, 0.50952,0.133601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.475875,0.00011788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801041,0.00210052) , 
8, 65.7649, 1, 0, 0.774475,0.334424) , 
0, 202.265, 1, 0, 0.690265,0.270597) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116255,0.00438927) , 
3, 0.403722, 1, 0, 0.0316849,-0.01226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432182,0.0105519) , 
2, 34.3927, 1, 0, 0.0801335,0.0333637) , 
7, 291.925, 1, 0, 0.527406,0.207273)    );
  // itree = 33
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605115,0.000956442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899876,0.00190724) , 
0, 177.335, 1, 0, 0.847714,0.334753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.122242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205811,0.00119159) , 
2, 20.1516, 1, 0, 0.073948,-0.0496195) , 
7, 212.36, 1, 0, 0.747139,0.284792) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261748,0.00387655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.037325,-0.00163738) , 
1, 287.8, 1, 0, 0.168614,0.0785848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.115442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100705) , 
7, 326.707, 1, 0, 0,-0.0610709) , 
4, 0.36335, 1, 0, 0.130831,0.0472906) , 
8, 116.197, 1, 0, 0.544189,0.206583)    );
  // itree = 34
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244836,-0.00257136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562757,0.000932777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792862,0.00198443) , 
0, 170.014, 1, 0, 0.757455,0.307971) , 
8, 54.7986, 1, 0, 0.724206,0.278347) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384459,-0.00867918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106905,0.00141748) , 
5, 149.602, 1, 0, 0.0792455,-0.0115728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419374,0.00433494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102119) , 
6, 134.681, 1, 0, 0.209463,0.128137) , 
0, 438.443, 1, 0, 0.116041,0.027905) , 
8, 113.273, 1, 0, 0.504134,0.187721)    );
  // itree = 35
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62947,0.00127624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888892,0.00198637) , 
0, 233.153, 1, 0, 0.77723,0.295202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.32459,0.00526097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0758305,-0.00144385) , 
4, 0.161456, 1, 0, 0.184159,0.0815717) , 
7, 225.212, 1, 0, 0.65056,0.249574) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.108762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103064) , 
8, 208.096, 1, 0, 0,-0.0451303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222558,0.0137826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103092) , 
4, 0.161489, 1, 0, 0.100954,0.0673057) , 
0, 360.904, 1, 0, 0.0423868,0.00207717) , 
8, 152.035, 1, 0, 0.497513,0.187291)    );
  // itree = 36
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538286,0.00059174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871704,0.00182285) , 
0, 172.529, 1, 0, 0.818929,0.310871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0925996,-0.00278445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301783,0.0140101) , 
6, 230.213, 1, 0, 0.148758,0.0417836) , 
5, 161.49, 1, 0, 0.723278,0.272465) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17202,0.00193374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334929,0.00978434) , 
5, 257.743, 1, 0, 0.19612,0.0896099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100765) , 
9, 0.949207, 1, 0, 0,-0.0249715) , 
7, 392.759, 1, 0, 0.121047,0.0457493) , 
8, 116.197, 1, 0, 0.511122,0.192597)    );
  // itree = 37
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657415,0.00102751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.18429,-0.00414193) , 
8, 97.8642, 1, 0, 0.555474,0.0909965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691114,0.00104071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.932039,0.00195789) , 
1, 120.919, 1, 0, 0.893728,0.363494) , 
0, 202.416, 1, 0, 0.786879,0.277417) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.195939,0.00140989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404599,0.00464813) , 
0, 319.628, 1, 0, 0.267686,0.118113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0986147,0.01402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101031) , 
1, 236.083, 1, 0, 0.0337846,0.00823619) , 
7, 341.943, 1, 0, 0.164299,0.0695464) , 
7, 199.879, 1, 0, 0.47961,0.174824)    );
  // itree = 38
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.439876,0.000488129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738439,0.00209256) , 
2, 14.7469, 1, 0, 0.515735,0.117721) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367512,-0.00135437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849552,0.00195241) , 
8, 60.9273, 1, 0, 0.821394,0.336616) , 
0, 195.194, 1, 0, 0.727188,0.269151) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12331,0.00457392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.429279,0.0121572) , 
1, 210.589, 1, 0, 0.179164,0.108681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200768,-0.00420494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127524,0.0268831) , 
4, 0.565211, 1, 0, 0.0349097,0.000506704) , 
1, 232.612, 1, 0, 0.103555,0.0519832) , 
7, 244.016, 1, 0, 0.495126,0.18834)    );
  // itree = 39
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352222,-0.00107439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583892,0.00118828) , 
1, 126.115, 1, 0, 0.464994,0.0385199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.895552,0.00186259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133288,-0.00029789) , 
7, 208.352, 1, 0, 0.759332,0.299162) , 
10, 191.022, 1, 0, 0.7031,0.249367) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0653566,0.00036087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.239227,0.0214548) , 
2, 25.5189, 1, 0, 0.0876723,0.0286896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121182,0.00329424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358046,0.0061933) , 
0, 286.282, 1, 0, 0.254604,0.173549) , 
9, 0.985154, 1, 0, 0.143972,0.077545) , 
8, 119.41, 1, 0, 0.50513,0.18853)    );
  // itree = 40
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.371564,0.000318392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683014,0.00210633) , 
2, 15.8019, 1, 0, 0.44011,0.0864215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922629,0.00191209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423289,0.00249993) , 
7, 196.31, 1, 0, 0.756667,0.324226) , 
0, 216.079, 1, 0, 0.650186,0.244236) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.101225,0.0193876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101475) , 
3, 0.161491, 1, 0, 0.043049,0.0190742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358258,0.0162146) , 
2, 34.0676, 1, 0, 0.0831829,0.0568397) , 
7, 311.813, 1, 0, 0.510924,0.198209)    );
  // itree = 41
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227634,-0.00278559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478217,0.000629462) , 
8, 49.6014, 1, 0, 0.394815,-0.00111002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433982,0.000698486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744857,0.00211275) , 
0, 205.367, 1, 0, 0.680269,0.275301) , 
1, 94.0668, 1, 0, 0.644836,0.240991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.294842,0.00669747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100293,0.0117944) , 
0, 439.097, 1, 0, 0.0317,0.00194564) , 
1, 145.429, 1, 0, 0.0662864,0.0303985) , 
8, 148.72, 1, 0, 0.492393,0.185501)    );
  // itree = 42
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362908,-0.000122847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503595,0.00161917) , 
6, 97.1244, 1, 0, 0.437554,0.0871012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.921073,0.00191362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398692,0.00207287) , 
7, 196.31, 1, 0, 0.754516,0.312757) , 
0, 215.831, 1, 0, 0.642601,0.233081) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110364,0.0115842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10027) , 
1, 147.55, 1, 0, 0.0183511,-0.00425966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13077,0.022124) , 
9, 0.992351, 1, 0, 0.0415241,0.0194832) , 
7, 311.813, 1, 0, 0.49324,0.180004)    );
  // itree = 43
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854957,0.00172846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258922,-0.000389525) , 
7, 196.862, 1, 0, 0.798724,0.295319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.132098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0897446,-0.000750053) , 
1, 132.561, 1, 0, 0.0480864,-0.0615741) , 
6, 144.647, 1, 0, 0.732304,0.263739) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0486495,-0.000603344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32789,0.00992613) , 
3, 0.107564, 1, 0, 0.2009,0.141834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0415906,-0.0024637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159105,0.0125328) , 
2, 18.8634, 1, 0, 0.0680416,0.0132121) , 
3, 0.161456, 1, 0, 0.126175,0.0694919) , 
8, 116.197, 1, 0, 0.527823,0.198209)    );
  // itree = 44
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184241,-0.00146007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433665,0.00103401) , 
4, 0.524838, 1, 0, 0.230116,-0.031514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627818,0.00261886) , 
2, 16.7205, 1, 0, 0.312672,0.0419447) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664114,0.00182134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769115,0.0042573) , 
0, 483.167, 1, 0, 0.673543,0.288373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278785,0.0142787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0990989) , 
9, 0.891683, 1, 0, 0.0680782,0.0482823) , 
7, 350.678, 1, 0, 0.537372,0.234376) , 
0, 166.913, 1, 0, 0.498323,0.200934)    );
  // itree = 45
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.825508,0.00172276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361452,0.000346277) , 
7, 195.976, 1, 0, 0.774879,0.284822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128322,0.00195079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425572,0.00407456) , 
8, 131.137, 1, 0, 0.207506,0.0961665) , 
7, 229.178, 1, 0, 0.658026,0.245968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.387187,0.0103087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.104425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110968,0.0065747) , 
0, 360.139, 1, 0, 0.0472433,0.0196615) , 
1, 118.564, 1, 0, 0.0817577,0.0501276) , 
8, 148.72, 1, 0, 0.506379,0.194432)    );
  // itree = 46
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234903,-0.000819288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567871,0.00171711) , 
9, 0.898797, 1, 0, 0.517745,0.166515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.828982,0.00202125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103829) , 
8, 184.839, 1, 0, 0.776482,0.334287) , 
0, 220.184, 1, 0, 0.676759,0.269624) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.201285,0.00958195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.106429) , 
4, 0.242231, 1, 0, 0.131354,0.090405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.116355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0974926) , 
7, 386.669, 1, 0, 0,-0.0370835) , 
3, 0.242237, 1, 0, 0.0810034,0.0415359) , 
5, 185.059, 1, 0, 0.528508,0.212865)    );
  // itree = 47
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443861,0.000854326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814981,0.00193714) , 
0, 172.987, 1, 0, 0.733803,0.286747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153654,-0.000481644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274388,0.00788834) , 
1, 206.437, 1, 0, 0.193736,0.0574376) , 
5, 145.727, 1, 0, 0.587643,0.224688) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.11102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100258) , 
8, 198.748, 1, 0, 0,-0.0180852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129098,0.00863488) , 
4, 0.524838, 1, 0, 0.0218597,0.00261242) , 
1, 287.8, 1, 0, 0.497359,0.18925)    );
  // itree = 48
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603974,0.000908821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8841,0.00186099) , 
1, 115.378, 1, 0, 0.827055,0.314588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224477,0.0012493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.520217,0.00344605) , 
2, 15.9728, 1, 0, 0.317827,0.136107) , 
7, 197.454, 1, 0, 0.664517,0.25762) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.099895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316661,0.0163098) , 
9, 0.873174, 1, 0, 0.159838,0.13423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0997508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163949,0.0234635) , 
9, 0.994355, 1, 0, 0.0350323,0.0223926) , 
9, 0.891665, 1, 0, 0.0616161,0.0462141) , 
7, 321.553, 1, 0, 0.529202,0.210172)    );
  // itree = 49
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320965,-0.00112113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.787096,0.00178231) , 
2, 11.5813, 1, 0, 0.560819,0.115148) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659481,0.000959364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922084,0.00187806) , 
8, 58.3367, 1, 0, 0.90171,0.365091) , 
0, 173.914, 1, 0, 0.836651,0.31739) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0937258,0.000773986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477412,0.00259875) , 
4, 0.767071, 1, 0, 0.118153,0.0291544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460828,0.0320165) , 
2, 34.0676, 1, 0, 0.1479,0.0636909) , 
7, 197.982, 1, 0, 0.542539,0.209055)    );
  // itree = 50
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197024,-0.00430301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451349,0.00103178) , 
1, 135.955, 1, 0, 0.320814,-0.0434593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517861,0.000275686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.851401,0.00183809) , 
8, 59.0634, 1, 0, 0.828205,0.325065) , 
0, 168.652, 1, 0, 0.751945,0.269676) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0239779,-0.00539281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180492,0.00317901) , 
9, 0.992351, 1, 0, 0.0595386,0.0130957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.454788,0.0274509) , 
2, 40.0416, 1, 0, 0.0861398,0.0403162) , 
7, 234.843, 1, 0, 0.505659,0.184834)    );
  // itree = 51
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.840748,0.00167718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210717,0.000157638) , 
7, 201.859, 1, 0, 0.787272,0.286049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.316643,0.00636237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0722148,-0.00232671) , 
4, 0.161394, 1, 0, 0.182193,0.0790723) , 
6, 144.647, 1, 0, 0.716939,0.261991) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0242488,-0.00619915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121704,0.00688053) , 
4, 0.201861, 1, 0, 0.0763363,0.0266119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508934,0.00462873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0653733,0.0179367) , 
1, 230.278, 1, 0, 0.279936,0.190731) , 
9, 0.992351, 1, 0, 0.126463,0.067018) , 
8, 116.197, 1, 0, 0.506373,0.192462)    );
  // itree = 52
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578315,0.000775078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848294,0.00180439) , 
8, 65.1732, 1, 0, 0.812168,0.308746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.115601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211758,0.0188434) , 
9, 0.977881, 1, 0, 0.0844139,0.0299684) , 
5, 183.569, 1, 0, 0.740513,0.281298) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180355,0.00390295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541613,0.00676065) , 
2, 20.0517, 1, 0, 0.237343,0.143874) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0977191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0974632) , 
1, 287.8, 1, 0, 0,-0.0081687) , 
7, 392.759, 1, 0, 0.153741,0.0903183) , 
8, 116.197, 1, 0, 0.538152,0.215434)    );
  // itree = 53
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0972938,-0.00748773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544837,0.00104407) , 
3, 0.282548, 1, 0, 0.3183,-0.016102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743903,0.00186757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0700545,0.00317956) , 
5, 235.666, 1, 0, 0.6916,0.275529) , 
9, 0.884444, 1, 0, 0.660636,0.251339) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235971,0.0140954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0355615,0.0355938) , 
7, 362.879, 1, 0, 0.130482,0.106178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.097598) , 
7, 411.946, 1, 0, 0,-0.0156593) , 
3, 0.282452, 1, 0, 0.0874521,0.0659987) , 
8, 148.72, 1, 0, 0.508199,0.202048)    );
  // itree = 54
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486792,-0.00011185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828102,0.00176301) , 
8, 62.1079, 1, 0, 0.797812,0.295078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.031748,-0.0136935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244477,0.00706435) , 
2, 19.0214, 1, 0, 0.112962,0.0289514) , 
7, 221.844, 1, 0, 0.667923,0.244605) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.104442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0978131) , 
7, 431.835, 1, 0, 0,-0.0168679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266861,0.0113521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103808) , 
9, 0.991355, 1, 0, 0.0865716,0.0626323) , 
9, 0.985165, 1, 0, 0.0270567,0.00797872) , 
8, 148.72, 1, 0, 0.511664,0.186909)    );
  // itree = 55
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647168,0.00110991) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149081,-0.00067613) , 
8, 97.5877, 1, 0, 0.457703,0.0980507) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808727,0.00206403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.386759,0.00166825) , 
6, 135.295, 1, 0, 0.742131,0.316017) , 
0, 211.347, 1, 0, 0.649564,0.24508) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.09927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100008) , 
8, 205.422, 1, 0, 0,-0.00765237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244925,0.0224228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0962388) , 
1, 301.152, 1, 0, 0.153236,0.135564) , 
2, 17.9658, 1, 0, 0.0563277,0.0449922) , 
7, 319.588, 1, 0, 0.511887,0.198644)    );
  // itree = 56
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469772,0.000955578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824493,0.00185457) , 
0, 173.305, 1, 0, 0.744674,0.280579) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.334571,0.00108058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.133179) , 
3, 0.161456, 1, 0, 0.177281,-0.0342321) , 
5, 155.531, 1, 0, 0.675894,0.242418) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0987128) , 
8, 209.579, 1, 0, 0,-0.0134039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164207,0.0275019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101336) , 
3, 0.242147, 1, 0, 0.101856,0.0890413) , 
9, 0.934826, 1, 0, 0.0622815,0.049238) , 
7, 296.099, 1, 0, 0.511245,0.190582)    );
  // itree = 57
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308194,-0.000612818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601137,0.00119955) , 
0, 111.369, 1, 0, 0.546158,0.129431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.387883,-0.000981201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.881028,0.0019466) , 
8, 62.9803, 1, 0, 0.850388,0.341492) , 
0, 210.089, 1, 0, 0.744746,0.267855) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.113253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0744217,0.00774618) , 
1, 223.698, 1, 0, 0.044597,0.0130341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.115358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292431,0.0169125) , 
9, 0.995781, 1, 0, 0.199955,0.165208) , 
9, 0.992351, 1, 0, 0.079315,0.0470406) , 
7, 239.017, 1, 0, 0.505332,0.188409)    );
  // itree = 58
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290386,-0.00296494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247223,0.000152429) , 
7, 178.68, 1, 0, 0.268662,-0.105486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837221,0.00168447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26162,0.00298138) , 
7, 205.914, 1, 0, 0.685619,0.268754) , 
8, 59.3003, 1, 0, 0.658516,0.244428) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325111,0.0409898) , 
6, 80.6693, 1, 0, 0.170195,0.155911) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122818,0.0460528) , 
3, 0.484294, 1, 0, 0.0246396,0.013472) , 
6, 98.9281, 1, 0, 0.0686378,0.0565281) , 
8, 152.035, 1, 0, 0.513683,0.198293)    );
  // itree = 59
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679791,0.00123378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217639,0.00063444) , 
8, 97.5198, 1, 0, 0.488989,0.125201) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779849,0.00210897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103892) , 
7, 290.232, 1, 0, 0.740881,0.320494) , 
0, 205.761, 1, 0, 0.658043,0.256269) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222308,0.0340833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.098924) , 
8, 220.877, 1, 0, 0.110811,0.100837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0983748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0987709) , 
8, 190.118, 1, 0, 0,-0.00553307) , 
4, 0.161489, 1, 0, 0.0465989,0.0391985) , 
7, 320.987, 1, 0, 0.518499,0.206729)    );
  // itree = 60
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729249,0.0014122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156775,-0.00121799) , 
8, 97.9641, 1, 0, 0.541365,0.144601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.838574,0.00197375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169542,0.00412777) , 
5, 167.454, 1, 0, 0.773518,0.324288) , 
0, 201.815, 1, 0, 0.69806,0.265883) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0770748,0.0326342) , 
4, 0.15339, 1, 0, 0.0383355,0.0285543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.380534,0.0416776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0950926) , 
7, 391.295, 1, 0, 0.180398,0.171217) , 
4, 0.322977, 1, 0, 0.0860309,0.0764515) , 
7, 291.925, 1, 0, 0.5371,0.216064)    );
  // itree = 61
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278,-0.00121741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485287,0.00120869) , 
5, 99.0581, 1, 0, 0.413698,0.0550711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.882639,0.00187422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226117,0.00346715) , 
7, 235.009, 1, 0, 0.781731,0.326567) , 
0, 212.375, 1, 0, 0.674589,0.247528) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0432814,0.0228661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.228776,0.0598669) , 
9, 0.98516, 1, 0, 0.106593,0.0989649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0963303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0974013) , 
8, 217.204, 1, 0, 0,-0.00591588) , 
6, 175.428, 1, 0, 0.0541097,0.0473247) , 
7, 311.813, 1, 0, 0.530746,0.201116)    );
  // itree = 62
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.407957,0.000331413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696722,0.00154576) , 
0, 160.449, 1, 0, 0.517985,0.115207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607744,0.000735847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875619,0.00187859) , 
8, 65.8501, 1, 0, 0.847723,0.334959) , 
0, 186.026, 1, 0, 0.765971,0.280475) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.112447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0983961) , 
7, 289.159, 1, 0, 0,-0.0378581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.167834,0.0144441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0999147) , 
1, 432.994, 1, 0, 0.123305,0.0986799) , 
8, 119.512, 1, 0, 0.0996899,0.0725309) , 
7, 239.017, 1, 0, 0.532124,0.207493)    );
  // itree = 63
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.355122,-0.000763608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829856,0.00189312) , 
8, 56.1856, 1, 0, 0.790517,0.306442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.147796,0.00101735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404453,0.0030583) , 
9, 0.985072, 1, 0, 0.247336,0.104969) , 
8, 97.29, 1, 0, 0.595457,0.234092) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0965801) , 
7, 389.919, 1, 0, 0,-0.00657428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101001,0.0562951) , 
1, 579.166, 1, 0, 0.0223746,0.0164993) , 
5, 255.842, 1, 0, 0.501432,0.198391)    );
  // itree = 64
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366765,0.000168689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663254,0.00302976) , 
2, 15.8019, 1, 0, 0.427645,0.0813057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922378,0.00184776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366614,0.00323825) , 
7, 198.486, 1, 0, 0.753078,0.317629) , 
0, 215.831, 1, 0, 0.648348,0.241576) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.097901) , 
7, 389.979, 1, 0, 0,-0.00465847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.332769,0.0547689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0973824) , 
7, 554.71, 1, 0, 0.196621,0.189692) , 
0, 490.981, 1, 0, 0.0760991,0.0705617) , 
7, 317.074, 1, 0, 0.506247,0.19911)    );
  // itree = 65
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635974,0.000928137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.288913,-0.00188139) , 
6, 73.3828, 1, 0, 0.451195,-0.00833746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846792,0.00170951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0982358,-0.00180397) , 
8, 115.926, 1, 0, 0.791397,0.293683) , 
1, 93.8703, 1, 0, 0.75101,0.257829) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0134529,-0.00426594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171047,0.0136146) , 
9, 0.992351, 1, 0, 0.0498058,0.0227726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32256,0.0105704) , 
4, 0.726699, 1, 0, 0.0725812,0.0440417) , 
7, 234.843, 1, 0, 0.501176,0.179101)    );
  // itree = 66
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675201,0.00113705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122277,-0.000654786) , 
7, 186.376, 1, 0, 0.465082,0.101012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757094,0.00216858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102509) , 
8, 174.869, 1, 0, 0.716645,0.317131) , 
0, 228.552, 1, 0, 0.619685,0.233832) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0977757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0951436) , 
4, 0.20182, 1, 0, 0,-0.00541508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0980803) , 
1, 349.574, 1, 0, 0,-0.00180406) , 
8, 205.906, 1, 0, 0,-0.00307879) , 
7, 356.411, 1, 0, 0.504741,0.189888)    );
  // itree = 67
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1735,-0.00109197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.169692) , 
4, 0.161129, 1, 0, 0.106995,-0.110087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636489,0.00137717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153215,-0.00160491) , 
6, 69.5718, 1, 0, 0.366113,0.0548958) , 
4, 0.282605, 1, 0, 0.223044,-0.0361976) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.86861,0.00169043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297858,0.0028405) , 
7, 201.445, 1, 0, 0.669132,0.259706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111772,0.0145709) , 
9, 0.985165, 1, 0, 0.0342993,0.0247156) , 
8, 152.035, 1, 0, 0.507195,0.199763) , 
0, 182.181, 1, 0, 0.450405,0.152604)    );
  // itree = 68
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488332,0.000192308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855256,0.00178951) , 
5, 81.3627, 1, 0, 0.813575,0.296651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.122431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273509,0.00169289) , 
2, 11.0352, 1, 0, 0.162171,0.0173677) , 
7, 199.804, 1, 0, 0.649659,0.226374) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0994789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0993054) , 
8, 152.544, 1, 0, 0,-0.00426997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.309454,0.0356869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0995021) , 
9, 0.913223, 1, 0, 0.119151,0.112435) , 
3, 0.403729, 1, 0, 0.0307525,0.025851) , 
7, 302.941, 1, 0, 0.488087,0.174025)    );
  // itree = 69
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568977,0.00052253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850962,0.0017251) , 
8, 60.5158, 1, 0, 0.821315,0.299232) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219874,0.0205746) , 
9, 0.985037, 1, 0, 0.0732263,0.0353187) , 
7, 225.81, 1, 0, 0.732607,0.267937) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.117857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319476,0.00656595) , 
6, 73.6134, 1, 0, 0.20062,0.133478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.113644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0518232,0.00419488) , 
9, 0.949139, 1, 0, 0.0278668,0.00110048) , 
6, 99.1275, 1, 0, 0.0868633,0.0463085) , 
8, 116.197, 1, 0, 0.51478,0.193176)    );
  // itree = 70
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578561,0.00141746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736034,0.0022523) , 
0, 248.112, 1, 0, 0.657015,0.254589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0995812) , 
7, 332.58, 1, 0, 0,-0.00395938) , 
8, 196.905, 1, 0, 0.595746,0.230479) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0986075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0967078) , 
4, 0.20182, 1, 0, 0,-0.0057809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0990591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0974973) , 
1, 289.814, 1, 0, 0,-0.0013397) , 
8, 152.035, 1, 0, 0,-0.00281674) , 
5, 255.842, 1, 0, 0.502182,0.193839)    );
  // itree = 71
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351014,-0.000719411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595108,0.00122045) , 
4, 0.161489, 1, 0, 0.535992,0.113841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.896594,0.00173834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297486,0.00258791) , 
7, 197.717, 1, 0, 0.755822,0.294394) , 
0, 177.215, 1, 0, 0.715979,0.261669) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0477177,-0.00335985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39113,0.00604181) , 
0, 314.633, 1, 0, 0.155449,0.0859872) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0962788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0983851) , 
8, 208.934, 1, 0, 0,-0.00115592) , 
7, 374.277, 1, 0, 0.0883516,0.0483731) , 
8, 116.197, 1, 0, 0.499059,0.18795)    );
  // itree = 72
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17963,-0.00325807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737657,0.00199719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0886027,-0.00218874) , 
5, 162.754, 1, 0, 0.705705,0.291918) , 
5, 70.5758, 1, 0, 0.681696,0.27243) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0832784,0.0155558) , 
2, 18.6581, 1, 0, 0.0285795,0.0143512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.439801,0.0104749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.106236) , 
3, 0.570949, 1, 0, 0.202984,0.172377) , 
3, 0.484368, 1, 0, 0.0665815,0.0487844) , 
5, 184.451, 1, 0, 0.528483,0.216724)    );
  // itree = 73
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484741,0.00122711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218897,-0.00278811) , 
4, 0.201742, 1, 0, 0.370886,0.000836281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799696,0.00181819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14414,0.00656008) , 
5, 162.199, 1, 0, 0.685948,0.275121) , 
8, 65.485, 1, 0, 0.65368,0.247029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228514,0.0364582) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.096043,0.0142741) , 
9, 0.988589, 1, 0, 0.0306133,0.0234237) , 
9, 0.884493, 1, 0, 0.0681903,0.0604416) , 
8, 152.035, 1, 0, 0.504493,0.199485)    );
  // itree = 74
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589015,0.000841152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127739,-0.00617374) , 
8, 88.1937, 1, 0, 0.403733,-0.00869287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601746,0.000619444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.898181,0.00175143) , 
8, 57.8847, 1, 0, 0.875696,0.335171) , 
0, 145.412, 1, 0, 0.825724,0.298763) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.297091,0.00739708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120807,0.00317692) , 
1, 117.03, 1, 0, 0.150438,0.0867369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672596,0.004295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.11105) , 
6, 182.711, 1, 0, 0.407883,0.280506) , 
2, 25.3244, 1, 0, 0.190737,0.117068) , 
7, 201.581, 1, 0, 0.53903,0.216728)    );
  // itree = 75
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244365,0.000166136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.160278) , 
3, 0.160921, 1, 0, 0.12838,-0.0678559) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22143,-0.000475017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514263,0.00158076) , 
2, 10.256, 1, 0, 0.393441,0.0941103) , 
9, 0.93474, 1, 0, 0.305118,0.0401401) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799426,0.00180172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.222738,0.00381655) , 
5, 155.875, 1, 0, 0.689869,0.274536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144038,0.196334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.096804) , 
4, 0.161489, 1, 0, 0.0604384,0.0589693) , 
7, 350.678, 1, 0, 0.552428,0.227466) , 
0, 167.733, 1, 0, 0.510124,0.195423)    );
  // itree = 76
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632478,0.00188462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365404,-0.000201464) , 
4, 0.201742, 1, 0, 0.522461,0.134879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.897893,0.00182157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.324993,0.00235414) , 
7, 194.128, 1, 0, 0.764317,0.300836) , 
1, 117.474, 1, 0, 0.701627,0.257819) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190224,0.00848604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0600742,-0.00114566) , 
9, 0.97796, 1, 0, 0.146857,0.0853468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0949553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0979367) , 
8, 212.37, 1, 0, 0,-0.000909915) , 
7, 383.521, 1, 0, 0.0845685,0.0487615) , 
8, 119.512, 1, 0, 0.490753,0.186376)    );
  // itree = 77
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191888,-0.000621126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620277,0.00145502) , 
0, 139.216, 1, 0, 0.510764,0.152284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729117,0.00183383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801523,0.00301682) , 
2, 20.3461, 1, 0, 0.743445,0.313655) , 
0, 220.184, 1, 0, 0.654977,0.2523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133209,0.0683506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0969613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0889232,0.0253664) , 
9, 0.992353, 1, 0, 0.0166935,0.0143814) , 
6, 99.8003, 1, 0, 0.0406669,0.0380574) , 
7, 315.988, 1, 0, 0.509689,0.201631)    );
  // itree = 78
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.860186,0.00172598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318246,-0.000556222) , 
7, 195.172, 1, 0, 0.821735,0.301973) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.108397,-0.003336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489702,0.00262102) , 
9, 0.992244, 1, 0, 0.239194,0.0407071) , 
8, 103.024, 1, 0, 0.742807,0.266575) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.103322,0.0141527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.354807,0.0109865) , 
9, 0.99225, 1, 0, 0.166981,0.133261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.106225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100269) , 
8, 196.577, 1, 0, 0,-0.00322008) , 
1, 287.8, 1, 0, 0.101214,0.0795068) , 
7, 239.017, 1, 0, 0.51231,0.199369)    );
  // itree = 79
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.341196,0.000702298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0953166,-0.00473105) , 
2, 9.13949, 1, 0, 0.233198,-0.0151606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485175,0.00288615) , 
2, 16.7205, 1, 0, 0.278187,0.0321423) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791117,0.00200607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39333,0.00156021) , 
6, 119.863, 1, 0, 0.695191,0.281355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.149963,0.172618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.097355) , 
4, 0.161456, 1, 0, 0.0620539,0.0605981) , 
7, 361.075, 1, 0, 0.565904,0.236276) , 
0, 181.376, 1, 0, 0.512368,0.198292)    );
  // itree = 80
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.32062,-4.05334e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597957,0.00175091) , 
3, 0.241626, 1, 0, 0.463394,0.11431) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481366,0.00106751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736066,0.00221448) , 
1, 121.052, 1, 0, 0.694643,0.290102) , 
0, 215.831, 1, 0, 0.606083,0.22278) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.295485,0.0958629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0545614,0.162501) , 
9, 0.920415, 1, 0, 0.15057,0.146981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0969143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0998204) , 
8, 152.035, 1, 0, 0,-0.000986649) , 
4, 0.161489, 1, 0, 0.0629404,0.0608658) , 
7, 319.588, 1, 0, 0.467222,0.181385)    );
  // itree = 81
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253053,-0.00205081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684804,0.00128601) , 
1, 94.2617, 1, 0, 0.469692,0.0415028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715086,0.00200065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0416346,0.183066) , 
8, 189.995, 1, 0, 0.622116,0.254901) , 
1, 109.773, 1, 0, 0.598024,0.221172) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0588043,0.000819593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438473,0.0037878) , 
4, 0.130725, 1, 0, 0.220493,0.122698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.130828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11241,0.00696602) , 
4, 0.619042, 1, 0, 0.0213311,-0.00969175) , 
4, 0.161489, 1, 0, 0.108389,0.048179) , 
6, 138.81, 1, 0, 0.471185,0.176358)    );
  // itree = 82
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0992861,-0.00712024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532749,0.00137294) , 
4, 0.121045, 1, 0, 0.483024,0.130925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908225,0.00180097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.276362,0.00243704) , 
7, 205.939, 1, 0, 0.775981,0.301897) , 
0, 216.079, 1, 0, 0.670543,0.240362) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308837,0.0861219) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0980292,0.111264) , 
2, 26.3628, 1, 0, 0.0150883,0.0114384) , 
4, 0.0807444, 1, 0, 0.0455548,0.0416487) , 
7, 291.925, 1, 0, 0.501567,0.186637)    );
  // itree = 83
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372484,-0.000753183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634567,0.00155357) , 
7, 152.92, 1, 0, 0.546229,0.117808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705283,0.00103567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930339,0.00179775) , 
1, 100.37, 1, 0, 0.907609,0.345063) , 
0, 178.688, 1, 0, 0.835435,0.299676) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.11622,-0.000862832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.323026,0.00364623) , 
8, 85.155, 1, 0, 0.289849,0.154968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0983004) , 
7, 368.431, 1, 0, 0,-0.00144965) , 
8, 210.872, 1, 0, 0.207224,0.110379) , 
7, 193.807, 1, 0, 0.534773,0.209079)    );
  // itree = 84
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599918,0.000979841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893871,0.00169272) , 
0, 210.089, 1, 0, 0.782522,0.259905) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.106805,0.000781974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426464,0.00265192) , 
3, 0.403722, 1, 0, 0.204745,0.0787469) , 
7, 199.867, 1, 0, 0.613536,0.206921) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.098614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0994747) , 
8, 216.72, 1, 0, 0,-0.00184038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0685083,0.125405) , 
9, 0.992351, 1, 0, 0.014222,0.0120343) , 
7, 311.813, 1, 0, 0.463744,0.158211)    );
  // itree = 85
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202951,-0.00102492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20866,-0.00117757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644533,0.00201366) , 
9, 0.870057, 1, 0, 0.625161,0.247515) , 
0, 107.744, 1, 0, 0.599174,0.229415) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0983313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0987129) , 
1, 287.8, 1, 0, 0,-0.003086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0955168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0988598) , 
8, 152.035, 1, 0, 0,-0.000390958) , 
4, 0.161489, 1, 0, 0,-0.00142225) , 
7, 356.411, 1, 0, 0.483414,0.184817)    );
  // itree = 86
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.295664,-0.00152989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.820255,0.00171876) , 
8, 59.2292, 1, 0, 0.776016,0.27393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0673488,-0.00675641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355812,0.00251739) , 
1, 159.358, 1, 0, 0.283867,0.0984911) , 
8, 99.9974, 1, 0, 0.632463,0.222757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.102866,0.105502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0983401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0971236) , 
4, 0.161489, 1, 0, 0,-0.00153777) , 
9, 0.884532, 1, 0, 0.0189394,0.0172781) , 
7, 319.588, 1, 0, 0.487282,0.174134)    );
  // itree = 87
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511632,0.000725186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798372,0.00183544) , 
1, 100.052, 1, 0, 0.748751,0.272913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.314111,5.1114e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530169,0.00214339) , 
3, 0.282605, 1, 0, 0.398177,0.0890758) , 
8, 96.2261, 1, 0, 0.694248,0.244332) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.117092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.042483,0.00493203) , 
5, 217.584, 1, 0, 0.0195537,-0.0166583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.326762,0.00697108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0954879) , 
7, 386.88, 1, 0, 0.138837,0.107658) , 
6, 157.783, 1, 0, 0.0705437,0.0364834) , 
8, 119.41, 1, 0, 0.479971,0.172925)    );
  // itree = 88
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507171,0.000215947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762714,0.00156426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.930202,0.00179098) , 
0, 239.925, 1, 0, 0.843996,0.312425) , 
1, 87.542, 1, 0, 0.813478,0.286601) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.118752,0.00158234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.125905) , 
9, 0.963495, 1, 0, 0.0688874,0.00272097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.032365,0.0123474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30326,0.00632216) , 
9, 0.970728, 1, 0, 0.160824,0.112173) , 
0, 293.166, 1, 0, 0.119803,0.0633372) , 
7, 199.879, 1, 0, 0.496138,0.184463)    );
  // itree = 89
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736008,0.00137772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185386,0.00120214) , 
8, 94.3189, 1, 0, 0.52642,0.155536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.790294,0.00206716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116039,0.0172029) , 
7, 273.14, 1, 0, 0.677563,0.29393) , 
0, 258.956, 1, 0, 0.593907,0.21733) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0970818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0996216) , 
8, 220.877, 1, 0, 0,-0.00215036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0957902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0994349) , 
8, 210.872, 1, 0, 0,-0.000267478) , 
4, 0.161489, 1, 0, 0,-0.000973929) , 
7, 349.025, 1, 0, 0.471219,0.172233)    );
  // itree = 90
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736153,0.00136718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212962,-0.000297498) , 
8, 94.0667, 1, 0, 0.583327,0.159305) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496051,9.55603e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892638,0.00197804) , 
8, 71.1156, 1, 0, 0.855772,0.341706) , 
0, 229.677, 1, 0, 0.740261,0.264372) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0301839,0.00370983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.208845,0.00860638) , 
4, 0.645824, 1, 0, 0.0500522,0.0312902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.357056,0.00818782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103764) , 
1, 307.542, 1, 0, 0.247524,0.203492) , 
9, 0.98516, 1, 0, 0.115415,0.0882891) , 
7, 239.017, 1, 0, 0.505908,0.198331)    );
  // itree = 91
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197042,-0.00395816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.836866,0.0016688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423242,0.00167127) , 
5, 133.82, 1, 0, 0.72531,0.262191) , 
8, 51.2681, 1, 0, 0.700709,0.242775) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0824257,0.000610535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220493,0.00761741) , 
1, 219.975, 1, 0, 0.162975,0.103231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0986241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100287,0.182129) , 
9, 0.992353, 1, 0, 0.0216712,0.0207872) , 
8, 208.934, 1, 0, 0.101651,0.0674514) , 
8, 116.197, 1, 0, 0.481428,0.178599)    );
  // itree = 92
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345329,-0.000426948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.786729,0.00172826) , 
8, 56.2575, 1, 0, 0.746599,0.265875) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.14283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352574,0.00330787) , 
1, 148.211, 1, 0, 0.290263,0.129381) , 
8, 97.4391, 1, 0, 0.588915,0.21871) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0996125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0990622) , 
7, 338.713, 1, 0, 0,-0.00182453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0984692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0968853) , 
4, 0.161489, 1, 0, 0,-0.000235472) , 
7, 434.583, 1, 0, 0,-0.000885493) , 
8, 202.273, 1, 0, 0.495299,0.183803)    );
  // itree = 93
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620747,0.00100173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.864899,0.00189832) , 
1, 112.383, 1, 0, 0.803357,0.297118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164691,0.00278321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399063,0.00391403) , 
9, 0.985061, 1, 0, 0.255971,0.13199) , 
8, 99.127, 1, 0, 0.615816,0.240543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119754,0.157972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0984128) , 
8, 194.828, 1, 0, 0,-0.00128455) , 
1, 153.224, 1, 0, 0.0229084,0.0211727) , 
5, 252.611, 1, 0, 0.522713,0.206096)    );
  // itree = 94
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212671,-0.00285666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621355,0.00285504) , 
1, 106.35, 1, 0, 0.401951,0.0476178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772188,0.00192723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181044,0.00387131) , 
5, 158.566, 1, 0, 0.658825,0.269934) , 
8, 68.6602, 1, 0, 0.626416,0.241885) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.123988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526017,0.00354194) , 
0, 257.449, 1, 0, 0.317949,0.189757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.097862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0988447) , 
8, 169.463, 1, 0, 0,-0.000979998) , 
7, 301.406, 1, 0, 0.0995517,0.058741) , 
1, 222.249, 1, 0, 0.495175,0.196264)    );
  // itree = 95
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191915,-0.00180857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66989,0.00177682) , 
0, 142.118, 1, 0, 0.416573,0.0761642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.468475,0.000425187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744345,0.00209933) , 
8, 65.485, 1, 0, 0.714918,0.28724) , 
0, 165.46, 1, 0, 0.67181,0.256741) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0336265,0.352443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338716,0.0215319) , 
2, 14.7226, 1, 0, 0.119134,0.109078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0963276) , 
4, 0.161489, 1, 0, 0,-0.000226313) , 
7, 415.129, 1, 0, 0.06654,0.0608236) , 
8, 151.933, 1, 0, 0.528295,0.210288)    );
  // itree = 96
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675978,0.00124871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172424,0.000252882) , 
8, 98.4875, 1, 0, 0.488664,0.127211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.864324,0.00191322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240738,0.00176532) , 
5, 156.379, 1, 0, 0.765111,0.304815) , 
0, 216.079, 1, 0, 0.670195,0.243836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.323357,0.0730499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190311,0.121688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0162108,0.0449182) , 
1, 148.567, 1, 0, 0.0469434,0.0452533) , 
4, 0.0807436, 1, 0, 0.0767377,0.0746367) , 
7, 315.988, 1, 0, 0.531367,0.204255)    );
  // itree = 97
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329781,-0.00163016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504571,0.000838396) , 
0, 228.698, 1, 0, 0.419799,-0.0156315) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82565,0.0016883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298016,0.00242062) , 
8, 100.209, 1, 0, 0.666036,0.251329) , 
8, 63.7917, 1, 0, 0.642853,0.226194) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0973101,0.193763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0999876) , 
6, 90.8541, 1, 0, 0.0155719,0.012531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171203,0.514599) , 
4, 0.564435, 1, 0, 0.0379926,0.0351051) , 
7, 291.925, 1, 0, 0.467207,0.170703)    );
  // itree = 98
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223671,-0.00223091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602689,0.00157752) , 
2, 14.2872, 1, 0, 0.414612,0.0456912) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690187,0.0021649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0960209) , 
7, 403.4, 1, 0, 0.64666,0.280321) , 
1, 109.963, 1, 0, 0.605522,0.238725) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0659109,0.112171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.457558,0.109093) , 
5, 247.993, 1, 0, 0.195719,0.18462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.095362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0983747) , 
4, 0.161456, 1, 0, 0,-0.000127541) , 
7, 410.421, 1, 0, 0.086815,0.0818205) , 
1, 286.343, 1, 0, 0.519076,0.212576)    );
  // itree = 99
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48967,0.00134722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138557,-0.00552773) , 
3, 0.161487, 1, 0, 0.325352,-0.0169055) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813392,0.00183462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.524525,0.00150421) , 
8, 90.7418, 1, 0, 0.736698,0.274362) , 
8, 59.2189, 1, 0, 0.700681,0.248859) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.112377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.290346,0.00868341) , 
5, 124.9, 1, 0, 0.207847,0.153606) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0965756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0958698) , 
1, 287.8, 1, 0, 0,-0.000258021) , 
7, 398.69, 1, 0, 0.128728,0.0950362) , 
8, 119.41, 1, 0, 0.491521,0.192607)    );
  // itree = 100
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619726,0.00107344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250325,-0.0015683) , 
8, 81.455, 1, 0, 0.442881,0.02896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742483,0.00107999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92201,0.00180496) , 
8, 71.9322, 1, 0, 0.888274,0.321629) , 
0, 172.874, 1, 0, 0.81338,0.272416) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0530438,0.00272862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190973,0.00758716) , 
9, 0.992347, 1, 0, 0.0838666,0.042663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.426141,0.00394977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.111841) , 
6, 159.292, 1, 0, 0.300914,0.185234) , 
3, 0.403729, 1, 0, 0.144717,0.0826335) , 
7, 199.879, 1, 0, 0.507668,0.185648)    );
  // itree = 101
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109119,-0.00314023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408311,0.00115585) , 
3, 0.24125, 1, 0, 0.258582,0.0130931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72069,0.00190084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0531907,0.0594262) , 
7, 352.969, 1, 0, 0.658081,0.263377) , 
0, 118.9, 1, 0, 0.631462,0.2467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0801376,0.00413798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.113145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0942458) , 
7, 385.579, 1, 0, 0,-0.00858629) , 
3, 0.121119, 1, 0, 0.023189,0.00939218) , 
6, 171.653, 1, 0, 0.54748,0.213936)    );
  // itree = 102
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362442,0.000571543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644484,0.0021763) , 
2, 11.453, 1, 0, 0.489345,0.1544) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816497,0.00182389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132546,0.00460655) , 
6, 158.256, 1, 0, 0.739141,0.281989) , 
0, 216.079, 1, 0, 0.640129,0.231416) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.107018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121516,0.167667) , 
6, 236.834, 1, 0, 0.0212374,0.0100813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388446,0.0163122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0954609) , 
7, 388.648, 1, 0, 0.166075,0.143341) , 
2, 18.9049, 1, 0, 0.0712155,0.0560644) , 
5, 184.297, 1, 0, 0.482359,0.182788)    );
  // itree = 103
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456156,0.000398068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759777,0.00184834) , 
5, 76.5198, 1, 0, 0.73035,0.269342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.07951,0.00269939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461178,0.0102637) , 
2, 20.4351, 1, 0, 0.170726,0.10767) , 
5, 160.198, 1, 0, 0.590758,0.229015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139493,0.0157728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0976523) , 
7, 462.615, 1, 0, 0,-0.00985327) , 
2, 10.9533, 1, 0, 0.0379768,0.0265045) , 
6, 173.918, 1, 0, 0.507745,0.198603)    );
  // itree = 104
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256196,-0.000147943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583595,0.00129851) , 
0, 124.689, 1, 0, 0.510677,0.137659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537266,0.00058339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817486,0.00199519) , 
8, 66.3547, 1, 0, 0.792824,0.312376) , 
0, 216.079, 1, 0, 0.692955,0.250533) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101972,0.137677) , 
4, 0.565206, 1, 0, 0.0135637,0.0102369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360214,0.115011) , 
2, 34.0676, 1, 0, 0.0520624,0.0485339) , 
7, 285.684, 1, 0, 0.51595,0.194744)    );
  // itree = 105
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.394097,0.000552938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603045,0.00164365) , 
3, 0.242233, 1, 0, 0.498024,0.130008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908028,0.00165419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.40821,0.00236659) , 
7, 197.89, 1, 0, 0.75331,0.279685) , 
0, 216.079, 1, 0, 0.654985,0.222036) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0799017,0.0324585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0994692) , 
6, 90.8603, 1, 0, 0.0128019,0.0104881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165646,0.110271) , 
4, 0.565211, 1, 0, 0.0357531,0.0329825) , 
7, 291.925, 1, 0, 0.479181,0.168362)    );
  // itree = 106
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312948,0.00113618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682665,0.0017211) , 
0, 180.553, 1, 0, 0.485706,0.153202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730153,0.00217538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0989895) , 
8, 240.794, 1, 0, 0.671471,0.285885) , 
0, 222.554, 1, 0, 0.602956,0.236948) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0960225) , 
5, 258.197, 1, 0, 0,-0.0160241) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0970543) , 
7, 490.384, 1, 0, 0,-0.00112136) , 
8, 152.035, 1, 0, 0,-0.0072718) , 
6, 173.918, 1, 0, 0.517575,0.202366)    );
  // itree = 107
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404173,0.000116308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735859,0.00191689) , 
5, 68.713, 1, 0, 0.718856,0.278244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103871) , 
7, 274.494, 1, 0, 0.675095,0.26011) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.462229,0.164007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0638587,0.0312644) , 
9, 0.898853, 1, 0, 0.20557,0.201957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0557509,0.226603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0963926) , 
1, 232.612, 1, 0, 0.0196394,0.0184746) , 
4, 0.121115, 1, 0, 0.0727184,0.0708546) , 
7, 311.813, 1, 0, 0.532527,0.215318)    );
  // itree = 108
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0862262,-0.00406463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390576,0.00174892) , 
0, 142.87, 1, 0, 0.192901,-0.0114549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621544,0.00269766) , 
2, 15.8019, 1, 0, 0.298369,0.0695845) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5832,0.00132975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675165,0.00215672) , 
2, 9.09905, 1, 0, 0.651102,0.25196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145834,0.129014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0950019) , 
4, 0.161489, 1, 0, 0.0609988,0.0597754) , 
7, 350.296, 1, 0, 0.510164,0.206059) , 
0, 165.989, 1, 0, 0.473018,0.182124)    );
  // itree = 109
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254069,-0.00173983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640545,0.00162913) , 
1, 98.6739, 1, 0, 0.602158,0.193751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704427,0.00207341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817036,0.00291416) , 
2, 22.8462, 1, 0, 0.728949,0.323738) , 
2, 11.6931, 1, 0, 0.663514,0.256654) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261373,0.0578954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0971095) , 
4, 0.201859, 1, 0, 0.152516,0.147824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101202) , 
9, 0.992353, 1, 0, 0,-0.000505499) , 
8, 216.72, 1, 0, 0.0716646,0.0691923) , 
7, 319.588, 1, 0, 0.527512,0.213577)    );
  // itree = 110
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47398,0.00117677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.147154) , 
5, 105.666, 1, 0, 0.290663,0.041603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776166,0.00181088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21599,0.006531) , 
8, 107.728, 1, 0, 0.610476,0.247483) , 
0, 141.975, 1, 0, 0.575418,0.224915) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0989308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103726) , 
7, 557.006, 1, 0, 0,-0.000180206) , 
8, 278.617, 1, 0, 0.526373,0.205729)    );
  // itree = 111
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.35444,-0.00049197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534977,0.00153837) , 
5, 110.383, 1, 0, 0.477534,0.106693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641264,0.00248055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0983253) , 
7, 423.672, 1, 0, 0.590856,0.266455) , 
2, 11.2131, 1, 0, 0.545374,0.202334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.117809,0.485638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0988531) , 
7, 462.151, 1, 0, 0,-0.000667406) , 
1, 230.278, 1, 0, 0.0216941,0.0206167) , 
8, 205.422, 1, 0, 0.455439,0.171127)    );
  // itree = 112
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25101,0.000200559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732145,0.00172253) , 
0, 135.104, 1, 0, 0.680594,0.240503) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0346423,0.0023138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184513,0.0509109) , 
2, 18.6581, 1, 0, 0.0890316,0.0640991) , 
5, 176.677, 1, 0, 0.564568,0.205904) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.112732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0997658) , 
8, 272.364, 1, 0, 0,-0.00144072) , 
8, 182.786, 1, 0, 0,-0.00552368) , 
1, 286.343, 1, 0, 0.471025,0.170873)    );
  // itree = 113
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61999,0.00128186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205936,-0.00281737) , 
4, 0.201861, 1, 0, 0.469161,0.0683272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798157,0.00170477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358613,0.00265044) , 
8, 97.953, 1, 0, 0.686119,0.257011) , 
1, 94.0668, 1, 0, 0.65769,0.232287) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225865,0.0264476) , 
0, 264.531, 1, 0, 0.139522,0.130261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115733,0.176522) , 
4, 0.524838, 1, 0, 0.0192686,0.0135715) , 
9, 0.913255, 1, 0, 0.0570678,0.0502507) , 
8, 148.72, 1, 0, 0.504079,0.185731)    );
  // itree = 114
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614193,0.00146447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219615,-0.0024634) , 
3, 0.120768, 1, 0, 0.382735,0.00437917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.581525,0.00127722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738209,0.00208382) , 
0, 209.657, 1, 0, 0.693303,0.263361) , 
1, 94.814, 1, 0, 0.659269,0.23498) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102223) , 
7, 315.003, 1, 0, 0,-0.00514174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114747,0.0285237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.111985) , 
0, 422.709, 1, 0, 0.0562034,0.0521869) , 
2, 18.8634, 1, 0, 0.0125418,0.00765113) , 
8, 152.035, 1, 0, 0.506078,0.181133)    );
  // itree = 115
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226451,-0.00230762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588603,0.00116146) , 
0, 121.048, 1, 0, 0.507596,0.0927884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815435,0.00169223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0985042) , 
5, 239.724, 1, 0, 0.756535,0.269965) , 
0, 191.022, 1, 0, 0.703713,0.23237) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.113852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122705,0.014944) , 
4, 0.524838, 1, 0, 0.0211124,-0.000188329) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375609,0.0294073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140228,0.0113199) , 
3, 0.232712, 1, 0, 0.176497,0.147684) , 
3, 0.20182, 1, 0, 0.103989,0.0786821) , 
8, 116.197, 1, 0, 0.484855,0.176284)    );
  // itree = 116
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738913,0.0013439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278376,-0.00082444) , 
8, 88.2466, 1, 0, 0.610704,0.148416) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750472,0.0010541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.948146,0.00177016) , 
1, 116.091, 1, 0, 0.920961,0.329653) , 
0, 210.089, 1, 0, 0.823996,0.27301) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132773,0.00828578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.119032) , 
4, 0.161487, 1, 0, 0.0567913,0.0214961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47367,0.00650775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0557277,0.137504) , 
6, 173.169, 1, 0, 0.291192,0.209549) , 
2, 17.2448, 1, 0, 0.136403,0.0853658) , 
7, 199.879, 1, 0, 0.521115,0.190354)    );
  // itree = 117
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256501,-0.00156095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498412,0.00152863) , 
2, 14.7226, 1, 0, 0.354987,0.0108653) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594416,0.00200498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790743,0.00379499) , 
2, 24.5422, 1, 0, 0.616983,0.260552) , 
1, 107.118, 1, 0, 0.578515,0.223891) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0992422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0966278) , 
1, 289.814, 1, 0, 0,-0.000323074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125507,0.388122) , 
9, 0.992351, 1, 0, 0.0245214,0.0241303) , 
7, 426.338, 1, 0, 0.502927,0.196635)    );
  // itree = 118
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329723,0.000707684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705358,0.00135701) , 
0, 186.373, 1, 0, 0.439046,0.100382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784278,0.00189418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0971027,0.0040705) , 
7, 273.056, 1, 0, 0.732309,0.286599) , 
0, 205.761, 1, 0, 0.639496,0.227664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135339,0.0580281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121346,0.0651099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0975598) , 
9, 0.884493, 1, 0, 0.0215494,0.0203605) , 
6, 98.9281, 1, 0, 0.0438144,0.0418009) , 
7, 311.813, 1, 0, 0.48768,0.180295)    );
  // itree = 119
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51223,0.000715051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803133,0.00183143) , 
1, 112.871, 1, 0, 0.729237,0.243533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.135446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331984,0.0026227) , 
0, 147.653, 1, 0, 0.271214,0.08569) , 
8, 99.2106, 1, 0, 0.623671,0.207153) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0566144,0.036509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469367,0.0183771) , 
0, 404.618, 1, 0, 0.148689,0.136754) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0968763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100933) , 
2, 19.3607, 1, 0, 0,-0.000161516) , 
7, 424.697, 1, 0, 0.0872628,0.0801912) , 
8, 148.72, 1, 0, 0.47356,0.171624)    );
  // itree = 120
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593465,0.0017714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200338,-0.00204255) , 
3, 0.12076, 1, 0, 0.353238,0.0302163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474982,0.00148073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678608,0.00242962) , 
0, 228.864, 1, 0, 0.611525,0.254866) , 
1, 92.4013, 1, 0, 0.585002,0.231797) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.167106,0.194858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0997857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0965847) , 
7, 466.549, 1, 0, 0,-0.000185611) , 
1, 287.8, 1, 0, 0.045399,0.0444069) , 
8, 213.571, 1, 0, 0.50309,0.203351)    );
  // itree = 121
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.19093,-0.00137964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52314,0.0014426) , 
2, 7.58432, 1, 0, 0.474854,0.136306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.843078,0.00185389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14838,0.0103024) , 
5, 170.247, 1, 0, 0.780523,0.299053) , 
0, 211.582, 1, 0, 0.680696,0.245902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304652,0.0551837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0176739,0.144829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124487,0.0500482) , 
9, 0.992254, 1, 0, 0.039447,0.0367832) , 
4, 0.0807436, 1, 0, 0.0666886,0.0635936) , 
7, 296.099, 1, 0, 0.513439,0.196241)    );
  // itree = 122
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.354305,-0.000812566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587621,0.00148251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.78414,0.00222289) , 
2, 11.3565, 1, 0, 0.699727,0.275417) , 
8, 59.5714, 1, 0, 0.680017,0.255896) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261388,0.109236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0528719,0.0334794) , 
5, 179.846, 1, 0, 0.0985853,0.0940269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0953929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0982289) , 
7, 560.636, 1, 0, 0,-0.000152195) , 
1, 428.79, 1, 0, 0.0691279,0.065886) , 
7, 311.813, 1, 0, 0.537019,0.211418)    );
  // itree = 123
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.452438,-0.000372412) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.450983,0.00131511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865729,0.00159529) , 
0, 133.834, 1, 0, 0.829972,0.282148) , 
7, 129.941, 1, 0, 0.809195,0.264534) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173711,0.0057852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575263,0.00365435) , 
2, 22.3748, 1, 0, 0.233737,0.140938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0881529,0.0618776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103271) , 
8, 211.356, 1, 0, 0.0370879,0.0353062) , 
7, 334.084, 1, 0, 0.141315,0.0912928) , 
7, 197.982, 1, 0, 0.498533,0.183951)    );
  // itree = 124
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706883,0.00174768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44387,0.000235866) , 
4, 0.161394, 1, 0, 0.568528,0.138562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908217,0.00162767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492604,0.00198015) , 
7, 190.304, 1, 0, 0.798878,0.287015) , 
1, 116.504, 1, 0, 0.740606,0.249461) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172839,0.000115887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125975,0.00460345) , 
3, 0.645824, 1, 0, 0.0289749,0.00905703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0865409,0.00371707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.539846,0.0247741) , 
2, 17.9395, 1, 0, 0.219647,0.180906) , 
9, 0.98516, 1, 0, 0.0917145,0.065603) , 
8, 116.197, 1, 0, 0.524577,0.188251)    );
  // itree = 125
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209742,-0.00335921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807964,0.00164503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400409,0.000557518) , 
8, 93.6955, 1, 0, 0.731566,0.243747) , 
8, 59.3206, 1, 0, 0.69228,0.212663) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.017974,-0.000321882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156442,0.0075346) , 
9, 0.985165, 1, 0, 0.0656826,0.0389743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520277,0.0149877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0597904,0.00469441) , 
6, 112.369, 1, 0, 0.211814,0.18011) , 
2, 18.6581, 1, 0, 0.100103,0.0722178) , 
8, 119.512, 1, 0, 0.489849,0.164653)    );
  // itree = 126
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231,-0.00232294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697108,0.00236948) , 
1, 98.8881, 1, 0, 0.463817,0.0913057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642254,0.00217257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10065) , 
1, 429.743, 1, 0, 0.598458,0.248469) , 
1, 114.676, 1, 0, 0.574236,0.220195) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222992,0.0150779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.1039) , 
8, 178.907, 1, 0, 0.124425,0.102822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0965686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.092984) , 
1, 295.204, 1, 0, 0,-0.00103067) , 
5, 259.024, 1, 0, 0.0675791,0.0553745) , 
6, 173.918, 1, 0, 0.495531,0.194591)    );
  // itree = 127
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.591617,0.00137006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212952,-0.000119752) , 
1, 140.555, 1, 0, 0.470267,0.118523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653477,0.000947631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.79806,0.00191108) , 
8, 67.8881, 1, 0, 0.780024,0.287755) , 
0, 216.079, 1, 0, 0.675102,0.230432) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0977932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151999,0.0774752) , 
2, 9.09905, 1, 0, 0.113703,0.108561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102557) , 
8, 152.035, 1, 0, 0,-0.002123) , 
6, 160.121, 1, 0, 0.0553169,0.0517251) , 
7, 296.099, 1, 0, 0.511616,0.183293)    );
  // itree = 128
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283472,-0.00266516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667008,0.00126962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.844258,0.00184059) , 
1, 145.105, 1, 0, 0.782691,0.275287) , 
8, 59.3052, 1, 0, 0.754826,0.24972) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.161821,0.0222496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0216021,0.024574) , 
5, 206.468, 1, 0, 0.0802118,0.0670074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416598,0.0302018) , 
2, 38.2391, 1, 0, 0.104227,0.0901419) , 
7, 239.017, 1, 0, 0.522157,0.192651)    );
  // itree = 129
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157833,-0.00209773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56052,0.00146845) , 
9, 0.920363, 1, 0, 0.47268,0.124455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.360624,9.93991e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66814,0.00243985) , 
1, 84.7954, 1, 0, 0.652428,0.282631) , 
0, 219.598, 1, 0, 0.592357,0.229769) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187027,0.0989187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.108939) , 
3, 0.242184, 1, 0, 0.118458,0.115134) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0995081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0931484) , 
6, 162.054, 1, 0, 0,-6.81254e-05) , 
1, 443.051, 1, 0, 0.0671383,0.0652254) , 
8, 216.873, 1, 0, 0.514304,0.205316)    );
  // itree = 130
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227368,0.000123159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624353,0.00188946) , 
0, 126.926, 1, 0, 0.58966,0.216564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793482,0.00394841) , 
2, 25.9696, 1, 0, 0.607957,0.242038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0778653,0.0186914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0950558) , 
7, 455.538, 1, 0, 0,-0.00744828) , 
2, 10.9533, 1, 0, 0.0193533,0.0115987) , 
6, 173.918, 1, 0, 0.52448,0.209357)    );
  // itree = 131
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.173764) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491654,0.00157979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618849,0.00235684) , 
0, 257.256, 1, 0, 0.556598,0.213696) , 
1, 67.4868, 1, 0, 0.538335,0.199191) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0979657) , 
7, 419.105, 1, 0, 0,-0.00129487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137099,0.0192333) , 
4, 0.444094, 1, 0, 0.0303251,0.0273165) , 
1, 348.193, 1, 0, 0.477611,0.178646)    );
  // itree = 132
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650194,0.00126912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.122922) , 
7, 196.463, 1, 0, 0.490742,0.125864) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683456,0.00121453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.784477,0.00201878) , 
8, 76.526, 1, 0, 0.763254,0.287871) , 
0, 220.549, 1, 0, 0.66424,0.229008) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.104255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123023,0.0744355) , 
4, 0.565206, 1, 0, 0.0175435,0.0144295) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302338,0.0543134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.106467) , 
9, 0.92036, 1, 0, 0.121167,0.116981) , 
3, 0.403729, 1, 0, 0.0435389,0.040156) , 
7, 299.699, 1, 0, 0.504238,0.180326)    );
  // itree = 133
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283094,-0.000905361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595568,0.00133877) , 
9, 0.891608, 1, 0, 0.557086,0.143663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703635,0.00105098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888325,0.00175019) , 
8, 72.6324, 1, 0, 0.85942,0.297316) , 
0, 221.304, 1, 0, 0.742541,0.237915) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.178149,0.0144914) , 
6, 89.7738, 1, 0, 0.142698,0.118353) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0950415) , 
7, 410.545, 1, 0, 0,-0.00369093) , 
6, 199.266, 1, 0, 0.10137,0.0830069) , 
7, 234.843, 1, 0, 0.48867,0.176579)    );
  // itree = 134
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778415,0.00178172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137537,-0.000259131) , 
5, 164.238, 1, 0, 0.738136,0.262267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0990438) , 
7, 340.86, 1, 0, 0,-0.0133803) , 
5, 207.592, 1, 0, 0.662375,0.233975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279375,0.0259732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133646,0.0175463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101988) , 
1, 147.55, 1, 0, 0.0151412,0.0101392) , 
4, 0.0807444, 1, 0, 0.0427714,0.0367574) , 
8, 148.72, 1, 0, 0.506851,0.184472)    );
  // itree = 135
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.152162) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715952,0.00176254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102952) , 
7, 278.181, 1, 0, 0.675945,0.245689) , 
0, 102.096, 1, 0, 0.647795,0.228934) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0992609) , 
1, 234.069, 1, 0, 0,-0.000690932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255324,0.0459179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0980878) , 
6, 151.132, 1, 0, 0.0808066,0.0759759) , 
2, 18.6581, 1, 0, 0.0266024,0.0245486) , 
7, 313.108, 1, 0, 0.495383,0.178788)    );
  // itree = 136
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435087,0.00110291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556422,0.00297691) , 
2, 18.1711, 1, 0, 0.471003,0.152933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485049,0.001347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68757,0.00226115) , 
1, 111.965, 1, 0, 0.64864,0.26468) , 
9, 0.970684, 1, 0, 0.559986,0.208909) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.111859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101406) , 
8, 196.577, 1, 0, 0,-0.00281133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119253,0.0958674) , 
4, 0.524732, 1, 0, 0.0215765,0.0184235) , 
1, 286.643, 1, 0, 0.471212,0.177502)    );
  // itree = 137
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709866,0.00173279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160748,0.00119207) , 
5, 152.98, 1, 0, 0.607155,0.206965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.84716,0.00341052) , 
2, 25.9696, 1, 0, 0.632311,0.237608) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212341,0.0504625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.117248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0999462) , 
1, 287.8, 1, 0, 0,-0.000918638) , 
9, 0.884532, 1, 0, 0.0428144,0.0411735) , 
7, 352.991, 1, 0, 0.516898,0.199149)    );
  // itree = 138
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561381,0.0013478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871735,0.00172922) , 
0, 229.274, 1, 0, 0.749878,0.250417) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.195864,0.0195293) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.107546) , 
5, 158.405, 1, 0, 0.0859998,0.0567146) , 
7, 237.204, 1, 0, 0.649529,0.221138) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.108058,0.217412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10567) , 
5, 146.159, 1, 0, 0.0148706,0.0135576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251847,0.190451) , 
2, 32.683, 1, 0, 0.0439053,0.0422281) , 
7, 311.813, 1, 0, 0.499842,0.176918)    );
  // itree = 139
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641248,0.0013993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110373,-0.0008177) , 
8, 87.2163, 1, 0, 0.347507,0.0769089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723882,0.00194598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0751667,0.314297) , 
5, 315.185, 1, 0, 0.67832,0.260866) , 
0, 191.462, 1, 0, 0.604332,0.219723) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.123298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.306372,0.00470306) , 
3, 0.115198, 1, 0, 0.143948,0.0942596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.11441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0940318) , 
7, 429.645, 1, 0, 0,-0.00897897) , 
3, 0.161491, 1, 0, 0.0657468,0.0381742) , 
6, 157.77, 1, 0, 0.503231,0.185643)    );
  // itree = 140
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.399502,5.27957e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386773,0.000116618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782917,0.00181788) , 
1, 69.8547, 1, 0, 0.767158,0.286513) , 
9, 0.87723, 1, 0, 0.746159,0.270401) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0948452,0.0115187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384098,0.0106158) , 
2, 14.5172, 1, 0, 0.185572,0.144621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.112323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0988767) , 
1, 298.376, 1, 0, 0,-0.000369641) , 
7, 392.759, 1, 0, 0.11292,0.0878569) , 
8, 116.197, 1, 0, 0.532782,0.208891)    );
  // itree = 141
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48283,0.00192902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258023,-0.00172245) , 
3, 0.161013, 1, 0, 0.369672,0.0274129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777561,0.00161769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0888721,0.103689) , 
7, 285.807, 1, 0, 0.721134,0.247982) , 
8, 55.9031, 1, 0, 0.690384,0.228684) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164208,0.00402589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216078,0.00375436) , 
3, 0.645824, 1, 0, 0.0413317,0.0199452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344899,0.00723571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0666198,0.00569705) , 
2, 10.978, 1, 0, 0.211947,0.160969) , 
9, 0.985165, 1, 0, 0.0980377,0.0668163) , 
8, 116.197, 1, 0, 0.470889,0.168704)    );
  // itree = 142
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.360241,-0.000291508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575506,0.00142486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736165,0.00193572) , 
9, 0.956307, 1, 0, 0.677007,0.245452) , 
5, 72.0614, 1, 0, 0.657394,0.228851) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.113846,0.112429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103774) , 
5, 191.581, 1, 0, 0.0276765,0.0261857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24934,0.0335793) , 
2, 34.0676, 1, 0, 0.0514317,0.048754) , 
7, 299.699, 1, 0, 0.493525,0.180148)    );
  // itree = 143
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526274,0.00153659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.170863) , 
2, 8.64445, 1, 0, 0.208002,-0.0581742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596,0.00157383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614535,0.00287913) , 
2, 14.7226, 1, 0, 0.60236,0.227187) , 
1, 92.4013, 1, 0, 0.568233,0.202493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.150924,0.0734063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0998191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0978304) , 
7, 465.8, 1, 0, 0,-0.000135077) , 
1, 301.235, 1, 0, 0.0452624,0.0435709) , 
8, 213.571, 1, 0, 0.486155,0.177551)    );
  // itree = 144
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605773,0.00124289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781523,0.00207121) , 
1, 131.259, 1, 0, 0.728558,0.270279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269461,0.0394238) , 
0, 330.177, 1, 0, 0.149474,0.142106) , 
7, 275.688, 1, 0, 0.584615,0.238419) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0966399) , 
7, 561.716, 1, 0, 0,-0.000146425) , 
1, 463.775, 1, 0, 0.548065,0.223504)    );
  // itree = 145
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.356684,0.00135366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0944056,-0.00393121) , 
2, 7.70874, 1, 0, 0.183568,-0.0145336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497396,0.00262267) , 
2, 16.0848, 1, 0, 0.2499,0.0402328) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704773,0.00178751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507887,0.0940893) , 
7, 313.621, 1, 0, 0.684824,0.278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.101448,0.317186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.099664) , 
4, 0.161456, 1, 0, 0.0400556,0.0389102) , 
7, 350.678, 1, 0, 0.536729,0.223084) , 
0, 184.293, 1, 0, 0.481272,0.187731)    );
  // itree = 146
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0721345,-0.00465246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.434067,0.00185791) , 
3, 0.242237, 1, 0, 0.261147,0.0602116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814349,0.00169943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391657,0.0029527) , 
5, 136.548, 1, 0, 0.660707,0.249919) , 
0, 141.975, 1, 0, 0.616409,0.228887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.108062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.107134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0976617) , 
1, 415.627, 1, 0, 0,-0.000195306) , 
7, 333.451, 1, 0, 0,-0.00246688) , 
1, 286.643, 1, 0, 0.525855,0.1949)    );
  // itree = 147
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526558,2.9008e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129619,-0.00684752) , 
6, 88.9625, 1, 0, 0.354525,-0.0825046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.507574,0.00190283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828324,0.00192437) , 
0, 215.783, 1, 0, 0.726929,0.276796) , 
8, 64.0463, 1, 0, 0.699263,0.250103) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127751,0.0402744) , 
0, 683.555, 1, 0, 0.0224817,0.0197405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265997,0.117663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0533763,0.0748125) , 
2, 9.65194, 1, 0, 0.116438,0.112229) , 
9, 0.98516, 1, 0, 0.0513063,0.0481147) , 
7, 289.65, 1, 0, 0.528437,0.196851)    );
  // itree = 148
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.133683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50972,0.00143585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750797,0.00180454) , 
0, 219.524, 1, 0, 0.659841,0.225926) , 
0, 95.0638, 1, 0, 0.634212,0.21255) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110966) , 
7, 303.9, 1, 0, 0,-0.00915156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0953591,0.449455) , 
6, 292.124, 1, 0, 0.0150994,0.00729529) , 
5, 184.297, 1, 0, 0.468842,0.157725)    );
  // itree = 149
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594501,0.00122868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373539,-0.000150731) , 
4, 0.242091, 1, 0, 0.522627,0.100867) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.832412,0.00189341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371832,0.0029068) , 
8, 92.1061, 1, 0, 0.595251,0.240746) , 
8, 72.7839, 1, 0, 0.583154,0.217446) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101698) , 
1, 349.574, 1, 0, 0,-0.000644217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127623,0.0925319) , 
4, 0.524732, 1, 0, 0.0219345,0.020611) , 
8, 207.723, 1, 0, 0.494825,0.186467)    );
  // itree = 150
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13259,-0.0138546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675819,0.00145204) , 
9, 0.970675, 1, 0, 0.496228,0.0879042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.845609,0.00171065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275753,0.00617721) , 
7, 199.753, 1, 0, 0.647976,0.260326) , 
8, 63.3123, 1, 0, 0.63329,0.24364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116604,0.0452193) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.104664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101119) , 
1, 234.069, 1, 0, 0,-0.000723079) , 
9, 0.884493, 1, 0, 0.0214159,0.0199338) , 
7, 352.991, 1, 0, 0.511573,0.199139)    );
  // itree = 151
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0996399,-0.0033467) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502188,0.00125949) , 
4, 0.318834, 1, 0, 0.264507,0.00653489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610175,0.00185754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518592,0.045294) , 
1, 356.025, 1, 0, 0.606596,0.235634) , 
9, 0.877231, 1, 0, 0.580564,0.2182) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0995315) , 
7, 370.02, 1, 0, 0,-0.000598645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103551,0.158747) , 
9, 0.992353, 1, 0, 0.0222885,0.0208615) , 
8, 210.872, 1, 0, 0.496125,0.188352)    );
  // itree = 152
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315445,-0.000244731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736301,0.00180397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.194176,0.0034561) , 
5, 165.059, 1, 0, 0.679207,0.248001) , 
9, 0.87723, 1, 0, 0.654331,0.229953) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.11573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487145,0.0416918) , 
6, 80.0763, 1, 0, 0.245305,0.235144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0987132,0.197958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102298) , 
1, 143.896, 1, 0, 0.0173238,0.0156209) , 
6, 93.092, 1, 0, 0.0608757,0.0575572) , 
7, 299.699, 1, 0, 0.493641,0.183273)    );
  // itree = 153
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48082,0.000364703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.90534,0.00163726) , 
8, 63.2432, 1, 0, 0.859679,0.281154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384782,5.67792e-05) , 
8, 96.6849, 1, 0, 0.811339,0.253008) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.147215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145976,0.00428441) , 
2, 10.9533, 1, 0, 0.0939969,0.0385031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474753,0.0052696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15036,0.00386844) , 
5, 132.791, 1, 0, 0.248679,0.158705) , 
9, 0.985154, 1, 0, 0.145688,0.0786719) , 
7, 193.807, 1, 0, 0.481152,0.166531)    );
  // itree = 154
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687633,0.00148498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857121,0.00186413) , 
2, 11.669, 1, 0, 0.776709,0.274927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.107447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334449,0.00939148) , 
9, 0.985072, 1, 0, 0.125568,0.0849276) , 
7, 227.241, 1, 0, 0.678468,0.24626) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138026,0.0551402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102439) , 
1, 125.972, 1, 0, 0.0185987,0.0166299) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260661,0.0387779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.143026) , 
6, 138.125, 1, 0, 0.118163,0.111644) , 
9, 0.98516, 1, 0, 0.0477536,0.0444524) , 
7, 296.099, 1, 0, 0.512683,0.193214)    );
  // itree = 155
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268385,-5.18374e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559433,0.00171941) , 
9, 0.956306, 1, 0, 0.451105,0.118373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933244,0.00162311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351887,0.00375465) , 
7, 196.832, 1, 0, 0.790686,0.278764) , 
0, 215.831, 1, 0, 0.68416,0.228449) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.117985) , 
2, 24.2429, 1, 0, 0,-0.00245409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.374937,0.0848375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.157785) , 
9, 0.913206, 1, 0, 0.150129,0.146034) , 
3, 0.403729, 1, 0, 0.0404435,0.0375473) , 
7, 299.699, 1, 0, 0.526333,0.181644)    );
  // itree = 156
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544322,0.00120857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.13389) , 
8, 96.9007, 1, 0, 0.31479,0.0622552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.517916,0.00178744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713449,0.00198237) , 
9, 0.985068, 1, 0, 0.598711,0.216161) , 
0, 170.021, 1, 0, 0.547785,0.188556) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22566,0.0857011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.112026) , 
7, 363.475, 1, 0, 0.0995966,0.0960917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0978246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0999242) , 
8, 283.505, 1, 0, 0,-7.02237e-05) , 
1, 349.574, 1, 0, 0.0419469,0.0404301) , 
8, 201.056, 1, 0, 0.455826,0.161627)    );
  // itree = 157
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573474,0.00114459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122272,-0.00677128) , 
4, 0.322788, 1, 0, 0.485851,0.0737045) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796028,0.00171303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316764,0.0033546) , 
8, 99.286, 1, 0, 0.642983,0.248703) , 
8, 74.4759, 1, 0, 0.610231,0.212227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290574,0.0389195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.09925) , 
1, 283.103, 1, 0, 0,-0.00179954) , 
1, 147.55, 1, 0, 0.0410693,0.0376505) , 
8, 148.72, 1, 0, 0.453708,0.164217)    );
  // itree = 158
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228002,-0.00116939) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.270335,0.000396413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605409,0.00194732) , 
9, 0.884419, 1, 0, 0.572927,0.20937) , 
8, 58.0716, 1, 0, 0.551604,0.192735) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142498,0.410894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133898,0.132054) , 
4, 0.199557, 1, 0, 0.138231,0.134) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.106147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0919642) , 
7, 443.196, 1, 0, 0,-0.00109095) , 
6, 99.8003, 1, 0, 0.0423815,0.0403276) , 
1, 286.343, 1, 0, 0.460807,0.16556)    );
  // itree = 159
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428992,0.00128144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818555,0.00172932) , 
0, 210.513, 1, 0, 0.693216,0.227141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711769,0.0445557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180819,0.010981) , 
7, 271.512, 1, 0, 0.477541,0.453764) , 
7, 261.673, 1, 0, 0.666081,0.255653) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.114805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107788,0.102223) , 
4, 0.565211, 1, 0, 0.0143102,0.0127624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346304,0.0489013) , 
2, 34.0676, 1, 0, 0.0523103,0.0494571) , 
7, 296.099, 1, 0, 0.501833,0.200474)    );
  // itree = 160
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.381581,-0.00091044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464669,0.000634166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674517,0.00211) , 
8, 68.9831, 1, 0, 0.654325,0.246965) , 
7, 138.59, 1, 0, 0.639594,0.229069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205625,0.0903377) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.119258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0820766,0.185194) , 
1, 580.584, 1, 0, 0.0156605,0.0132587) , 
5, 132.206, 1, 0, 0.0390352,0.0363271) , 
7, 293.847, 1, 0, 0.469433,0.174458)    );
  // itree = 161
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392822,-0.00032128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.792419,0.00166723) , 
8, 54.3594, 1, 0, 0.771461,0.253537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0725982,0.00353856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36969,0.00527435) , 
9, 0.992258, 1, 0, 0.156495,0.0990879) , 
7, 220.81, 1, 0, 0.656053,0.224552) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0399894,0.0509176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232543,0.168204) , 
3, 0.403729, 1, 0, 0.093066,0.09075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.135199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110398) , 
1, 237.049, 1, 0, 0,-0.00170024) , 
9, 0.942017, 1, 0, 0.0432481,0.0412617) , 
7, 301.098, 1, 0, 0.492191,0.175541)    );
  // itree = 162
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726389,0.001324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269488,7.05925e-05) , 
8, 88.4538, 1, 0, 0.591844,0.151036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786634,0.00118962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944027,0.00167926) , 
8, 76.7298, 1, 0, 0.913346,0.296932) , 
0, 227.17, 1, 0, 0.796713,0.244005) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.121811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.246862,0.00365886) , 
4, 0.121092, 1, 0, 0.204477,0.117542) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102341,0.0947077) , 
9, 0.985103, 1, 0, 0.0314977,0.0275618) , 
1, 235.297, 1, 0, 0.124693,0.0760399) , 
7, 209.668, 1, 0, 0.505145,0.17113)    );
  // itree = 163
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215683,-0.000636934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.829847,0.00156506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.29913,0.00299368) , 
7, 194.092, 1, 0, 0.666017,0.230413) , 
9, 0.877231, 1, 0, 0.638659,0.21472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.131886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0989267) , 
1, 281.05, 1, 0, 0,-0.000399971) , 
1, 145.429, 1, 0, 0,-0.0014303) , 
7, 311.813, 1, 0, 0.48377,0.162299)    );
  // itree = 164
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3968,-0.000527845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692014,0.0015717) , 
2, 11.0352, 1, 0, 0.586414,0.122582) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.544915,0.00177291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.8091,0.00242098) , 
0, 247.049, 1, 0, 0.684133,0.282895) , 
8, 76.4349, 1, 0, 0.664394,0.250512) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152457,0.133774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0981519) , 
7, 366.225, 1, 0, 0.087926,0.0860787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0964734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105027) , 
2, 26.8843, 1, 0, 0,-0.0011604) , 
5, 265.99, 1, 0, 0.0392688,0.0378016) , 
7, 296.099, 1, 0, 0.496633,0.193428)    );
  // itree = 165
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226327,-0.00242322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658317,0.00148383) , 
8, 55.9248, 1, 0, 0.633815,0.179141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.821048,0.00269454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206203,0.00640978) , 
0, 336.11, 1, 0, 0.697716,0.35209) , 
2, 18.8634, 1, 0, 0.648559,0.219045) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0324782,0.0583947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227908,0.0840737) , 
9, 0.93581, 1, 0, 0.0773727,0.074932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.123531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103782) , 
1, 234.069, 1, 0, 0,-0.00369202) , 
9, 0.956353, 1, 0, 0.0416349,0.0386163) , 
8, 148.72, 1, 0, 0.491074,0.172228)    );
  // itree = 166
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704393,0.00180778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449163,0.000813621) , 
4, 0.484466, 1, 0, 0.67818,0.235056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105057) , 
8, 170.712, 1, 0, 0.641068,0.221934) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0992655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110161) , 
2, 26.3628, 1, 0, 0,-0.000810802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36303,0.152578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.114801) , 
8, 211.229, 1, 0, 0.175973,0.173715) , 
9, 0.992351, 1, 0, 0.0396438,0.0385071) , 
7, 315.988, 1, 0, 0.497182,0.17805)    );
  // itree = 167
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.18295,-0.00326805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736877,0.00176031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107287,0.0738925) , 
6, 162.505, 1, 0, 0.672831,0.245092) , 
8, 53.1548, 1, 0, 0.650565,0.230723) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.116629) , 
9, 0.985066, 1, 0, 0,-0.00302659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125137,0.490302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0944556) , 
4, 0.201859, 1, 0, 0.0654327,0.0651261) , 
5, 266.921, 1, 0, 0.0288844,0.0270585) , 
8, 152.035, 1, 0, 0.49892,0.181043)    );
  // itree = 168
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233323,0.000379046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684071,0.00158159) , 
0, 177.38, 1, 0, 0.423508,0.112078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795032,0.00157117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505702,0.0208684) , 
5, 181.797, 1, 0, 0.747468,0.287349) , 
0, 206.445, 1, 0, 0.650358,0.23481) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0195406,0.593208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195833,0.196654) , 
4, 0.565206, 1, 0, 0.0464453,0.0455024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3614,0.101239) , 
2, 34.2513, 1, 0, 0.0844415,0.0827722) , 
7, 311.813, 1, 0, 0.504905,0.195733)    );
  // itree = 169
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.301289,-0.000787113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711828,0.00184629) , 
9, 0.870042, 1, 0, 0.694293,0.248906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.104055) , 
8, 153.184, 1, 0, 0,-0.00634762) , 
7, 273.023, 1, 0, 0.638854,0.228524) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198377,0.0321306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129589,0.0192376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105312) , 
9, 0.884508, 1, 0, 0.0233043,0.0210725) , 
6, 99.8003, 1, 0, 0.059853,0.0560978) , 
7, 322.65, 1, 0, 0.502822,0.188014)    );
  // itree = 170
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793704,0.00148414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0742122,0.0695749) , 
7, 225.81, 1, 0, 0.682103,0.220156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705325,0.0108008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.294612,0.00445679) , 
5, 136.43, 1, 0, 0.535877,0.444798) , 
8, 127.152, 1, 0, 0.660528,0.2533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.167829,0.0286307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0605051,0.0665836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102842) , 
3, 0.121051, 1, 0, 0.0169587,0.0151924) , 
9, 0.884535, 1, 0, 0.0451425,0.0423629) , 
8, 151.933, 1, 0, 0.512287,0.202487)    );
  // itree = 171
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670338,0.00168664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162006,0.00650063) , 
6, 144.647, 1, 0, 0.579807,0.20259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465813,0.0825195) , 
1, 364.265, 1, 0, 0.575698,0.2118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0855722,0.0267366) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0979286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0985809) , 
6, 99.8003, 1, 0, 0,-2.36685e-05) , 
1, 301.235, 1, 0, 0.0239815,0.0219178) , 
8, 213.571, 1, 0, 0.492628,0.18321)    );
  // itree = 172
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187133,-0.000598829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584246,0.00110631) , 
3, 0.317852, 1, 0, 0.374166,0.0590617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661766,0.0016194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680259,0.00261326) , 
2, 14.5172, 1, 0, 0.668461,0.252617) , 
9, 0.877231, 1, 0, 0.646113,0.237919) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101562) , 
1, 227.223, 1, 0, 0,-0.00112283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14545,0.0153905) , 
0, 642.71, 1, 0, 0.0237281,0.0214038) , 
8, 182.581, 1, 0, 0.539046,0.200673)    );
  // itree = 173
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.238906,-0.00200703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.456217,0.00125901) , 
6, 63.0994, 1, 0, 0.420856,0.0910545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.908095,0.00150375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399845,0.0027553) , 
7, 192.959, 1, 0, 0.733903,0.243787) , 
0, 211.582, 1, 0, 0.627547,0.191897) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222904,0.0387622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0366105,0.201766) , 
6, 145.698, 1, 0, 0.1047,0.0995735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0938289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0982754) , 
1, 448.769, 1, 0, 0,-0.000113219) , 
1, 349.574, 1, 0, 0.0644946,0.0612933) , 
7, 301.714, 1, 0, 0.471175,0.155625)    );
  // itree = 174
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.139069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245324,0.00152539) , 
9, 0.963528, 1, 0, 0.122669,-0.011348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675056,0.00237301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592078,0.00148861) , 
4, 0.242233, 1, 0, 0.645224,0.247252) , 
0, 134.64, 1, 0, 0.602148,0.225935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134637,0.0639827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.096445) , 
7, 403.124, 1, 0, 0,-0.0010457) , 
9, 0.89172, 1, 0, 0.0284859,0.027134) , 
1, 342.507, 1, 0, 0.539172,0.20411)    );
  // itree = 175
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668437,0.00157544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.137978) , 
1, 195.367, 1, 0, 0.590613,0.187983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.916355,0.00179632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170599,0.00958092) , 
8, 141.219, 1, 0, 0.861456,0.310119) , 
0, 234.359, 1, 0, 0.734606,0.252916) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0842096,0.000893661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245454,0.00230981) , 
9, 0.949207, 1, 0, 0.173823,0.0567866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488568,0.00492838) , 
4, 0.767065, 1, 0, 0.194093,0.0742814) , 
5, 138.206, 1, 0, 0.52885,0.184916)    );
  // itree = 176
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289455,0.000200076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774244,0.00163806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142968,0.00984996) , 
7, 233.937, 1, 0, 0.646377,0.221463) , 
5, 76.4019, 1, 0, 0.623386,0.207928) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.112877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102677) , 
1, 148.567, 1, 0, 0,-0.00141051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351703,0.218567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.116027) , 
6, 129.555, 1, 0, 0.143155,0.139089) , 
9, 0.98516, 1, 0, 0.0436382,0.0414181) , 
7, 321.603, 1, 0, 0.48454,0.16805)    );
  // itree = 177
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0967733,-0.00396768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381338,0.000642179) , 
3, 0.28261, 1, 0, 0.221904,-0.0227046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595505,0.00178733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656708,0.00339181) , 
2, 18.6581, 1, 0, 0.610263,0.243594) , 
9, 0.87725, 1, 0, 0.582461,0.22453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0956774) , 
9, 0.985103, 1, 0, 0,-2.1704e-05) , 
1, 301.396, 1, 0, 0,-0.000587704) , 
8, 216.623, 1, 0, 0.500608,0.192895)    );
  // itree = 178
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.199245,-0.000308232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641954,0.00160892) , 
0, 161.114, 1, 0, 0.55571,0.160636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730054,0.00178986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556708,0.0150172) , 
8, 138.662, 1, 0, 0.699981,0.298071) , 
2, 14.7226, 1, 0, 0.603022,0.205706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207419,0.0189651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.119059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.12151) , 
2, 26.3628, 1, 0, 0,-0.00114946) , 
9, 0.884493, 1, 0, 0.0406419,0.0374853) , 
7, 340.847, 1, 0, 0.477305,0.168101)    );
  // itree = 179
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320142,-0.000743471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690235,0.00190032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.108141) , 
5, 192.647, 1, 0, 0.644618,0.232464) , 
8, 58.1712, 1, 0, 0.625557,0.215463) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.099311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.120411) , 
2, 18.6581, 1, 0, 0,-0.00183238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139647,0.258905) , 
3, 0.242237, 1, 0, 0.0635499,0.0619602) , 
4, 0.403718, 1, 0, 0.0153948,0.0136212) , 
7, 320.987, 1, 0, 0.481686,0.16787)    );
  // itree = 180
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390082,0.000540084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50102,0.0136174) , 
6, 151.758, 1, 0, 0.400121,0.0823647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736788,0.00188427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100549) , 
8, 205.422, 1, 0, 0.650134,0.237746) , 
0, 235.45, 1, 0, 0.552831,0.177273) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.106365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0974611) , 
8, 152.801, 1, 0, 0,-0.00477451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114667,0.0386822) , 
9, 0.992216, 1, 0, 0.0209689,0.0154682) , 
6, 173.918, 1, 0, 0.466969,0.151152)    );
  // itree = 181
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634519,0.000924259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227446,-0.00206818) , 
7, 153.179, 1, 0, 0.463515,0.0472021) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5111,5.47141e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702256,0.00202966) , 
7, 143.231, 1, 0, 0.693979,0.261773) , 
8, 64.2391, 1, 0, 0.670636,0.24004) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.309455,0.145028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.067698,0.0352437) , 
9, 0.920445, 1, 0, 0.172286,0.166174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0724829,0.0113475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.127345) , 
6, 93.7738, 1, 0, 0.0151812,0.0123994) , 
8, 152.035, 1, 0, 0.0622236,0.0584446) , 
7, 291.925, 1, 0, 0.500048,0.189124)    );
  // itree = 182
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644321,0.00108121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.154169) , 
8, 88.4156, 1, 0, 0.449258,0.0703933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727715,0.00197974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0853327,0.1155) , 
7, 339.677, 1, 0, 0.686919,0.262413) , 
9, 0.891608, 1, 0, 0.656299,0.237674) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119779,0.0950704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448502,0.0401316) , 
9, 0.872372, 1, 0, 0.273943,0.26706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0785114,0.0239031) , 
9, 0.983021, 1, 0, 0.0303494,0.0273377) , 
9, 0.884506, 1, 0, 0.0798256,0.0760277) , 
8, 148.72, 1, 0, 0.50548,0.195383)    );
  // itree = 183
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257594,-0.000732231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749976,0.00189633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0560956,0.0592779) , 
7, 293.699, 1, 0, 0.683095,0.255529) , 
8, 53.1317, 1, 0, 0.661684,0.240729) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.108725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254037,0.0975708) , 
9, 0.97798, 1, 0, 0.105591,0.101659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.115655) , 
7, 349.967, 1, 0, 0,-0.0006048) , 
1, 234.069, 1, 0, 0.0280505,0.0265617) , 
8, 152.035, 1, 0, 0.509439,0.189271)    );
  // itree = 184
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509871,0.000725729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218049,-0.00214982) , 
4, 0.161162, 1, 0, 0.350048,-0.0229125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647346,0.0019282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103447) , 
8, 178.95, 1, 0, 0.610413,0.225718) , 
8, 59.182, 1, 0, 0.593537,0.209603) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102388) , 
1, 301.235, 1, 0, 0,-0.000237259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128921,0.308423) , 
4, 0.524838, 1, 0, 0.0230151,0.0227012) , 
8, 216.623, 1, 0, 0.50989,0.1822)    );
  // itree = 185
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.141552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380767,0.00219662) , 
5, 93.1284, 1, 0, 0.248182,0.0587063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738342,0.00179063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110259) , 
7, 326.785, 1, 0, 0.703882,0.248153) , 
0, 132.287, 1, 0, 0.658849,0.229432) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137495,0.0459421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.119418) , 
7, 299.824, 1, 0, 0.0307646,0.0232913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182995,0.235485) , 
6, 296.95, 1, 0, 0.0550172,0.0484672) , 
5, 184.297, 1, 0, 0.50384,0.182976)    );
  // itree = 186
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695704,0.00182579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109442) , 
8, 192.103, 1, 0, 0.667614,0.23488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.18193,0.0330311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.119289) , 
3, 0.161491, 1, 0, 0.0844587,0.0782717) , 
5, 253.253, 1, 0, 0.615906,0.220994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.11609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0986304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0954636) , 
7, 434.535, 1, 0, 0,-7.24383e-05) , 
8, 182.786, 1, 0, 0,-0.00187915) , 
1, 286.343, 1, 0, 0.526244,0.188548)    );
  // itree = 187
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620545,0.00179234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735942,0.00388049) , 
2, 25.9696, 1, 0, 0.629272,0.230457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105302) , 
7, 401.234, 1, 0, 0.593737,0.217385) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.099059,0.0763481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0977581) , 
1, 287.8, 1, 0, 0.0274898,0.0269115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262023,0.198268) , 
4, 0.565211, 1, 0, 0.0667023,0.0654693) , 
8, 216.623, 1, 0, 0.515027,0.194697)    );
  // itree = 188
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.42854,0.0011271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767527,0.00173657) , 
0, 209.866, 1, 0, 0.658171,0.211409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814662,0.00270968) , 
2, 20.398, 1, 0, 0.682957,0.238658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.118658,0.0659085) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.106817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.11666) , 
1, 148.567, 1, 0, 0,-0.00129258) , 
0, 161.185, 1, 0, 0.0151514,0.0136991) , 
7, 311.813, 1, 0, 0.537577,0.189685)    );
  // itree = 189
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802551,0.00138054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168158,0.00435734) , 
7, 202.092, 1, 0, 0.590485,0.182375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.512477,0.0181389) , 
0, 482.988, 1, 0, 0.586271,0.196442) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0942918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.104447) , 
8, 201.548, 1, 0, 0,-0.000119307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.111218) , 
2, 26.3628, 1, 0, 0,-0.000446201) , 
7, 403.992, 1, 0, 0.497087,0.166491)    );
  // itree = 190
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12549,-0.00634992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725052,0.00138928) , 
8, 55.8871, 1, 0, 0.68869,0.184722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744471,0.00411407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525933,0.00162194) , 
9, 0.941848, 1, 0, 0.66679,0.359008) , 
2, 18.6581, 1, 0, 0.684107,0.221194) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.111967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.112517) , 
7, 314.259, 1, 0, 0,-0.0108616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217387,0.0071742) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0306548,0.740193) , 
7, 397.689, 1, 0, 0.142262,0.109503) , 
3, 0.121092, 1, 0, 0.106375,0.0791399) , 
8, 116.197, 1, 0, 0.461111,0.166363)    );
  // itree = 191
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433523,0.000467453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7833,0.00169945) , 
2, 7.25183, 1, 0, 0.751927,0.246162) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.072851,0.00259529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227809,0.023296) , 
9, 0.992254, 1, 0, 0.109956,0.0702623) , 
5, 169.232, 1, 0, 0.626379,0.211762) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109988) , 
5, 254.067, 1, 0, 0,-0.0119471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0965241) , 
1, 289.814, 1, 0, 0,-0.000265341) , 
8, 152.196, 1, 0, 0,-0.00492337) , 
6, 173.918, 1, 0, 0.540664,0.18211)    );
  // itree = 192
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447113,0.000641872) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787919,0.00179359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0943316,0.00879986) , 
6, 175.585, 1, 0, 0.750159,0.270338) , 
2, 6.78676, 1, 0, 0.729734,0.256297) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408577,0.0029823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.115653) , 
5, 298.468, 1, 0, 0.332353,0.154972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127087,0.280631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.108321) , 
9, 0.891665, 1, 0, 0.0281501,0.0250588) , 
6, 157.783, 1, 0, 0.233938,0.112943) , 
5, 142.978, 1, 0, 0.539792,0.201377)    );
  // itree = 193
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480487,0.000219957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821844,0.00149843) , 
8, 54.824, 1, 0, 0.798047,0.234718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.199053,-0.00115186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186592,0.0110305) , 
7, 222.468, 1, 0, 0.189773,0.0949855) , 
7, 197.905, 1, 0, 0.632754,0.196747) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139644,0.253512) , 
0, 360.829, 1, 0, 0.079438,0.0772879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.107921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0947929) , 
1, 228.821, 1, 0, 0,-0.000679955) , 
4, 0.201861, 1, 0, 0.0411562,0.0397146) , 
7, 301.098, 1, 0, 0.472438,0.154193)    );
  // itree = 194
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236523,-0.0010452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79561,0.001667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321662,0.000381321) , 
5, 161.624, 1, 0, 0.772083,0.253879) , 
5, 68.5859, 1, 0, 0.747502,0.239774) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177523,0.0675068) , 
2, 10.9533, 1, 0, 0.12011,0.11324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0998183) , 
7, 414.206, 1, 0, 0,-0.00707996) , 
9, 0.949207, 1, 0, 0.0610738,0.0541002) , 
7, 239.017, 1, 0, 0.503964,0.173899)    );
  // itree = 195
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694917,0.00145697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236745,-0.00275186) , 
4, 0.322167, 1, 0, 0.620662,0.149578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805482,0.00154268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625463,0.00790274) , 
7, 218.384, 1, 0, 0.787154,0.273103) , 
2, 9.09905, 1, 0, 0.739574,0.237802) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0915407,0.0817921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.106523) , 
9, 0.913597, 1, 0, 0.0409716,0.0346668) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3274,0.0167758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0496902,0.0186124) , 
6, 137.836, 1, 0, 0.187401,0.167001) , 
9, 0.98516, 1, 0, 0.0876362,0.0768395) , 
7, 234.843, 1, 0, 0.490478,0.176301)    );
  // itree = 196
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639299,0.00154733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664172,0.00402699) , 
0, 357.977, 1, 0, 0.643181,0.223449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.119901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0998434) , 
4, 0.161456, 1, 0, 0,-0.00254313) , 
7, 351.34, 1, 0, 0.586866,0.203662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.138819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0998025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100438) , 
1, 338.64, 1, 0, 0,-2.75325e-05) , 
1, 234.069, 1, 0, 0,-0.000721328) , 
8, 207.723, 1, 0, 0.497388,0.1725)    );
  // itree = 197
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45256,0.0012271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800201,0.00188492) , 
0, 222.699, 1, 0, 0.680149,0.225803) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21717,0.0997331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0485042,0.0671075) , 
1, 148.567, 1, 0, 0.0795725,0.0776589) , 
7, 290.205, 1, 0, 0.514227,0.184875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693977,0.0137112) , 
2, 41.7723, 1, 0, 0.522161,0.202508)    );
  // itree = 198
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.357353,0.000397534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626222,0.00202166) , 
9, 0.870042, 1, 0, 0.609815,0.218101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.1259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0938173) , 
9, 0.941929, 1, 0, 0,-0.00386332) , 
7, 401.455, 1, 0, 0.572417,0.204488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.106487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0948388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101361) , 
4, 0.40364, 1, 0, 0,-1.3574e-05) , 
1, 301.396, 1, 0, 0,-0.000392138) , 
8, 213.571, 1, 0, 0.489404,0.174776)    );
  // itree = 199
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759948,0.00151198) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0442103,0.00632915) , 
7, 230.867, 1, 0, 0.673421,0.20296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794341,0.00196923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731258,0.0037687) , 
8, 98.6765, 1, 0, 0.768453,0.355496) , 
0, 351.371, 1, 0, 0.686777,0.224397) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157233,0.0468118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.130996) , 
3, 0.242147, 1, 0, 0.101536,0.0963373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.120971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103313) , 
1, 222.249, 1, 0, 0,-0.00126354) , 
4, 0.201861, 1, 0, 0.0523868,0.049093) , 
7, 299.699, 1, 0, 0.53016,0.181119)    );
  // itree = 200
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626736,0.00119056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298752,-0.00216156) , 
4, 0.201742, 1, 0, 0.503093,0.0437358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443204,0.00185544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801856,0.00177243) , 
0, 216.555, 1, 0, 0.688505,0.237236) , 
8, 65.8651, 1, 0, 0.666986,0.214778) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318792,0.061317) , 
0, 485.691, 1, 0, 0.135851,0.130561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0756595,0.0944565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101007) , 
3, 0.161491, 1, 0, 0.0317055,0.0303939) , 
9, 0.891683, 1, 0, 0.0544809,0.0522993) , 
7, 291.925, 1, 0, 0.498324,0.170037)    );
  // itree = 201
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388069,0.000814901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603811,0.00199286) , 
2, 12.5298, 1, 0, 0.459408,0.126392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611259,0.00116462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.82305,0.00198666) , 
2, 9.09905, 1, 0, 0.786398,0.275076) , 
0, 201.815, 1, 0, 0.693126,0.232665) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0795394,0.236904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273103,0.020393) , 
2, 14.8806, 1, 0, 0.149393,0.141595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0588691,0.103953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101196) , 
6, 221.264, 1, 0, 0.0246175,0.0234534) , 
6, 159.292, 1, 0, 0.0844407,0.0800963) , 
7, 296.099, 1, 0, 0.537244,0.193592)    );
  // itree = 202
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737694,0.00139773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.876156,0.00173424) , 
2, 14.7226, 1, 0, 0.780654,0.238906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0341627,0.0029996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383034,0.0171055) , 
0, 368.462, 1, 0, 0.117339,0.0812439) , 
7, 222.982, 1, 0, 0.679749,0.214922) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0651999,0.052913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220158,0.091113) , 
2, 15.7098, 1, 0, 0.089519,0.0874981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.112282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0987173) , 
1, 231.111, 1, 0, 0,-0.00361056) , 
2, 18.6581, 1, 0, 0.0644656,0.0619999) , 
7, 291.925, 1, 0, 0.510001,0.172733)    );
  // itree = 203
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.492871,0.000223313) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782922,0.001783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610159,0.000837086) , 
4, 0.484466, 1, 0, 0.763506,0.252984) , 
8, 59.278, 1, 0, 0.740863,0.233829) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0916848,0.0312714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.206783) , 
8, 285.924, 1, 0, 0.0701657,0.0625468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249616,0.112401) , 
2, 34.2513, 1, 0, 0.0846129,0.0766411) , 
7, 239.017, 1, 0, 0.500667,0.176297)    );
  // itree = 204
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570109,0.00153795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735586,0.00206349) , 
0, 267.4, 1, 0, 0.640287,0.221786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0964221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.087566) , 
1, 325.748, 1, 0, 0,-0.000134057) , 
7, 348.198, 1, 0, 0.600662,0.208053) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.127951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103428) , 
1, 163.804, 1, 0, 0,-0.00162921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107386,0.131927) , 
9, 0.992353, 1, 0, 0.0210989,0.0192945) , 
5, 255.688, 1, 0, 0.510322,0.17863)    );
  // itree = 205
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628316,0.000753712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342698,-0.00115242) , 
4, 0.201742, 1, 0, 0.516928,0.0307052) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814549,0.00146953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156249,0.00184009) , 
7, 206.402, 1, 0, 0.752613,0.222053) , 
8, 65.6013, 1, 0, 0.722748,0.197807) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.108885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206265,0.0108892) , 
8, 121.8, 1, 0, 0.135,0.10871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0999132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0982478) , 
8, 218.937, 1, 0, 0,-0.000606953) , 
1, 289.814, 1, 0, 0.082532,0.0662241) , 
7, 234.843, 1, 0, 0.467413,0.145328)    );
  // itree = 206
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421873,0.00110976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685177,0.00201847) , 
0, 201.468, 1, 0, 0.6167,0.210986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628456,0.0249665) , 
2, 34.0676, 1, 0, 0.617217,0.226334) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.104061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0990848) , 
1, 343.887, 1, 0, 0,-0.000157449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.172567) , 
4, 0.483957, 1, 0, 0,-0.000767527) , 
8, 211.326, 1, 0, 0.532976,0.195338)    );
  // itree = 207
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805651,0.00141321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186996,0.00227383) , 
7, 198.504, 1, 0, 0.656217,0.195333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753818,0.00444624) , 
0, 368.091, 1, 0, 0.667926,0.223577) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208019,0.0282521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.107339) , 
4, 0.201649, 1, 0, 0.116393,0.109994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0934374) , 
8, 152.035, 1, 0, 0,-0.00069863) , 
6, 160.121, 1, 0, 0.0543213,0.0509624) , 
7, 301.664, 1, 0, 0.508863,0.17883)    );
  // itree = 208
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716653,0.00143884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0481821,0.034179) , 
5, 169.232, 1, 0, 0.59171,0.171809) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755226,0.00306703) , 
2, 24.0195, 1, 0, 0.606585,0.190474) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.119549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.111035) , 
7, 421.161, 1, 0, 0,-0.00770886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0933186,0.0602945) , 
9, 0.992293, 1, 0, 0.0179025,0.00946522) , 
6, 157.77, 1, 0, 0.501799,0.158254)    );
  // itree = 209
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752434,0.00153887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132321,0.00156388) , 
5, 165.139, 1, 0, 0.689397,0.211341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704499,0.0134352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100479) , 
8, 166.779, 1, 0, 0.487239,0.420424) , 
1, 240.324, 1, 0, 0.666932,0.234577) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.114619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0744296,0.40499) , 
4, 0.40364, 1, 0, 0.0189374,0.0182409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13587,0.0798819) , 
9, 0.992291, 1, 0, 0.0431375,0.041805) , 
7, 319.588, 1, 0, 0.529814,0.192203)    );
  // itree = 210
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765323,0.0016315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0987594) , 
8, 170.712, 1, 0, 0.732003,0.235782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.127417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253032,0.0513256) , 
0, 362.097, 1, 0, 0.0932454,0.0534148) , 
5, 174.24, 1, 0, 0.678476,0.2205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.210108,0.133059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.117227,0.0362041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105777) , 
9, 0.884532, 1, 0, 0.0207229,0.0193481) , 
0, 166.913, 1, 0, 0.0469957,0.0455245) , 
7, 311.813, 1, 0, 0.533699,0.180384)    );
  // itree = 211
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506349,0.00113362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732573,0.00164683) , 
9, 0.970681, 1, 0, 0.631879,0.180955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558495,0.0286189) , 
5, 230.227, 1, 0, 0.627585,0.20165) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101294) , 
8, 185.888, 1, 0, 0,-0.000914923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108221,0.312973) , 
6, 329.169, 1, 0, 0.0164127,0.0154857) , 
7, 321.553, 1, 0, 0.484067,0.157934)    );
  // itree = 212
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388462,-0.000358628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422716,-0.000104317) , 
9, 0.963544, 1, 0, 0.405085,-0.0216774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729411,0.00167494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121056,0.00556048) , 
5, 164.915, 1, 0, 0.659472,0.218096) , 
8, 58.2052, 1, 0, 0.642384,0.20199) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196105,0.0239784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0983623) , 
6, 183.422, 1, 0, 0.114218,0.107069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.1013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0961161) , 
1, 232.612, 1, 0, 0,-0.000328089) , 
4, 0.161489, 1, 0, 0.0457451,0.0426854) , 
7, 321.603, 1, 0, 0.50291,0.16475)    );
  // itree = 213
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413971,-0.00021428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455795,0.00153255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747635,0.00199449) , 
0, 220.178, 1, 0, 0.643659,0.219494) , 
8, 57.4502, 1, 0, 0.627529,0.202639) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.069756,0.130648) , 
9, 0.992252, 1, 0, 0.0151708,0.0145122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143379,1.95184) , 
2, 32.8668, 1, 0, 0.028473,0.0276096) , 
7, 311.813, 1, 0, 0.473882,0.157747)    );
  // itree = 214
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197251,-0.00276709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365875,0.00113772) , 
8, 54.6333, 1, 0, 0.309237,0.0194249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574148,0.00169963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732775,0.00238159) , 
9, 0.992251, 1, 0, 0.62129,0.213465) , 
1, 96.6846, 1, 0, 0.585511,0.191218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257106,0.018176) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0960414) , 
8, 272.404, 1, 0, 0,-5.22536e-05) , 
8, 182.786, 1, 0, 0.0499967,0.0465222) , 
1, 286.643, 1, 0, 0.499352,0.167937)    );
  // itree = 215
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656978,0.00179678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0338375,0.0452026) , 
7, 311.157, 1, 0, 0.583909,0.195761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527553,0.0709201) , 
1, 376.51, 1, 0, 0.581924,0.207184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.152998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0951324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0934184) , 
4, 0.403722, 1, 0, 0,-7.18569e-06) , 
1, 301.235, 1, 0, 0,-0.00047914) , 
8, 216.72, 1, 0, 0.496917,0.176849)    );
  // itree = 216
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71803,0.00152998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601728,0.0072571) , 
8, 139.44, 1, 0, 0.710925,0.235149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.220282) , 
5, 272.207, 1, 0, 0.669812,0.220686) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.206776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277308,0.0201935) , 
6, 81.6574, 1, 0, 0.136726,0.124731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0670291,0.040903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.154639) , 
3, 0.121092, 1, 0, 0.0197517,0.0178352) , 
6, 99.8619, 1, 0, 0.0545117,0.0496001) , 
8, 151.933, 1, 0, 0.522941,0.179848)    );
  // itree = 217
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562681,0.00115626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684918,0.00225333) , 
2, 8.88289, 1, 0, 0.652851,0.237955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0925915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0956935) , 
0, 293.882, 1, 0, 0,-0.000732086) , 
7, 354.418, 1, 0, 0.615865,0.224433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.156504,0.0146728) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.172391) , 
2, 19.3607, 1, 0, 0,-0.00454915) , 
4, 0.121115, 1, 0, 0.0411533,0.0328853) , 
5, 255.842, 1, 0, 0.527712,0.195052)    );
  // itree = 218
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62978,0.00188544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661259,0.00346076) , 
2, 18.6581, 1, 0, 0.636441,0.250925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650343,0.0011965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.128496) , 
5, 160.435, 1, 0, 0.49606,0.115394) , 
4, 0.36335, 1, 0, 0.607736,0.223211) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100772) , 
8, 227.122, 1, 0, 0,-0.0013902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124643,0.0738212) , 
4, 0.524838, 1, 0, 0.0213461,0.0196118) , 
1, 286.343, 1, 0, 0.515751,0.191273)    );
  // itree = 219
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372846,0.000183522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735297,0.00214511) , 
0, 224.232, 1, 0, 0.51044,0.117033) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498778,0.000777327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801224,0.00185844) , 
9, 0.898797, 1, 0, 0.774206,0.258639) , 
5, 97.7044, 1, 0, 0.701769,0.21975) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290991,0.0746486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162812,0.00166305) , 
4, 0.0807444, 1, 0, 0.173203,0.064715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393039,0.00781276) , 
2, 34.0676, 1, 0, 0.191928,0.0829689) , 
5, 142.045, 1, 0, 0.498223,0.165143)    );
  // itree = 220
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.306473,-0.00217818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.812151,0.0013596) , 
8, 60.3343, 1, 0, 0.779651,0.192289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1682,0.0158996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0807125,0.00893568) , 
3, 0.161489, 1, 0, 0.119193,0.0927673) , 
7, 209.668, 1, 0, 0.486231,0.148075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620842,0.0134052) , 
2, 41.7723, 1, 0, 0.491068,0.161384)    );
  // itree = 221
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718959,0.00100582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0571992,-0.00454586) , 
8, 101.29, 1, 0, 0.518852,0.0813779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576272,0.000780256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717316,0.00208753) , 
8, 66.1409, 1, 0, 0.699525,0.246927) , 
2, 9.09905, 1, 0, 0.65114,0.202592) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.298762,0.0708534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0955976,0.135641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.125176) , 
4, 0.190509, 1, 0, 0.0425648,0.0387676) , 
4, 0.0807444, 1, 0, 0.0689497,0.0649643) , 
7, 291.925, 1, 0, 0.482677,0.162768)    );
  // itree = 222
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720044,0.00148517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157065,0.00195718) , 
5, 147.855, 1, 0, 0.599689,0.174985) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502663,0.00105422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777515,0.00306758) , 
3, 0.128742, 1, 0, 0.724279,0.346023) , 
2, 20.398, 1, 0, 0.618674,0.201047) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0932725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.179274) , 
2, 24.2429, 1, 0, 0,-0.00273016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106391,0.161436) , 
9, 0.992351, 1, 0, 0.019734,0.0165078) , 
7, 383.201, 1, 0, 0.520622,0.170837)    );
  // itree = 223
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.377235,-0.00107716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391233,0.000117464) , 
5, 127.486, 1, 0, 0.384269,-0.0350961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652003,0.0014665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702725,0.00302562) , 
0, 315.921, 1, 0, 0.662797,0.219815) , 
8, 59.5522, 1, 0, 0.642644,0.20137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254071,0.0163191) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.11628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.170144) , 
2, 26.3628, 1, 0, 0,-0.00148184) , 
1, 143.896, 1, 0, 0.0463644,0.0399614) , 
7, 311.813, 1, 0, 0.494855,0.161365)    );
  // itree = 224
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695004,0.00155651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100247,0.0381593) , 
5, 163.135, 1, 0, 0.584751,0.183486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689508,0.00465338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552259,0.00187493) , 
4, 0.241743, 1, 0, 0.637679,0.340866) , 
2, 20.1516, 1, 0, 0.592007,0.20506) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.239358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0915506) , 
9, 0.889666, 1, 0, 0,-0.0026764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126565,0.154322) , 
9, 0.992353, 1, 0, 0.0241358,0.0214109) , 
7, 422.918, 1, 0, 0.51441,0.179965)    );
  // itree = 225
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0810999,-0.00857297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594325,0.00132199) , 
1, 85.2394, 1, 0, 0.306882,-0.0190647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748451,0.00151013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0642766,0.00328026) , 
6, 161.54, 1, 0, 0.683849,0.200119) , 
1, 94.0668, 1, 0, 0.642952,0.17634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.201962,0.0202365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.114332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.104687) , 
1, 282.459, 1, 0, 0,-0.000834736) , 
1, 146.723, 1, 0, 0.0257296,0.0227173) , 
8, 148.72, 1, 0, 0.484081,0.136798)    );
  // itree = 226
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761895,0.0018104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10203) , 
8, 159.634, 1, 0, 0.721165,0.239741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.13999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10488,0.00117197) , 
8, 109.206, 1, 0, 0.0512739,-0.0349688) , 
5, 163.67, 1, 0, 0.660892,0.215024) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.108258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.256055) , 
2, 23.7617, 1, 0, 0,-0.00112787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264302,0.286276) , 
2, 34.0676, 1, 0, 0.0264348,0.0236123) , 
7, 296.099, 1, 0, 0.491156,0.163816)    );
  // itree = 227
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597477,0.00121255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447839,-0.000195105) , 
4, 0.282439, 1, 0, 0.552838,0.0946955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854276,0.00122796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.944738,0.00152822) , 
8, 79.2403, 1, 0, 0.913544,0.25231) , 
0, 230.918, 1, 0, 0.778897,0.193475) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128499,0.00432095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.12388) , 
2, 6.40641, 1, 0, 0.0196293,-0.00131807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283862,0.00554808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.274849) , 
7, 473.427, 1, 0, 0.210104,0.132817) , 
2, 11.1695, 1, 0, 0.142201,0.0849988) , 
7, 201.581, 1, 0, 0.465945,0.140156)    );
  // itree = 228
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.580944,0.00106139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297766,-0.00196319) , 
3, 0.161487, 1, 0, 0.44927,0.0109951) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738369,0.00192876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0989374) , 
8, 164.732, 1, 0, 0.698299,0.245885) , 
8, 64.0463, 1, 0, 0.674828,0.223746) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.159779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199233,0.148236) , 
3, 0.201864, 1, 0, 0.112762,0.108853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.188981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123674,0.123462) , 
9, 0.992351, 1, 0, 0.022323,0.0180889) , 
6, 162.15, 1, 0, 0.0656442,0.0615658) , 
7, 291.925, 1, 0, 0.508334,0.179421)    );
  // itree = 229
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603006,0.00160425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356468,0.000584682) , 
6, 76.4813, 1, 0, 0.459785,0.117435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793872,0.00160112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600289,0.00747672) , 
1, 237.798, 1, 0, 0.768521,0.264377) , 
0, 215.831, 1, 0, 0.66638,0.215763) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.33679,0.0161733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.279053) , 
3, 0.161431, 1, 0, 0.164998,0.14802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0973253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.181848) , 
2, 18.6581, 1, 0, 0,-0.00233597) , 
4, 0.161489, 1, 0, 0.0697103,0.0611885) , 
7, 311.813, 1, 0, 0.522091,0.178383)    );
  // itree = 230
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221719,-0.00330992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637959,0.00147431) , 
2, 12.3764, 1, 0, 0.494269,0.0569956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735325,0.00173536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110621,0.689804) , 
5, 207.045, 1, 0, 0.657156,0.22429) , 
8, 74.4923, 1, 0, 0.62393,0.190164) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0564802,0.437431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0993818) , 
1, 234.069, 1, 0, 0.0159287,0.0149838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130411,0.0605329) , 
2, 26.5966, 1, 0, 0.028767,0.0272965) , 
8, 148.72, 1, 0, 0.464007,0.146401)    );
  // itree = 231
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406882,-0.000104382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744078,0.00123432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817185,0.0017457) , 
6, 109.055, 1, 0, 0.772507,0.223117) , 
8, 58.7857, 1, 0, 0.747558,0.207274) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228039,0.0110701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.165879) , 
8, 206.15, 1, 0, 0.140113,0.116595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0568583,0.00195913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.122041) , 
2, 10.8553, 1, 0, 0.021012,0.00228495) , 
9, 0.956398, 1, 0, 0.0852539,0.0639426) , 
7, 234.843, 1, 0, 0.498809,0.153441)    );
  // itree = 232
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673615,0.00139285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0262401,-0.00616868) , 
5, 162.866, 1, 0, 0.570877,0.146823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769297,0.00287481) , 
2, 25.9696, 1, 0, 0.588003,0.16399) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0949623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109318) , 
9, 0.992351, 1, 0, 0,-0.00028544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.190952) , 
2, 26.3628, 1, 0, 0,-0.0045489) , 
7, 365.809, 1, 0, 0.477388,0.132284)    );
  // itree = 233
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785386,0.00121099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171909,0.000699474) , 
7, 198.853, 1, 0, 0.693345,0.168611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887215,0.00196036) , 
2, 19.9107, 1, 0, 0.726108,0.194191) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0154279,0.0243105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.175656,0.0342202) , 
9, 0.992351, 1, 0, 0.0511538,0.040157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315431,0.209594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0466706,0.647769) , 
9, 0.913235, 1, 0, 0.148228,0.142742) , 
4, 0.322975, 1, 0, 0.0827011,0.0734951) , 
7, 242.617, 1, 0, 0.491865,0.15025)    );
  // itree = 234
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408467,-0.000878299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687667,0.0011335) , 
9, 0.927628, 1, 0, 0.6189,0.106224) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82049,0.00161689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0916797,0.00157916) , 
8, 139.723, 1, 0, 0.781054,0.247795) , 
8, 68.763, 1, 0, 0.756855,0.226668) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.105073,0.0154539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.099483) , 
1, 286.343, 1, 0, 0.0599897,0.0490738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245232,0.0509227) , 
2, 34.0676, 1, 0, 0.0752977,0.0620583) , 
7, 245.859, 1, 0, 0.532956,0.172592)    );
  // itree = 235
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744241,0.00149806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477273,0.0189698) , 
8, 143.47, 1, 0, 0.710247,0.243409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47173,0.000816712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588699,0.00291595) , 
2, 20.1516, 1, 0, 0.499041,0.120915) , 
4, 0.242233, 1, 0, 0.648211,0.20743) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.136895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.123667) , 
1, 319.725, 1, 0, 0,-0.00994398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171427,0.0134414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102056) , 
7, 450.057, 1, 0, 0.100614,0.0806741) , 
3, 0.161456, 1, 0, 0.0626045,0.0464409) , 
1, 222.549, 1, 0, 0.512879,0.170226)    );
  // itree = 236
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28636,1.1829e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629736,0.00256351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709083,0.00154934) , 
0, 146.812, 1, 0, 0.695213,0.228478) , 
9, 0.87725, 1, 0, 0.670982,0.214981) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205495,0.0150511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0415441,0.132638) , 
8, 223.129, 1, 0, 0.122476,0.112007) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100128) , 
1, 290.168, 1, 0, 0,-0.000657329) , 
3, 0.242147, 1, 0, 0.0750162,0.0683495) , 
8, 152.035, 1, 0, 0.52367,0.178736)    );
  // itree = 237
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64209,0.00127582) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729459,0.00314668) , 
0, 323.175, 1, 0, 0.662961,0.206545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172442,0.00101787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.402001,0.00355752) , 
2, 31.4202, 1, 0, 0.208896,0.0736676) , 
6, 138.81, 1, 0, 0.571589,0.179806) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101061) , 
1, 301.235, 1, 0, 0,-0.000118453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103214,0.101333) , 
9, 0.992351, 1, 0, 0.0227272,0.0215276) , 
8, 213.571, 1, 0, 0.48867,0.155894)    );
  // itree = 238
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.396339,0.000224746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663305,0.00151843) , 
2, 7.58432, 1, 0, 0.627073,0.165251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.270632,0.0019424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.127215) , 
8, 82.2648, 1, 0, 0.0618401,0.00337856) , 
5, 164.601, 1, 0, 0.534132,0.138635) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.156614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.143338) , 
8, 157.606, 1, 0, 0,-0.00386489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0875083,0.353021) , 
4, 0.403718, 1, 0, 0.0211271,0.01617) , 
5, 252.611, 1, 0, 0.438937,0.11591)    );
  // itree = 239
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513765,0.00172294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370429,0.000714587) , 
9, 0.898795, 1, 0, 0.411969,0.0939285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.789063,0.00141948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571415,0.0135407) , 
1, 233.897, 1, 0, 0.763326,0.241343) , 
0, 211.347, 1, 0, 0.653818,0.195398) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.115426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.234996) , 
2, 26.3628, 1, 0, 0,-0.00655639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411175,0.2841) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.164706) , 
9, 0.90602, 1, 0, 0.154134,0.150684) , 
3, 0.403729, 1, 0, 0.0424955,0.0367956) , 
7, 296.099, 1, 0, 0.485363,0.151694)    );
  // itree = 240
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.837892,0.00135036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339976,0.000409861) , 
5, 144.804, 1, 0, 0.76172,0.193685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.133072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26396,0.00500847) , 
0, 170.536, 1, 0, 0.195542,0.100541) , 
8, 99.127, 1, 0, 0.533004,0.156058) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.176193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.152822) , 
7, 424.646, 1, 0, 0,-0.014851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215208,0.00151231) , 
4, 0.484466, 1, 0, 0.0476279,-0.000436069) , 
0, 438.692, 1, 0, 0.474431,0.137173)    );
  // itree = 241
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.452831,0.00013327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711593,0.00175978) , 
8, 62.9583, 1, 0, 0.687907,0.211347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101306) , 
8, 173.333, 1, 0, 0.652875,0.200529) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.177531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0699404,0.119923) , 
3, 0.403729, 1, 0, 0.0185142,0.0149325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120668,0.0482073) , 
9, 0.992253, 1, 0, 0.0402624,0.0362791) , 
7, 315.988, 1, 0, 0.509527,0.162096)    );
  // itree = 242
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152515,-0.0027675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731269,0.00103812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.052465,0.0143758) , 
7, 214.805, 1, 0, 0.348321,0.0883346) , 
1, 109.274, 1, 0, 0.318512,0.060305) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61114,0.0010145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740925,0.00210905) , 
2, 8.09225, 1, 0, 0.717322,0.252329) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.136285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101856,0.132216) , 
8, 313.928, 1, 0, 0.0275355,0.0203798) , 
5, 213.481, 1, 0, 0.60196,0.213537) , 
9, 0.934799, 1, 0, 0.521124,0.169837)    );
  // itree = 243
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255087,2.23627e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.169205) , 
3, 0.161491, 1, 0, 0.128278,-0.0542145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.296466,0.00064639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630216,0.00184168) , 
3, 0.403729, 1, 0, 0.418727,0.10191) , 
0, 207.833, 1, 0, 0.340452,0.0598344) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466491,0.00159332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756725,0.00194805) , 
0, 230.497, 1, 0, 0.66292,0.218972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.221739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.104242) , 
8, 222.276, 1, 0, 0,-0.00102802) , 
7, 410.988, 1, 0, 0.587031,0.193787) , 
9, 0.934799, 1, 0, 0.512445,0.153269)    );
  // itree = 244
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115323,-0.00270808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.742685,0.00112253) , 
0, 138.972, 1, 0, 0.632699,0.123113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804151,0.00143532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489204,0.0208423) , 
8, 126.835, 1, 0, 0.776317,0.242037) , 
5, 98.854, 1, 0, 0.736454,0.209028) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0966602,0.0142324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364782,0.0697286) , 
2, 20.0521, 1, 0, 0.146856,0.126989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.121493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.140684) , 
7, 414.64, 1, 0, 0,-0.00589731) , 
6, 159.292, 1, 0, 0.0814926,0.0678436) , 
7, 239.017, 1, 0, 0.495837,0.15716)    );
  // itree = 245
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28959,-0.000257361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701069,0.00178144) , 
5, 67.5181, 1, 0, 0.680725,0.2222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.12539) , 
5, 204.056, 1, 0, 0.656697,0.212813) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111475,0.0102041) , 
2, 26.3628, 1, 0, 0.0207259,0.0160852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435112,0.117185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0602308,0.118757) , 
6, 113.831, 1, 0, 0.192151,0.188008) , 
9, 0.985165, 1, 0, 0.0742196,0.069734) , 
7, 301.098, 1, 0, 0.498914,0.174055)    );
  // itree = 246
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.391589,0.00106612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684362,0.00173078) , 
0, 212.53, 1, 0, 0.59457,0.171716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499025,0.0960186) , 
7, 597.553, 1, 0, 0.591512,0.181947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.143319,0.0367761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0951291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0962206) , 
8, 272.361, 1, 0, 0,-8.96018e-06) , 
8, 182.786, 1, 0, 0.0272307,0.0252771) , 
1, 286.343, 1, 0, 0.501497,0.156955)    );
  // itree = 247
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64919,0.00168606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.120848) , 
8, 151.731, 1, 0, 0.584463,0.178188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557328,0.311428) , 
1, 377.116, 1, 0, 0.583528,0.191138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.145094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0912411) , 
9, 0.985068, 1, 0, 0,-1.18453e-06) , 
1, 301.235, 1, 0, 0,-0.000380651) , 
8, 216.623, 1, 0, 0.501353,0.164168)    );
  // itree = 248
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796155,0.00133818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.591766,0.0390153) , 
8, 133.353, 1, 0, 0.782944,0.228182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.036923,-0.00240829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27596,0.00445119) , 
3, 0.363356, 1, 0, 0.115665,0.0359844) , 
5, 158.566, 1, 0, 0.661746,0.193273) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.116363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0980375) , 
1, 227.223, 1, 0, 0,-0.000759647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.194162,0.0771088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103159) , 
6, 132.991, 1, 0, 0.0998694,0.0973213) , 
9, 0.949225, 1, 0, 0.0544375,0.052703) , 
8, 151.933, 1, 0, 0.515332,0.159384)    );
  // itree = 249
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531244,0.00068136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.16776) , 
5, 127.779, 1, 0, 0.367993,0.012735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692754,0.00144595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840885,0.00232915) , 
2, 20.0521, 1, 0, 0.7151,0.211722) , 
9, 0.905985, 1, 0, 0.664387,0.18265) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.185032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0934792,1.55037) , 
6, 300.969, 1, 0, 0.0174132,0.0134145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331325,0.0527053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.380154) , 
3, 0.160985, 1, 0, 0.168798,0.159308) , 
9, 0.992351, 1, 0, 0.0487924,0.0436556) , 
7, 291.925, 1, 0, 0.492611,0.143865)    );
  // itree = 250
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559354,0.00129557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667955,0.00360912) , 
2, 22.357, 1, 0, 0.568157,0.157401) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65103,0.00357813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154663,0.0765387) , 
5, 244.107, 1, 0, 0.488533,0.271305) , 
0, 327.756, 1, 0, 0.548171,0.185991) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.128583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0878183) , 
8, 231.271, 1, 0, 0,-0.000867903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130484,1.19897) , 
4, 0.484466, 1, 0, 0.0268366,0.0252744) , 
1, 332.933, 1, 0, 0.478769,0.164596)    );
  // itree = 251
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661364,0.00146141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0265564,-0.000390712) , 
5, 164.275, 1, 0, 0.543465,0.14947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630689,0.00177261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537217,0.0268927) , 
5, 225.382, 1, 0, 0.599743,0.300586) , 
2, 18.6581, 1, 0, 0.552927,0.174876) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0943717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103961) , 
1, 256.841, 1, 0, 0,-0.000125379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.192383) , 
2, 27.021, 1, 0, 0,-0.00421405) , 
7, 418.952, 1, 0, 0.472454,0.148811)    );
  // itree = 252
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528594,0.00129096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.840101,0.00171172) , 
0, 216.079, 1, 0, 0.725509,0.217658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.128167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255422,0.00405268) , 
0, 350.807, 1, 0, 0.0873678,0.0201461) , 
5, 165.59, 1, 0, 0.658933,0.197052) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.207409) , 
2, 18.6581, 1, 0, 0,-0.00340517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107097,0.0878978) , 
6, 328.428, 1, 0, 0.0159828,0.0118119) , 
7, 311.813, 1, 0, 0.506607,0.153165)    );
  // itree = 253
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317477,-0.000211151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660223,0.00204162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.215727) , 
7, 405.212, 1, 0, 0.625229,0.22316) , 
3, 0.0807457, 1, 0, 0.608377,0.210283) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0949177) , 
1, 301.235, 1, 0, 0,-4.66035e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0999015,0.101203) , 
9, 0.992351, 1, 0, 0.0224963,0.0218103) , 
8, 213.571, 1, 0, 0.52566,0.183674)    );
  // itree = 254
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274499,-0.000338253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552134,0.00181801) , 
3, 0.242237, 1, 0, 0.419916,0.0988553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752589,0.00154039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806699,0.00271636) , 
2, 20.3461, 1, 0, 0.762712,0.234178) , 
0, 216.555, 1, 0, 0.654233,0.191355) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0731137,0.216735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.189844) , 
0, 257.684, 1, 0, 0.0207165,0.017005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217836,0.131821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.218281) , 
3, 0.242147, 1, 0, 0.134308,0.131083) , 
9, 0.985103, 1, 0, 0.0553231,0.0517599) , 
7, 317.074, 1, 0, 0.512473,0.158313)    );
  // itree = 255
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766526,0.00165227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.104733) , 
8, 162.899, 1, 0, 0.727305,0.219589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.123207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137671,0.00768838) , 
7, 268.465, 1, 0, 0.0607157,0.0124519) , 
5, 168.288, 1, 0, 0.673467,0.202859) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24168,1.39425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.163206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0989199,0.0911209) , 
9, 0.985068, 1, 0, 0.029037,0.025835) , 
1, 117.03, 1, 0, 0.052889,0.0487812) , 
7, 299.699, 1, 0, 0.512952,0.163006)    );
  // itree = 256
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600607,0.00144141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573799,0.00372948) , 
2, 16.1208, 1, 0, 0.594346,0.196455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650675,0.00688057) , 
2, 37.0546, 1, 0, 0.596903,0.209516) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.123929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0951203) , 
1, 301.235, 1, 0, 0,-0.000157914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113235,0.0524648) , 
9, 0.992353, 1, 0, 0.0229161,0.0214651) , 
8, 213.571, 1, 0, 0.51421,0.182424)    );
  // itree = 257
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123029,-0.00430263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696649,0.00118386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0957253,0.00231369) , 
5, 137.53, 1, 0, 0.49403,0.114562) , 
5, 80.995, 1, 0, 0.462708,0.0931874) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694659,0.00244264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.117751) , 
8, 205.422, 1, 0, 0.630467,0.255262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.176573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119748,0.00925122) , 
3, 0.201864, 1, 0, 0.0584016,0.0397677) , 
6, 182.244, 1, 0, 0.520707,0.213916) , 
2, 10.9533, 1, 0, 0.496694,0.163932)    );
  // itree = 258
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.171629,-0.000819409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270596,0.00137094) , 
2, 11.8555, 1, 0, 0.221988,0.0261663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734858,0.00487717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55469,0.00185336) , 
9, 0.888983, 1, 0, 0.570885,0.205229) , 
9, 0.87725, 1, 0, 0.542841,0.190836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.24673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.098665) , 
1, 453.345, 1, 0, 0,-0.00126302) , 
8, 310.945, 1, 0, 0.504525,0.177277)    );
  // itree = 259
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495036,0.000199089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823036,0.00135821) , 
7, 143.046, 1, 0, 0.788361,0.19272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.10095,0.0053373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295425,0.013798) , 
4, 0.726699, 1, 0, 0.114987,0.0717896) , 
7, 199.879, 1, 0, 0.465621,0.134759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624439,0.00919096) , 
2, 41.7723, 1, 0, 0.472005,0.148199)    );
  // itree = 260
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617241,0.00195666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467455,0.00129556) , 
4, 0.242233, 1, 0, 0.56598,0.175624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703401,0.00520456) , 
2, 24.6286, 1, 0, 0.575643,0.19392) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.365128,0.00427045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.121145) , 
5, 144.868, 1, 0, 0.219296,0.142886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.196874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.220147) , 
8, 122.436, 1, 0, 0,-0.00504706) , 
7, 364.079, 1, 0, 0.0931218,0.0577712) , 
6, 157.783, 1, 0, 0.479609,0.166823)    );
  // itree = 261
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383772,-0.000407089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623043,0.00227484) , 
2, 14.764, 1, 0, 0.486605,0.0926804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87201,0.00155512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168006,0.00477624) , 
5, 158.709, 1, 0, 0.789399,0.236354) , 
8, 65.1732, 1, 0, 0.749546,0.217444) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.316914,0.0092199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100074,0.00914627) , 
1, 145.429, 1, 0, 0.137647,0.106919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.142551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.140625) , 
8, 187.745, 1, 0, 0,-0.0168925) , 
4, 0.322975, 1, 0, 0.100842,0.0738138) , 
8, 116.197, 1, 0, 0.540458,0.17115)    );
  // itree = 262
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344935,-0.000131317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667726,0.00164353) , 
2, 6.83044, 1, 0, 0.645226,0.18641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0736649,0.380298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.171357) , 
2, 12.3772, 1, 0, 0.0336253,0.0310335) , 
7, 313.108, 1, 0, 0.501865,0.149989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647393,0.011135) , 
2, 41.7723, 1, 0, 0.507319,0.16363)    );
  // itree = 263
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385588,-4.62308e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469377,0.00176203) , 
5, 107.174, 1, 0, 0.437528,0.0910798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768666,0.00199514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0477993,0.0185814) , 
7, 323.762, 1, 0, 0.683608,0.229566) , 
0, 238.418, 1, 0, 0.585415,0.174306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123233,0.564935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0974145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.132374) , 
2, 24.9011, 1, 0, 0,-0.00095614) , 
9, 0.891683, 1, 0, 0.0267303,0.0240923) , 
7, 426.338, 1, 0, 0.508098,0.153518)    );
  // itree = 264
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750311,0.00136332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0462386,0.000591667) , 
8, 115.162, 1, 0, 0.625677,0.164165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817862,0.00155606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590553,0.0146509) , 
8, 139.152, 1, 0, 0.795398,0.260956) , 
0, 264.175, 1, 0, 0.696136,0.204348) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.163276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128513,0.326315) , 
2, 24.0293, 1, 0, 0.0150623,0.0125768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281986,0.428587) , 
2, 34.2884, 1, 0, 0.0406163,0.0359092) , 
7, 296.099, 1, 0, 0.537083,0.163478)    );
  // itree = 265
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151191,-0.0012041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637522,0.00261244) , 
2, 16.0455, 1, 0, 0.278333,0.0419428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672818,0.00179565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.242675) , 
6, 228.984, 1, 0, 0.63485,0.202571) , 
0, 171.825, 1, 0, 0.577583,0.176769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.182393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0854607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0974209) , 
4, 0.403722, 1, 0, 0,-5.14819e-06) , 
1, 301.396, 1, 0, 0,-0.00153551) , 
8, 213.571, 1, 0, 0.493496,0.150811)    );
  // itree = 266
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726217,0.00138563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.117364) , 
7, 228.973, 1, 0, 0.599383,0.151512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82987,0.00173988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703477,0.00628519) , 
8, 93.9716, 1, 0, 0.785522,0.346364) , 
2, 20.1516, 1, 0, 0.631072,0.184685) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.189242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216021,0.00641078) , 
4, 0.130669, 1, 0, 0.0770191,0.0583034) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.301935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.213903) , 
8, 152.544, 1, 0, 0,-0.00575514) , 
4, 0.161456, 1, 0, 0.0304959,0.019609) , 
7, 315.988, 1, 0, 0.483175,0.144034)    );
  // itree = 267
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635608,0.00150074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389368,5.16819e-05) , 
4, 0.484466, 1, 0, 0.608587,0.159379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712228,0.00182137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604995,0.00552676) , 
8, 124.132, 1, 0, 0.68091,0.294728) , 
0, 358.621, 1, 0, 0.619594,0.179978) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.362017,0.0685585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0897552) , 
8, 214.847, 1, 0, 0.167804,0.161592) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.20726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0865966,0.311477) , 
3, 0.403729, 1, 0, 0.0215604,0.0178974) , 
4, 0.121117, 1, 0, 0.059914,0.0555825) , 
7, 336.881, 1, 0, 0.494406,0.152154)    );
  // itree = 268
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766245,0.00202539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771923,0.00124817) , 
9, 0.913211, 1, 0, 0.770282,0.221244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267316,0.00030091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337085,0.00969223) , 
8, 132.205, 1, 0, 0.289631,0.09642) , 
8, 99.2179, 1, 0, 0.67072,0.195388) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.127098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101547) , 
1, 208.456, 1, 0, 0,-0.00197355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240332,0.049196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.324829) , 
7, 457.142, 1, 0, 0.0970395,0.0935911) , 
0, 360.139, 1, 0, 0.0402867,0.0377008) , 
8, 148.72, 1, 0, 0.517882,0.15716)    );
  // itree = 269
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451991,-0.000338898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672023,0.00159534) , 
8, 52.2103, 1, 0, 0.659862,0.180569) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.151441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24284,0.0513398) , 
1, 231.93, 1, 0, 0.0618216,0.0452765) , 
5, 176.823, 1, 0, 0.538759,0.153172) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.164027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0973317) , 
8, 188.323, 1, 0, 0,-0.00686978) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0998097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105029) , 
4, 0.36335, 1, 0, 0,-2.28253e-06) , 
8, 230.405, 1, 0, 0,-0.00243119) , 
1, 286.343, 1, 0, 0.447121,0.126705)    );
  // itree = 270
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697568,0.00142035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0699986,-0.00036961) , 
5, 155.738, 1, 0, 0.606469,0.160627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572163,0.00226557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491998,0.0740067) , 
1, 369.185, 1, 0, 0.560473,0.258569) , 
0, 317.095, 1, 0, 0.595693,0.183573) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.407834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0990125) , 
9, 0.889621, 1, 0, 0,-0.00384949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121386,0.328751) , 
9, 0.992351, 1, 0, 0.0233595,0.0199747) , 
7, 418.952, 1, 0, 0.515974,0.160786)    );
  // itree = 271
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802161,0.00136575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617183,0.000503077) , 
6, 72.2951, 1, 0, 0.691768,0.129947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.393225,0.000310673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74507,0.00165601) , 
6, 56.5498, 1, 0, 0.720175,0.210818) , 
8, 76.1828, 1, 0, 0.712133,0.187923) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.394893,0.00719344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.157039) , 
3, 0.161, 1, 0, 0.215531,0.171624) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.128431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0945624,0.341558) , 
4, 0.565206, 1, 0, 0.012552,0.00885115) , 
1, 145.429, 1, 0, 0.0589346,0.0460463) , 
7, 244.632, 1, 0, 0.47183,0.135728)    );
  // itree = 272
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.434162,0.000860541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706979,0.00172517) , 
9, 0.970684, 1, 0, 0.595173,0.157693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774116,0.00199565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0937135,0.00340112) , 
7, 273.081, 1, 0, 0.702511,0.253094) , 
2, 11.7314, 1, 0, 0.646953,0.203714) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0658689,0.223683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.278286,0.368183) , 
2, 16.2656, 1, 0, 0.137281,0.13239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1372,1.08888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.260738) , 
1, 143.896, 1, 0, 0.0255469,0.0227289) , 
6, 133.262, 1, 0, 0.0638138,0.0602858) , 
7, 336.881, 1, 0, 0.522466,0.173096)    );
  // itree = 273
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437567,0.00106959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210561,-0.00267383) , 
3, 0.161487, 1, 0, 0.325675,-0.0182711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625049,0.00196663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101134) , 
8, 179.235, 1, 0, 0.587163,0.202254) , 
8, 59.3288, 1, 0, 0.56842,0.186447) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0981137) , 
1, 287.8, 1, 0, 0,-2.96095e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.276139) , 
9, 0.992253, 1, 0, 0,-0.000754725) , 
8, 216.72, 1, 0, 0.487536,0.159809)    );
  // itree = 274
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.201187,-0.00209501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687872,0.00146017) , 
0, 259.177, 1, 0, 0.449503,0.0441628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631408,0.00158899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.733708,0.00390731) , 
2, 23.6278, 1, 0, 0.641095,0.20839) , 
2, 7.66551, 1, 0, 0.6155,0.18645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.316253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.185956) , 
2, 26.5966, 1, 0, 0,-0.000649878) , 
1, 147.55, 1, 0, 0,-0.00456801) , 
7, 352.991, 1, 0, 0.494983,0.149048)    );
  // itree = 275
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453342,0.00077757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674148,0.00192029) , 
2, 7.58432, 1, 0, 0.644807,0.207149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.311024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.128812) , 
8, 214.25, 1, 0, 0,-0.00560668) , 
5, 299.137, 1, 0, 0.601512,0.192864) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.106441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.117467) , 
7, 356.167, 1, 0, 0,-0.00188957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.239694) , 
2, 25.8459, 1, 0, 0,-0.00795612) , 
6, 184.772, 1, 0, 0.528606,0.168524)    );
  // itree = 276
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.263571,-0.00243484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598627,0.00163357) , 
8, 65.7829, 1, 0, 0.570481,0.145098) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709598,0.00359308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.355839) , 
5, 298.003, 1, 0, 0.604239,0.308814) , 
2, 18.8634, 1, 0, 0.577809,0.180634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.102393,0.3701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0994774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.090958) , 
4, 0.443485, 1, 0, 0,-2.53862e-06) , 
1, 247.504, 1, 0, 0.0211475,0.0206848) , 
8, 205.325, 1, 0, 0.487548,0.154699)    );
  // itree = 277
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.407316,-0.000688012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668171,0.00153379) , 
8, 57.2252, 1, 0, 0.650457,0.168744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643289,0.00569375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115791,0.198304) , 
7, 262.504, 1, 0, 0.436099,0.325923) , 
6, 153.602, 1, 0, 0.627556,0.185537) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.113154) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.321221) , 
2, 17.9658, 1, 0, 0,-0.006613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.167171,0.525285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.219387) , 
7, 449.912, 1, 0, 0.0887894,0.0860701) , 
4, 0.161489, 1, 0, 0.0574487,0.0533551) , 
7, 319.588, 1, 0, 0.486576,0.15285)    );
  // itree = 278
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778039,0.00112263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882905,0.0018304) , 
7, 183.856, 1, 0, 0.812153,0.21343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0327458,-0.00644973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302618,0.00401351) , 
9, 0.956335, 1, 0, 0.189015,0.0853975) , 
7, 196.868, 1, 0, 0.632595,0.176537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164533,0.939822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.152693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127086,0.0992284) , 
4, 0.565211, 1, 0, 0.0186694,0.0166692) , 
9, 0.891683, 1, 0, 0.0497676,0.0466738) , 
7, 320.987, 1, 0, 0.49407,0.145672)    );
  // itree = 279
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768727,0.00116223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0862546,0.00338422) , 
7, 208.541, 1, 0, 0.563664,0.135317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616022,0.00139449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631248,0.00340138) , 
3, 0.121119, 1, 0, 0.626664,0.260132) , 
2, 14.5172, 1, 0, 0.582988,0.173602) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0992609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105543) , 
1, 230.278, 1, 0, 0,-7.25639e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.353385) , 
2, 27.021, 1, 0, 0,-0.00340695) , 
7, 418.952, 1, 0, 0.502738,0.149237)    );
  // itree = 280
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547858,0.00143301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22453,-4.68425e-05) , 
1, 125.527, 1, 0, 0.395636,0.0772309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685952,0.00208106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586319,0.00127583) , 
4, 0.282439, 1, 0, 0.658045,0.206638) , 
0, 209.657, 1, 0, 0.576337,0.166343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.144074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0864882) , 
4, 0.403722, 1, 0, 0,-2.49014e-05) , 
8, 182.786, 1, 0, 0,-0.001994) , 
1, 286.643, 1, 0, 0.485144,0.139708)    );
  // itree = 281
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656232,0.00168304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.507829,0.0266968) , 
0, 485.574, 1, 0, 0.648025,0.212288) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.231113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.111289) , 
1, 168.68, 1, 0, 0,-0.011518) , 
6, 208.467, 1, 0, 0.609138,0.198858) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.097403) , 
1, 287.8, 1, 0, 0,-0.000243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106024,0.364075) , 
9, 0.992293, 1, 0, 0.022431,0.0215251) , 
8, 213.571, 1, 0, 0.526725,0.173949)    );
  // itree = 282
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644635,0.00174175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.120645) , 
5, 189.469, 1, 0, 0.560677,0.169511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758599,0.00825446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.453773,0.00143808) , 
9, 0.92015, 1, 0, 0.611456,0.338549) , 
2, 20.1516, 1, 0, 0.567641,0.192695) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279539,0.185307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.121273) , 
4, 0.161319, 1, 0, 0.129067,0.12334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.289789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0954855) , 
9, 0.91323, 1, 0, 0,-0.000432935) , 
1, 301.235, 1, 0, 0.0497168,0.0472446) , 
7, 426.338, 1, 0, 0.492624,0.171628)    );
  // itree = 283
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.316958,-6.70497e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451196,0.00177276) , 
6, 86.5871, 1, 0, 0.407578,0.0990244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69594,0.00163447) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560638,0.00723394) , 
1, 232.041, 1, 0, 0.679491,0.220751) , 
0, 208.096, 1, 0, 0.598696,0.184582) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.129794) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0967071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101218) , 
4, 0.403722, 1, 0, 0,-1.15972e-05) , 
8, 215.309, 1, 0, 0,-0.00142769) , 
1, 286.343, 1, 0, 0.506713,0.156003)    );
  // itree = 284
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444234,0.000543311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683511,0.00145256) , 
2, 11.6931, 1, 0, 0.544502,0.108083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727553,0.00128417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872901,0.00167257) , 
9, 0.949272, 1, 0, 0.834695,0.227026) , 
0, 257.228, 1, 0, 0.667182,0.158367) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0899823,-0.00222661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.644646,0.00231867) , 
3, 0.2421, 1, 0, 0.439861,0.14869) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0780438,-0.00301982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0630659,0.000893291) , 
1, 117.03, 1, 0, 0.0653147,-0.000386148) , 
6, 81.3742, 1, 0, 0.155221,0.0353981) , 
5, 141.436, 1, 0, 0.452992,0.10692)    );
  // itree = 285
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533908,0.000844274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.834087,0.00175864) , 
0, 251.596, 1, 0, 0.659043,0.156464) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221586,0.00287571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.027364,-0.0148164) , 
4, 0.201861, 1, 0, 0.133817,0.0476919) , 
5, 139.747, 1, 0, 0.467219,0.116738) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561941,0.000977603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754265,0.00472125) , 
2, 22.2029, 1, 0, 0.702354,0.380903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.223301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.13717) , 
1, 223.698, 1, 0, 0,-0.0139903) , 
6, 172.061, 1, 0, 0.507687,0.271453) , 
2, 18.6581, 1, 0, 0.476167,0.150948)    );
  // itree = 286
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646546,0.00179311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559716,0.0251207) , 
6, 191.692, 1, 0, 0.642154,0.221215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.28621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.123403) , 
8, 162.281, 1, 0, 0,-0.00689955) , 
7, 335.166, 1, 0, 0.588662,0.202213) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0995823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.100253) , 
1, 305.255, 1, 0, 0,-5.62751e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.30206) , 
2, 27.0285, 1, 0, 0,-0.00152617) , 
7, 422.918, 1, 0, 0.513343,0.176145)    );
  // itree = 287
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.338485,-0.00124899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615574,0.00152935) , 
8, 60.7333, 1, 0, 0.59593,0.148684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767527,0.00398435) , 
2, 23.1779, 1, 0, 0.61419,0.174388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.234499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0997298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.108868) , 
9, 0.891683, 1, 0, 0,-0.000215995) , 
1, 159.571, 1, 0, 0,-0.00318641) , 
7, 349.025, 1, 0, 0.48882,0.138141)    );
  // itree = 288
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.42676,-0.00052233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366239,0.000493687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670813,0.00157199) , 
2, 7.03567, 1, 0, 0.645659,0.178463) , 
7, 136.704, 1, 0, 0.63438,0.166433) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.163887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.116511) , 
1, 120.684, 1, 0, 0,-0.00598765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115675,0.0128822) , 
4, 0.645824, 1, 0, 0.0119313,0.0038902) , 
5, 184.297, 1, 0, 0.469404,0.123352)    );
  // itree = 289
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612325,0.00163217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244008,-0.00235489) , 
4, 0.161394, 1, 0, 0.432338,0.0242816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594847,0.00330848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562064,0.00192629) , 
1, 92.1013, 1, 0, 0.565471,0.191966) , 
8, 65.1897, 1, 0, 0.551194,0.173983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.187324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.086244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0982445) , 
4, 0.40364, 1, 0, 0,-5.05105e-06) , 
1, 301.235, 1, 0, 0,-0.00110122) , 
8, 213.571, 1, 0, 0.467231,0.147313)    );
  // itree = 290
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.455496,-8.56996e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620087,0.00151823) , 
8, 68.5778, 1, 0, 0.600558,0.150586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678484,0.00172435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419419,0.0253216) , 
8, 133.379, 1, 0, 0.614391,0.257415) , 
2, 14.5172, 1, 0, 0.605437,0.188263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0932951,0.258417) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0954458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0995313) , 
4, 0.40364, 1, 0, 0,-2.4809e-06) , 
1, 287.8, 1, 0, 0.024413,0.0230803) , 
8, 216.72, 1, 0, 0.523651,0.165011)    );
  // itree = 291
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799039,0.0012604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217324,0.00179554) , 
7, 187.449, 1, 0, 0.610584,0.151161) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763153,0.00214956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657486,0.0162173) , 
8, 101.191, 1, 0, 0.72428,0.369288) , 
0, 357.977, 1, 0, 0.627463,0.183543) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.113187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21229,0.0611332) , 
4, 0.130725, 1, 0, 0.0725362,0.0687572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.277869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.126481) , 
1, 236.083, 1, 0, 0,-0.00370753) , 
4, 0.161489, 1, 0, 0.0295853,0.0258486) , 
7, 311.813, 1, 0, 0.474215,0.143123)    );
  // itree = 292
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.333881,-0.00015161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363668,0.00519321) , 
6, 141.227, 1, 0, 0.339456,0.0397164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788441,0.00141813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.117466) , 
6, 175.359, 1, 0, 0.728188,0.177452) , 
0, 200.451, 1, 0, 0.612638,0.13651) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.116165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.241836) , 
2, 26.3628, 1, 0, 0,-0.0064317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338568,0.0506434) , 
2, 14.2371, 1, 0, 0.166866,0.158305) , 
9, 0.992351, 1, 0, 0.0342983,0.0274289) , 
5, 184.297, 1, 0, 0.451461,0.10611)    );
  // itree = 293
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180285,-0.00164171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468754,0.000990498) , 
4, 0.322324, 1, 0, 0.295764,-5.13793e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689482,0.00301352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631975,0.001673) , 
9, 0.906368, 1, 0, 0.639715,0.205296) , 
9, 0.884419, 1, 0, 0.608792,0.186834) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287202,0.0479422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0845179,0.00486229) , 
4, 0.120813, 1, 0, 0.140864,0.107163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0994525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0947586) , 
4, 0.40364, 1, 0, 0,-3.23672e-06) , 
8, 210.233, 1, 0, 0.0620488,0.047202) , 
1, 232.612, 1, 0, 0.484053,0.154977)    );
  // itree = 294
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144229,-0.00302687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.19094) , 
8, 155.663, 1, 0, 0.0830239,-0.0459738) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650726,0.00210335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560594,0.00122049) , 
3, 0.242237, 1, 0, 0.620824,0.19218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127947,2.03973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0957087) , 
7, 423.013, 1, 0, 0.0552508,0.0541564) , 
1, 286.343, 1, 0, 0.532999,0.170747) , 
9, 0.87725, 1, 0, 0.501328,0.155493)    );
  // itree = 295
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.437783,-0.000692109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714749,0.00127479) , 
8, 66.9751, 1, 0, 0.681314,0.140563) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0850711,0.00377155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.135471) , 
9, 0.949225, 1, 0, 0.0418126,0.0171639) , 
7, 246.412, 1, 0, 0.471981,0.10017) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804043,0.00194504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0432217,0.0378411) , 
5, 163.862, 1, 0, 0.480051,0.160387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660417,0.00676257) , 
3, 0.403729, 1, 0, 0.53234,0.249179) , 
2, 18.6581, 1, 0, 0.486048,0.134897)    );
  // itree = 296
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.251078,-8.78561e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715342,0.00126089) , 
0, 183.143, 1, 0, 0.600975,0.125004) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76136,0.00198948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.150714) , 
7, 275.49, 1, 0, 0.696561,0.232417) , 
2, 11.9368, 1, 0, 0.64301,0.17224) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.263656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127037,0.0229132) , 
3, 0.115339, 1, 0, 0.0785404,0.0710059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.186541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.149461) , 
1, 295.204, 1, 0, 0,-0.00319147) , 
3, 0.242237, 1, 0, 0.0457069,0.039988) , 
7, 321.603, 1, 0, 0.502863,0.141209)    );
  // itree = 297
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139028,-0.00584507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595283,0.000805077) , 
9, 0.9707, 1, 0, 0.405568,-0.00999986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637448,0.00166836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43766,0.0622434) , 
2, 34.0676, 1, 0, 0.631325,0.193749) , 
8, 57.6439, 1, 0, 0.615716,0.179661) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.208407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0948317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.106432) , 
4, 0.444004, 1, 0, 0,-0.000129119) , 
1, 234.069, 1, 0, 0,-0.00098591) , 
8, 205.875, 1, 0, 0.525261,0.153122)    );
  // itree = 298
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573508,0.00118563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71624,0.00285785) , 
2, 17.9919, 1, 0, 0.600268,0.16163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125288,0.473227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.175162) , 
8, 119.434, 1, 0, 0.0200783,0.0195929) , 
7, 352.991, 1, 0, 0.486599,0.133802) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611917,0.0126971) , 
2, 41.9453, 1, 0, 0.490929,0.146837)    );
  // itree = 299
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227991,-0.00226051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718627,0.0014598) , 
8, 50.5915, 1, 0, 0.699816,0.176078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132651,0.00141539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.140253) , 
9, 0.898874, 1, 0, 0.0365985,0.00660403) , 
8, 152.292, 1, 0, 0.623643,0.156613) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.164494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24943,0.269356) , 
5, 359.446, 1, 0, 0.101258,0.0946809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.111234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0900566) , 
3, 0.121092, 1, 0, 0,-8.92347e-05) , 
1, 241.474, 1, 0, 0.0356864,0.0333105) , 
7, 352.991, 1, 0, 0.508692,0.132506)    );
  // itree = 300
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.159454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338019,0.00159994) , 
1, 98.368, 1, 0, 0.279994,0.0510071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351909,-0.000724029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688762,0.00185201) , 
8, 58.0716, 1, 0, 0.670664,0.200508) , 
0, 170.021, 1, 0, 0.605623,0.175618) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.239332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0973394) , 
8, 194.598, 1, 0, 0,-0.0077739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124177,0.0107436) , 
4, 0.524838, 1, 0, 0.0215585,0.0101119) , 
1, 286.343, 1, 0, 0.516671,0.150412)    );
  // itree = 301
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225295,-0.000188588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597925,0.00155589) , 
9, 0.877231, 1, 0, 0.570305,0.152194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61582,0.00932333) , 
2, 34.0676, 1, 0, 0.572466,0.164901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109832,0.520678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.304826) , 
4, 0.403722, 1, 0, 0,-0.000339942) , 
0, 183.925, 1, 0, 0.0235742,0.0227727) , 
8, 213.571, 1, 0, 0.487974,0.143023)    );
  // itree = 302
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605785,0.000575338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.164854) , 
8, 88.7764, 1, 0, 0.394357,0.011361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682971,0.00338438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670565,0.00138716) , 
9, 0.906368, 1, 0, 0.672084,0.187013) , 
9, 0.884419, 1, 0, 0.644372,0.169487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389532,0.0546683) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0751781,0.0825936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.01798,0.000709846) , 
4, 0.117475, 1, 0, 0.0277483,0.0144514) , 
4, 0.0807444, 1, 0, 0.0694294,0.0567022) , 
8, 148.72, 1, 0, 0.491008,0.139402)    );
  // itree = 303
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.112275,-0.00382789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566719,0.00116166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616705,0.00190079) , 
2, 10.9533, 1, 0, 0.595621,0.161327) , 
1, 69.2698, 1, 0, 0.576115,0.150701) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.263946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.108299) , 
7, 325.528, 1, 0, 0,-0.0134654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278732,0.0993051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102223) , 
8, 229.1, 1, 0, 0.106209,0.10403) , 
0, 420.202, 1, 0, 0.0485425,0.0402354) , 
1, 286.343, 1, 0, 0.486065,0.131846)    );
  // itree = 304
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549666,0.00113382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28176,-0.00253142) , 
4, 0.322788, 1, 0, 0.488257,0.0588358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0913313,-0.000766798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.602291,0.00212789) , 
0, 107.308, 1, 0, 0.576626,0.206657) , 
8, 74.4631, 1, 0, 0.561049,0.1806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.111952,0.195448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0950229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.1022) , 
2, 18.1711, 1, 0, 0,-8.89533e-05) , 
0, 184.324, 1, 0, 0.0239712,0.0233486) , 
8, 213.571, 1, 0, 0.478043,0.156296)    );
  // itree = 305
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169544,-0.00145597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59915,0.0017307) , 
9, 0.870042, 1, 0, 0.577328,0.165222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466182,0.0889088) , 
5, 292.531, 1, 0, 0.572463,0.177988) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.219836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0993581) , 
9, 0.889629, 1, 0, 0,-0.00120078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111579,0.518631) , 
9, 0.992351, 1, 0, 0.0232197,0.0219301) , 
7, 410.988, 1, 0, 0.490104,0.154587)    );
  // itree = 306
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70219,0.000891335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299185,-0.000879885) , 
7, 166.877, 1, 0, 0.567566,0.0758691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711296,0.00177153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.137004) , 
8, 164.146, 1, 0, 0.65705,0.20685) , 
8, 70.3261, 1, 0, 0.643134,0.186481) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141283,0.0871166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.250158) , 
6, 233.182, 1, 0, 0.0907926,0.0831952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.106436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.425587) , 
4, 0.44409, 1, 0, 0,-0.000424499) , 
1, 290.78, 1, 0, 0.0450602,0.0410758) , 
7, 315.988, 1, 0, 0.499855,0.151646)    );
  // itree = 307
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.446495,2.71631e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683067,0.00191225) , 
8, 68.6602, 1, 0, 0.655182,0.198125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503538,0.0190598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338193,0.00370737) , 
9, 0.977882, 1, 0, 0.454324,0.362789) , 
1, 235.589, 1, 0, 0.635624,0.214158) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.194199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.111073) , 
7, 412.391, 1, 0, 0,-0.00498854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.12343,0.0884188) , 
4, 0.524838, 1, 0, 0.0215366,0.0150415) , 
1, 289.814, 1, 0, 0.547931,0.185724)    );
  // itree = 308
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488401,0.000442055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648043,0.00168599) , 
8, 65.1897, 1, 0, 0.630888,0.172352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0907343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.209061) , 
2, 18.6581, 1, 0, 0,-0.00575002) , 
5, 310.726, 1, 0, 0.592588,0.16154) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.106276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0953616) , 
1, 301.235, 1, 0, 0,-0.000237191) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127269,0.0837624) , 
4, 0.524838, 1, 0, 0.023358,0.0223043) , 
8, 213.571, 1, 0, 0.51129,0.141654)    );
  // itree = 309
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575401,0.00139933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0745792,-0.000515158) , 
1, 185.094, 1, 0, 0.472617,0.114109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703682,0.00300103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613189,0.00172621) , 
3, 0.161491, 1, 0, 0.657242,0.233847) , 
0, 257.256, 1, 0, 0.574082,0.179913) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.136494,0.00138752) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.223229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0984643) , 
8, 276.938, 1, 0, 0,-0.00369608) , 
9, 0.891683, 1, 0, 0.0299769,0.00437634) , 
1, 349.574, 1, 0, 0.51286,0.160162)    );
  // itree = 310
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543367,0.000663064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.189088) , 
6, 92.997, 1, 0, 0.325341,-0.0175562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689827,0.00130658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0223391,0.1398) , 
7, 267.702, 1, 0, 0.467246,0.112729) , 
1, 117.03, 1, 0, 0.442836,0.0903177) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765063,0.0041323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755765,0.00212619) , 
1, 112.684, 1, 0, 0.75916,0.319586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.094196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.204768) , 
2, 25.8256, 1, 0, 0,-0.00263208) , 
7, 362.164, 1, 0, 0.544692,0.228557) , 
2, 18.8634, 1, 0, 0.466918,0.123002)    );
  // itree = 311
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116408,-0.00382249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747436,0.00139297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.312267,0.000892377) , 
5, 151.85, 1, 0, 0.682917,0.169932) , 
9, 0.870042, 1, 0, 0.660179,0.159564) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.231181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.135179) , 
1, 145.429, 1, 0, 0,-0.00224687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12773,1.37621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.147693) , 
5, 266.921, 1, 0, 0.0618973,0.0583067) , 
9, 0.992291, 1, 0, 0.0123175,0.00980327) , 
7, 291.925, 1, 0, 0.486415,0.119397)    );
  // itree = 312
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709184,0.00152724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.242917) , 
7, 340.2, 1, 0, 0.660992,0.180454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658747,0.00352578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497932,0.00363723) , 
1, 217.495, 1, 0, 0.592284,0.338615) , 
1, 207.153, 1, 0, 0.655886,0.192206) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489877,0.0021961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.139374) , 
8, 135.887, 1, 0, 0.24403,0.0940946) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.15058) , 
4, 0.484466, 1, 0, 0,-0.000705603) , 
8, 169.714, 1, 0, 0.0719545,0.0272471) , 
1, 228.821, 1, 0, 0.530205,0.156701)    );
  // itree = 313
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710823,0.00111468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34307,0.00942304) , 
8, 123.645, 1, 0, 0.633377,0.172372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.123102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.129154) , 
7, 378.281, 1, 0, 0,-0.00429088) , 
6, 182.754, 1, 0, 0.575552,0.156243) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0993658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102436) , 
4, 0.403168, 1, 0, 0,-3.42598e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.270775) , 
9, 0.992291, 1, 0, 0,-0.00158108) , 
8, 202.273, 1, 0, 0.481737,0.130518)    );
  // itree = 314
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694368,0.00125886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726113,0.00203184) , 
2, 14.5172, 1, 0, 0.70385,0.188168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.196426,0.00711948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.129605) , 
9, 0.942011, 1, 0, 0.0958778,0.0578347) , 
8, 150.218, 1, 0, 0.645502,0.175659) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.680724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325838,0.276683) , 
9, 0.875227, 1, 0, 0.158391,0.151944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.138667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131039,0.116202) , 
4, 0.565211, 1, 0, 0.0187,0.0172899) , 
9, 0.891683, 1, 0, 0.0494226,0.0469047) , 
7, 319.588, 1, 0, 0.50582,0.145488)    );
  // itree = 315
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704599,0.00157767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0820116,0.127213) , 
5, 193.12, 1, 0, 0.610122,0.182121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547085,0.0109192) , 
2, 34.2513, 1, 0, 0.60783,0.191452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.113487,0.323505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.101038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.107433) , 
4, 0.444094, 1, 0, 0,-0.000185339) , 
1, 234.069, 1, 0, 0.0222745,0.0201375) , 
8, 205.422, 1, 0, 0.518786,0.165401)    );
  // itree = 316
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760407,0.00122384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422823,0.00941643) , 
7, 217.537, 1, 0, 0.703784,0.203287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131547,0.0107352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.136058) , 
3, 0.20182, 1, 0, 0.0718955,0.0445783) , 
5, 172.879, 1, 0, 0.568743,0.169369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.127635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0999287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.149836) , 
9, 0.985108, 1, 0, 0,-0.00179068) , 
1, 147.55, 1, 0, 0,-0.00326011) , 
6, 174.937, 1, 0, 0.484677,0.143853)    );
  // itree = 317
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.586174,0.00193321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.142689) , 
7, 409.505, 1, 0, 0.539877,0.169003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.118079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.201409) , 
9, 0.977916, 1, 0, 0,-0.00155054) , 
8, 278.617, 1, 0, 0.489908,0.153218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.199912) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.181482,-0.00175979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516537,0.00127872) , 
2, 14.6185, 1, 0, 0.348241,0.0260977) , 
4, 0.640235, 1, 0, 0.226505,-0.0180076) , 
4, 0.484466, 1, 0, 0.457719,0.132294)    );
  // itree = 318
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.600164,0.00143515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658402,0.00272232) , 
2, 14.7226, 1, 0, 0.618965,0.191917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0953194) , 
7, 405.212, 1, 0, 0.584131,0.18111) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0985548) , 
1, 287.8, 1, 0, 0,-2.24066e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.178213) , 
9, 0.992353, 1, 0, 0,-0.000894681) , 
8, 213.571, 1, 0, 0.498756,0.154508)    );
  // itree = 319
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0670599,-0.00370173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281922,0.00119557) , 
3, 0.281459, 1, 0, 0.15287,-0.00694755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673476,0.00227773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554441,0.00130657) , 
3, 0.161491, 1, 0, 0.616267,0.181673) , 
0, 141.975, 1, 0, 0.565502,0.161009) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.215275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10569) , 
8, 218.937, 1, 0, 0,-0.00574287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0900404,0.416801) , 
2, 18.2126, 1, 0, 0.0239222,0.0193373) , 
1, 289.028, 1, 0, 0.477968,0.138111)    );
  // itree = 320
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556352,0.00109145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611008,0.0024967) , 
2, 8.88289, 1, 0, 0.595773,0.192867) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.111037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0909348) , 
8, 150.028, 1, 0, 0,-0.000105428) , 
7, 403.239, 1, 0, 0.543197,0.175837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.787684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105854) , 
3, 0.164457, 1, 0, 0,-0.000416529) , 
8, 314.357, 1, 0, 0.50559,0.163635)    );
  // itree = 321
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.143195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113236,0.00122423) , 
1, 151.544, 1, 0, 0.0580363,-0.0458133) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669381,0.00183261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.132173) , 
8, 158.575, 1, 0, 0.619006,0.185038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.108327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104179,1.7775) , 
9, 0.992351, 1, 0, 0.0233651,0.0227603) , 
8, 202.273, 1, 0, 0.523484,0.159014) , 
0, 130.791, 1, 0, 0.487441,0.143152)    );
  // itree = 322
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533565,0.00062304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589539,0.00192482) , 
8, 75.2576, 1, 0, 0.579225,0.168365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315825,-0.00231153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463091,0.00109513) , 
5, 113.246, 1, 0, 0.427583,0.0303705) , 
9, 0.992251, 1, 0, 0.554848,0.146182) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0998411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.130778) , 
4, 0.444004, 1, 0, 0,-0.00016998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.273607) , 
9, 0.992353, 1, 0, 0,-0.00406827) , 
8, 207.723, 1, 0, 0.467007,0.122395)    );
  // itree = 323
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43475,0.00027299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672406,0.00144014) , 
8, 62.1085, 1, 0, 0.646747,0.159556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712015,0.00503239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609237,0.00157295) , 
9, 0.941787, 1, 0, 0.667507,0.327212) , 
2, 18.8634, 1, 0, 0.651229,0.195752) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.326114,0.00391872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.342199) , 
8, 178.077, 1, 0, 0.19901,0.125393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.272317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130659,2.14964) , 
2, 26.5574, 1, 0, 0.0190054,0.0165192) , 
7, 306.691, 1, 0, 0.0706472,0.0477542) , 
8, 148.72, 1, 0, 0.501713,0.157638)    );
  // itree = 324
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718157,0.00118714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.11995) , 
8, 120.612, 1, 0, 0.567918,0.125845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65648,0.00130653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752105,0.00198783) , 
2, 8.88289, 1, 0, 0.726618,0.225098) , 
5, 100.944, 1, 0, 0.685774,0.199554) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295782,0.226889) , 
0, 333.15, 1, 0, 0.198837,0.193922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.154456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0931788) , 
7, 380.109, 1, 0, 0,-0.0061989) , 
4, 0.161456, 1, 0, 0.0870444,0.0814076) , 
5, 184.451, 1, 0, 0.536439,0.170086)    );
  // itree = 325
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518181,0.00048594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740838,0.00178841) , 
8, 65.2288, 1, 0, 0.714549,0.208164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0955148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.156225) , 
9, 0.956368, 1, 0, 0,-0.00230693) , 
8, 158.055, 1, 0, 0.666352,0.193968) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.220557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284659,0.0965992) , 
4, 0.130725, 1, 0, 0.105528,0.100289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.225769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103949) , 
1, 236.083, 1, 0, 0,-0.0027366) , 
4, 0.161487, 1, 0, 0.0435611,0.0397912) , 
7, 311.813, 1, 0, 0.519419,0.157593)    );
  // itree = 326
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756545,0.00134568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491662,0.0129827) , 
6, 158.612, 1, 0, 0.729188,0.207438) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266089,0.00914661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0309157,-0.00162159) , 
3, 0.161491, 1, 0, 0.14832,0.0888785) , 
5, 158.566, 1, 0, 0.59666,0.180388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237292,0.00715463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.252262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.292238) , 
8, 196.577, 1, 0, 0,-0.00620674) , 
9, 0.884532, 1, 0, 0.0484313,0.0310334) , 
1, 287.8, 1, 0, 0.510017,0.156784)    );
  // itree = 327
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680168,0.00340507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725082,0.00153767) , 
1, 64.1654, 1, 0, 0.721962,0.208065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.136758,0.00181369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.116273) , 
9, 0.949152, 1, 0, 0.0683814,0.0278249) , 
8, 154.908, 1, 0, 0.67771,0.195862) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0707138,0.0172712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213591,1.48569) , 
4, 0.403722, 1, 0, 0.105787,0.0963113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.234185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.1038) , 
1, 145.429, 1, 0, 0,-0.00200333) , 
6, 159.28, 1, 0, 0.050215,0.0446646) , 
7, 291.925, 1, 0, 0.507485,0.154845)    );
  // itree = 328
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265154,-0.00138247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68749,0.00150334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.376781) , 
8, 168.763, 1, 0, 0.638278,0.165689) , 
8, 57.6942, 1, 0, 0.617009,0.151381) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224654,0.145294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0532977,0.097723) , 
9, 0.920445, 1, 0, 0.11655,0.114732) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.122535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.304608) , 
4, 0.553699, 1, 0, 0,-0.00293424) , 
4, 0.161489, 1, 0, 0.049233,0.0467703) , 
7, 321.603, 1, 0, 0.474244,0.125077)    );
  // itree = 329
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685165,0.00137123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663065,0.00304654) , 
2, 18.6581, 1, 0, 0.680742,0.196304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542941,0.118343) , 
8, 142.533, 1, 0, 0.67586,0.207808) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.118065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132708,0.996323) , 
9, 0.963517, 1, 0, 0.0615489,0.0591486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.322262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.155488) , 
1, 219.243, 1, 0, 0,-0.00319965) , 
7, 294.804, 1, 0, 0.0139307,0.010912) , 
8, 148.72, 1, 0, 0.519763,0.161376)    );
  // itree = 330
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722956,0.00132284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0685016,0.000862724) , 
5, 163.394, 1, 0, 0.672197,0.16429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847483,0.0029441) , 
2, 20.3461, 1, 0, 0.699589,0.197426) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.130025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.254785) , 
4, 0.524834, 1, 0, 0,-0.00242989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255157,0.0941346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.321715) , 
7, 392.258, 1, 0, 0.0860463,0.0788226) , 
2, 18.6581, 1, 0, 0.0270231,0.0230877) , 
7, 285.684, 1, 0, 0.522479,0.151517)    );
  // itree = 331
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390132,0.000323171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676908,0.00157557) , 
2, 7.03579, 1, 0, 0.649259,0.170626) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.335759,0.421233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0148952,0.0745063) , 
4, 0.0807444, 1, 0, 0.0466808,0.0404205) , 
5, 173.754, 1, 0, 0.480711,0.134206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58646,0.00621936) , 
2, 41.7723, 1, 0, 0.484591,0.143409)    );
  // itree = 332
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738338,0.00131113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.122227) , 
7, 240.011, 1, 0, 0.687368,0.164262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556467,0.00781781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389324,0.00529883) , 
9, 0.94237, 1, 0, 0.477041,0.365472) , 
6, 153.109, 1, 0, 0.671208,0.179722) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180198,0.108359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110232) , 
8, 186.738, 1, 0, 0.0790304,0.0763085) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.150806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128675,0.223002) , 
4, 0.565211, 1, 0, 0.0178049,0.0119626) , 
9, 0.913211, 1, 0, 0.0376686,0.0328387) , 
7, 284.548, 1, 0, 0.489675,0.137635)    );
  // itree = 333
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823534,0.00134797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.191858,0.00555917) , 
7, 196.802, 1, 0, 0.627929,0.176292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.814413,0.00288308) , 
2, 25.9696, 1, 0, 0.642738,0.190954) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14649,0.0328267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.162862) , 
4, 0.201861, 1, 0, 0.0795938,0.0756199) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.12425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.172443) , 
4, 0.444004, 1, 0, 0,-0.000709708) , 
6, 161.493, 1, 0, 0.0339915,0.0318878) , 
7, 346.181, 1, 0, 0.523868,0.159893)    );
  // itree = 334
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.356819,0.00049572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677041,0.00164635) , 
9, 0.963525, 1, 0, 0.554447,0.127461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743536,0.00200152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0918529,0.298382) , 
5, 201.638, 1, 0, 0.599452,0.212612) , 
2, 11.1695, 1, 0, 0.579793,0.175416) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0894016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0988262) , 
3, 0.202329, 1, 0, 0,-7.59379e-07) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.133623) , 
9, 0.977977, 1, 0, 0,-0.000262004) , 
1, 429.074, 1, 0, 0.538391,0.162871)    );
  // itree = 335
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.49797,0.000982301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713406,0.00160997) , 
9, 0.977873, 1, 0, 0.605613,0.141638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.745732,0.00365854) , 
2, 22.3748, 1, 0, 0.619472,0.163544) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22518,0.211856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.147059) , 
3, 0.161431, 1, 0, 0.102843,0.0996857) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.103462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.431082) , 
4, 0.553678, 1, 0, 0,-0.00398807) , 
4, 0.161489, 1, 0, 0.0433692,0.0397315) , 
7, 324.558, 1, 0, 0.48123,0.133834)    );
  // itree = 336
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.214219,-0.00268971) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.604199,0.00270015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.667078,0.00126937) , 
1, 96.2883, 1, 0, 0.659371,0.163418) , 
8, 57.4485, 1, 0, 0.637443,0.148286) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.183126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216785,0.159758) , 
3, 0.130669, 1, 0, 0.0629146,0.0590001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.112679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.283036) , 
4, 0.484466, 1, 0, 0,-0.00201589) , 
3, 0.161491, 1, 0, 0.0264805,0.0236655) , 
7, 301.664, 1, 0, 0.476198,0.115397)    );
  // itree = 337
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588433,0.00198897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171048,-0.000177526) , 
8, 73.7159, 1, 0, 0.297043,0.0644375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668638,0.00187588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224197,-0.00104573) , 
3, 0.645955, 1, 0, 0.649407,0.192061) , 
0, 167.733, 1, 0, 0.58862,0.170045) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.135228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105858) , 
8, 194.598, 1, 0, 0,-0.00205188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119471,0.312545) , 
4, 0.524834, 1, 0, 0.0212161,0.0175829) , 
1, 286.643, 1, 0, 0.497268,0.145498)    );
  // itree = 338
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652,0.0012437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801687,0.00166001) , 
5, 106.081, 1, 0, 0.727447,0.191536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.297175,0.00123927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515593,0.00441507) , 
2, 18.3324, 1, 0, 0.349822,0.112721) , 
5, 131.461, 1, 0, 0.597721,0.164461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.102972,0.630119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.144472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.090146) , 
1, 234.069, 1, 0, 0,-0.000473522) , 
9, 0.891654, 1, 0, 0.0219309,0.0212803) , 
7, 377.279, 1, 0, 0.498444,0.139774)    );
  // itree = 339
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696298,0.00536758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565228,0.00120374) , 
9, 0.949156, 1, 0, 0.641006,0.365128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119182,-0.00566481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687483,0.00138712) , 
8, 58.4608, 1, 0, 0.664838,0.154781) , 
1, 71.4726, 1, 0, 0.662489,0.175515) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.167083,0.0165328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.196863) , 
3, 0.282505, 1, 0, 0.11594,0.100025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0956088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.107736) , 
2, 19.2085, 1, 0, 0,-0.000123433) , 
7, 426.938, 1, 0, 0.0678659,0.0584988) , 
8, 148.72, 1, 0, 0.513884,0.146271)    );
  // itree = 340
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183841,-0.00247656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315144,9.71978e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696209,0.00150074) , 
1, 80.2639, 1, 0, 0.67182,0.168876) , 
5, 71.8666, 1, 0, 0.647416,0.157476) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.133641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144273,0.0835864) , 
0, 360.829, 1, 0, 0.0823457,0.0782562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.34787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.319425) , 
4, 0.601784, 1, 0, 0,-0.00486722) , 
4, 0.201861, 1, 0, 0.0422243,0.0377559) , 
7, 301.098, 1, 0, 0.487474,0.125836)    );
  // itree = 341
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74198,0.00122771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.166743) , 
8, 108.392, 1, 0, 0.542982,0.111434) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758425,0.00138119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411072,0.0156945) , 
8, 116.027, 1, 0, 0.665734,0.234284) , 
2, 8.88289, 1, 0, 0.633538,0.202062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12619,0.0879109) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.437094) , 
9, 0.994066, 1, 0, 0,-0.000880906) , 
9, 0.884493, 1, 0, 0.0236649,0.0222009) , 
7, 359.32, 1, 0, 0.525157,0.170099)    );
  // itree = 342
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.377317,-0.000350513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620953,0.00146443) , 
8, 68.6602, 1, 0, 0.596051,0.139379) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744503,0.00311571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0992939,0.0158842) , 
6, 175.067, 1, 0, 0.592972,0.268193) , 
2, 18.6581, 1, 0, 0.595442,0.164839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22724,0.00264037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.248267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0999919) , 
7, 385.38, 1, 0, 0,-0.00548552) , 
9, 0.884468, 1, 0, 0.0429533,0.0211923) , 
1, 289.028, 1, 0, 0.507798,0.142052)    );
  // itree = 343
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71878,0.00158294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0936582,0.00292479) , 
5, 164.537, 1, 0, 0.605149,0.163785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754609,0.00556982) , 
2, 26.5574, 1, 0, 0.617144,0.188881) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0857452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0969796) , 
9, 0.906064, 1, 0, 0,-8.67248e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.291279) , 
2, 26.3628, 1, 0, 0,-0.00109895) , 
7, 426.338, 1, 0, 0.541321,0.165539)    );
  // itree = 344
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240542,-0.00278626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709335,0.00171231) , 
8, 59.4984, 1, 0, 0.68532,0.190198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710694,0.13817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.364614,0.00815912) , 
1, 112.684, 1, 0, 0.512287,0.468564) , 
6, 157.128, 1, 0, 0.664728,0.223325) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0858892,0.223638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.322621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.113337) , 
1, 234.282, 1, 0, 0,-0.000926494) , 
9, 0.891683, 1, 0, 0.0173706,0.0162734) , 
7, 336.881, 1, 0, 0.534509,0.181676)    );
  // itree = 345
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172365,-0.000529225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639612,0.00210962) , 
9, 0.87725, 1, 0, 0.609478,0.198339) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705027,0.00106536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.169069) , 
7, 225.81, 1, 0, 0.496443,0.0875994) , 
4, 0.322977, 1, 0, 0.581082,0.170519) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.104131) , 
4, 0.443627, 1, 0, 0,-1.00846e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.188903) , 
9, 0.992353, 1, 0, 0,-0.00112638) , 
8, 216.623, 1, 0, 0.4947,0.145003)    );
  // itree = 346
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359623,-0.000256322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685985,0.00149837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4723,0.00414811) , 
1, 254.052, 1, 0, 0.665274,0.193943) , 
3, 0.080728, 1, 0, 0.649683,0.183111) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.21665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.255924,0.0542884) , 
1, 296.904, 1, 0, 0.0739222,0.0682556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0945952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.134312) , 
9, 0.992351, 1, 0, 0,-0.000676315) , 
8, 216.72, 1, 0, 0.0337535,0.0307986) , 
7, 315.988, 1, 0, 0.503218,0.146892)    );
  // itree = 347
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548176,0.000843295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213357,-0.00184649) , 
0, 204.368, 1, 0, 0.400846,0.0190367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758726,0.00185673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.739571,0.00139021) , 
1, 99.7829, 1, 0, 0.742486,0.194959) , 
8, 60.5382, 1, 0, 0.707021,0.176697) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.148337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164779,0.622179) , 
3, 0.242184, 1, 0, 0.0770272,0.0702543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.13156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.181166) , 
7, 249.431, 1, 0, 0,-0.0146746) , 
9, 0.906064, 1, 0, 0.0214716,0.00899963) , 
8, 116.197, 1, 0, 0.478812,0.120873)    );
  // itree = 348
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303422,-0.000391836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719356,0.00159846) , 
8, 61.3432, 1, 0, 0.687242,0.177611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535227,0.0172099) , 
8, 139.51, 1, 0, 0.677455,0.19781) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.167707) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0952125) , 
9, 0.881104, 1, 0, 0,-0.000472977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339224,0.0321518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.130478) , 
3, 0.161401, 1, 0, 0.161427,0.15162) , 
9, 0.985165, 1, 0, 0.0524067,0.0489034) , 
8, 152.035, 1, 0, 0.529067,0.162459)    );
  // itree = 349
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670408,0.00147109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0400521,0.0164113) , 
5, 194.534, 1, 0, 0.598437,0.150218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468283,0.011192) , 
0, 526.972, 1, 0, 0.59331,0.160774) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0954773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0951603) , 
9, 0.906064, 1, 0, 0,-5.23722e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.194329) , 
2, 26.8843, 1, 0, 0,-0.000495203) , 
7, 422.918, 1, 0, 0.513925,0.139196)    );
  // itree = 350
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.270304,-0.00203941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568315,0.00377016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693317,0.00163917) , 
0, 107.242, 1, 0, 0.680337,0.207217) , 
8, 56.1025, 1, 0, 0.661266,0.19262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115049,7.02596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.215531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734062,0.101899) , 
9, 0.992351, 1, 0, 0.0139759,0.0119441) , 
0, 168.101, 1, 0, 0.0267862,0.024828) , 
7, 311.813, 1, 0, 0.509102,0.152379)    );
  // itree = 351
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715552,0.00154914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0876229,-0.0146522) , 
7, 297.49, 1, 0, 0.683499,0.180179) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.322483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0914352,3.0983) , 
7, 451.297, 1, 0, 0.0355366,0.0148411) , 
5, 229.949, 1, 0, 0.614613,0.162602) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.135935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.11538) , 
7, 347.83, 1, 0, 0,-0.00197286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.294269) , 
4, 0.484462, 1, 0, 0,-0.00487929) , 
1, 286.343, 1, 0, 0.523515,0.137778)    );
  // itree = 352
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694868,0.00122874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.36683,0.0205346) , 
8, 130.272, 1, 0, 0.638511,0.176055) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.425919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.311039) , 
1, 249.336, 1, 0, 0,-0.0151817) , 
8, 186.069, 1, 0, 0.577828,0.15788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.394048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.373942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0917943) , 
1, 445.035, 1, 0, 0,-0.00221943) , 
1, 236.083, 1, 0, 0,-0.00683968) , 
7, 444.295, 1, 0, 0.509219,0.138322)    );
  // itree = 353
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653542,0.00107613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738149,0.00282163) , 
0, 351.371, 1, 0, 0.663046,0.145994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613749,0.0098609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455836,0.00384443) , 
1, 151.738, 1, 0, 0.555402,0.40857) , 
6, 152.891, 1, 0, 0.651245,0.17478) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.43215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10997,0.00270007) , 
6, 260.115, 1, 0, 0.0272176,0.00392991) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.234257,0.14728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.406458) , 
6, 166.336, 1, 0, 0.129065,0.116259) , 
3, 0.201861, 1, 0, 0.0789616,0.0609995) , 
7, 291.925, 1, 0, 0.485115,0.14175)    );
  // itree = 354
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511337,0.00101851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114402,-0.00677267) , 
3, 0.159873, 1, 0, 0.339157,-0.0154557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722876,0.0014244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551542,0.00434161) , 
6, 155.393, 1, 0, 0.707159,0.19138) , 
2, 7.416, 1, 0, 0.672986,0.172173) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.513334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0603639,0.0130545) , 
0, 146.853, 1, 0, 0.0543297,0.0359753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27732,0.116355) , 
2, 34.0676, 1, 0, 0.075266,0.0562303) , 
7, 291.925, 1, 0, 0.507751,0.140122)    );
  // itree = 355
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685355,0.000670641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143852,-0.0035667) , 
6, 89.0895, 1, 0, 0.494595,0.0186573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72545,0.00153157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.118481) , 
8, 150.325, 1, 0, 0.663426,0.17103) , 
8, 65.4226, 1, 0, 0.644193,0.153673) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.325796,0.00938973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.454191) , 
8, 203.505, 1, 0, 0.152383,0.126196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.418739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0491168,2.03117) , 
6, 229.72, 1, 0, 0.0159683,0.00296131) , 
4, 0.121115, 1, 0, 0.052183,0.0356772) , 
7, 291.925, 1, 0, 0.471785,0.119309)    );
  // itree = 356
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235581,-0.00182539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471273,0.000830731) , 
4, 0.241536, 1, 0, 0.353441,0.00208331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.534192,0.00102163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601089,0.00188793) , 
2, 11.1695, 1, 0, 0.573235,0.146669) , 
3, 0.0807457, 1, 0, 0.559135,0.137394) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.365405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.161928) , 
9, 0.889629, 1, 0, 0,-0.00374792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105791,0.0773958) , 
9, 0.992351, 1, 0, 0.0232096,0.0160597) , 
8, 216.72, 1, 0, 0.478799,0.119206)    );
  // itree = 357
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601523,0.00914761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626475,0.000881217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631468,0.00171332) , 
3, 0.121119, 1, 0, 0.630011,0.15325) , 
1, 55.9025, 1, 0, 0.628507,0.169583) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0811024,-0.00044598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586275,0.00357375) , 
0, 296.54, 1, 0, 0.315331,0.150586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121295,0.365829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.31) , 
8, 172.439, 1, 0, 0.0210684,0.0166868) , 
7, 301.406, 1, 0, 0.110892,0.0575592) , 
1, 229.121, 1, 0, 0.506768,0.143236)    );
  // itree = 358
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.370727,-3.9912e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.657501,0.00183444) , 
8, 59.0927, 1, 0, 0.642314,0.185458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.107995) , 
1, 443.049, 1, 0, 0.612831,0.176944) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.480298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.232835) , 
9, 0.886767, 1, 0, 0,-0.0159182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.19636,0.0857268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.256972) , 
7, 378.568, 1, 0, 0.0793303,0.074629) , 
9, 0.949207, 1, 0, 0.0413822,0.0313152) , 
6, 173.918, 1, 0, 0.532088,0.156367)    );
  // itree = 359
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7532,0.00121091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377605,0.000656859) , 
8, 90.1895, 1, 0, 0.666566,0.132094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14187,0.00962677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491943,0.0171596) , 
0, 281.337, 1, 0, 0.341335,0.295794) , 
8, 124.133, 1, 0, 0.57589,0.177734) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.319979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0956588) , 
1, 287.8, 1, 0, 0,-0.00286464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108458,0.0593235) , 
9, 0.992353, 1, 0, 0.0230006,0.0147682) , 
8, 216.72, 1, 0, 0.494443,0.153728)    );
  // itree = 360
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248161,-0.00151013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693687,0.00148753) , 
8, 56.9172, 1, 0, 0.675269,0.171584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.773716,0.00234178) , 
2, 20.3461, 1, 0, 0.687612,0.186135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.493919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107941,0.0245317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.319454) , 
7, 530.938, 1, 0, 0.0745452,0.0667455) , 
0, 182.102, 1, 0, 0.0647214,0.0499653) , 
7, 301.664, 1, 0, 0.534654,0.152697)    );
  // itree = 361
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.360392,-0.000722644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435013,0.000470617) , 
3, 0.201861, 1, 0, 0.396429,-0.00260198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649672,0.00145048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668822,0.00295739) , 
0, 357.977, 1, 0, 0.652042,0.178629) , 
8, 59.666, 1, 0, 0.632878,0.165041) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0903285,0.007492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.485869) , 
3, 0.161489, 1, 0, 0.038495,0.0251718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390724,1.27333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.249273) , 
7, 402.31, 1, 0, 0.165283,0.152443) , 
4, 0.403722, 1, 0, 0.0701688,0.0569662) , 
7, 315.988, 1, 0, 0.487963,0.137209)    );
  // itree = 362
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702454,0.00140744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0501421,0.0005334) , 
7, 309.843, 1, 0, 0.637485,0.150522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116756,0.0028734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477528,0.00511897) , 
2, 9.02679, 1, 0, 0.40566,0.248814) , 
1, 204.893, 1, 0, 0.599691,0.166546) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.262064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.105785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.356912) , 
9, 0.992291, 1, 0, 0,-0.000596808) , 
8, 196.577, 1, 0, 0,-0.00347903) , 
1, 286.343, 1, 0, 0.505238,0.139767)    );
  // itree = 363
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.193559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.299471,0.00030544) , 
3, 0.363276, 1, 0, 0.108796,-0.0499343) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667797,0.00135528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579453,0.00487322) , 
0, 376.282, 1, 0, 0.654847,0.180731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.34632,0.00343009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0333951,0.149846) , 
7, 339.651, 1, 0, 0.181392,0.0847125) , 
6, 131.12, 1, 0, 0.52689,0.154781) , 
9, 0.877302, 1, 0, 0.496317,0.139811)    );
  // itree = 364
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.161204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367148,0.0010675) , 
9, 0.963495, 1, 0, 0.20359,0.00742365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683056,0.00187382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.536961,0.000482837) , 
4, 0.60546, 1, 0, 0.67203,0.20204) , 
0, 141.975, 1, 0, 0.623813,0.182008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412504,0.0030077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.214705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.203223) , 
7, 370.343, 1, 0, 0,-0.00409791) , 
7, 248.484, 1, 0, 0.0623809,0.0269485) , 
1, 232.612, 1, 0, 0.501051,0.148103)    );
  // itree = 365
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612615,0.00138027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564855,0.00473157) , 
0, 362.308, 1, 0, 0.607016,0.168453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0988585,0.162511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.22991) , 
4, 0.161487, 1, 0, 0.040928,0.037514) , 
7, 349.025, 1, 0, 0.49453,0.142434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.600214,0.00753877) , 
2, 40.0416, 1, 0, 0.498437,0.154591)    );
  // itree = 366
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54589,0.00111292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705175,0.00196118) , 
2, 12.0997, 1, 0, 0.611168,0.157267) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759102,0.00677061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.679371,0.00104354) , 
9, 0.955955, 1, 0, 0.72661,0.335296) , 
2, 20.1516, 1, 0, 0.62754,0.182515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120674,0.148153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.287216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.194159) , 
1, 287.8, 1, 0, 0,-0.00306476) , 
9, 0.884493, 1, 0, 0.0219917,0.0178306) , 
7, 356.411, 1, 0, 0.511878,0.15106)    );
  // itree = 367
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75713,0.0013076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0550879,0.0163193) , 
7, 219.789, 1, 0, 0.617318,0.141601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438706,0.00322263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478386,0.21276) , 
8, 158.918, 1, 0, 0.449279,0.267803) , 
0, 327.756, 1, 0, 0.577698,0.171356) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.634888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.15305) , 
1, 287.8, 1, 0, 0,-0.00338263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128837,1.97503) , 
4, 0.524838, 1, 0, 0.0231981,0.0166611) , 
8, 213.571, 1, 0, 0.494632,0.148182)    );
  // itree = 368
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.793343,0.0013479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304115,0.00101342) , 
7, 187.474, 1, 0, 0.630493,0.149095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726487,0.0015579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6298,0.0122159) , 
8, 125.544, 1, 0, 0.702715,0.269083) , 
0, 307.335, 1, 0, 0.647449,0.177265) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.447508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0710671,0.0651597) , 
3, 0.403729, 1, 0, 0.0180585,0.0084342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.378171,0.107481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.899523) , 
3, 0.161431, 1, 0, 0.183095,0.156364) , 
9, 0.992351, 1, 0, 0.0529609,0.0397188) , 
7, 311.813, 1, 0, 0.500143,0.143183)    );
  // itree = 369
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643908,0.00108694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326154,7.23963e-05) , 
5, 120.512, 1, 0, 0.53178,0.0856879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.44448,0.00586806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647812,0.00166755) , 
0, 151.351, 1, 0, 0.617961,0.18922) , 
2, 8.88289, 1, 0, 0.593029,0.159268) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.425226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.336381) , 
8, 181.255, 1, 0, 0,-0.00913022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.078242,0.0672621) , 
3, 0.403729, 1, 0, 0.0209198,0.0119458) , 
5, 252.611, 1, 0, 0.496616,0.134441)    );
  // itree = 370
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691511,0.00132903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0369108,0.0656045) , 
7, 286.771, 1, 0, 0.614257,0.136994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392533,0.911263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245649,0.0238413) , 
0, 430.829, 1, 0, 0.312568,0.302065) , 
5, 329.119, 1, 0, 0.594383,0.147868) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.181421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0967296) , 
8, 194.598, 1, 0, 0,-0.000819784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.430647) , 
4, 0.484462, 1, 0, 0,-0.00374371) , 
1, 286.343, 1, 0, 0.503802,0.124764)    );
  // itree = 371
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601691,0.00090856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.321588,-0.00170864) , 
0, 200.464, 1, 0, 0.484739,0.0201541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690897,0.00427675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706101,0.00147247) , 
1, 73.277, 1, 0, 0.704989,0.19138) , 
8, 65.6495, 1, 0, 0.682191,0.173657) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.541061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0683451,0.0587862) , 
0, 294.809, 1, 0, 0.0435497,0.0343473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291103,0.0141651) , 
2, 34.0676, 1, 0, 0.0668974,0.0551725) , 
7, 296.099, 1, 0, 0.518631,0.142161)    );
  // itree = 372
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595376,0.00144108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57823,0.00672178) , 
0, 474.332, 1, 0, 0.594278,0.158385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.655533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.11476) , 
0, 328.98, 1, 0, 0,-0.00435788) , 
7, 399.368, 1, 0, 0.544931,0.144872) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.612496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0817036) , 
1, 458.882, 1, 0, 0,-0.00469544) , 
7, 537.082, 1, 0, 0.504582,0.133797)    );
  // itree = 373
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746838,0.0012232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331017,0.013022) , 
8, 121.713, 1, 0, 0.69772,0.172414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0997776) , 
8, 162.899, 1, 0, 0.658705,0.162748) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260146,0.0709347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0303444,0.0222966) , 
7, 345.364, 1, 0, 0.108531,0.0969716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.438587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0951879) , 
1, 443.12, 1, 0, 0,-0.00314454) , 
7, 530.942, 1, 0, 0.077286,0.0681494) , 
7, 301.664, 1, 0, 0.50631,0.137953)    );
  // itree = 374
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.371598,-0.00114238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669153,0.0019868) , 
2, 14.764, 1, 0, 0.514896,0.0575446) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703402,0.00188287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0736743,0.0392144) , 
6, 161.54, 1, 0, 0.630413,0.193866) , 
8, 72.7796, 1, 0, 0.612642,0.172894) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.879822) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0821912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.391188) , 
4, 0.403722, 1, 0, 0,-0.0010429) , 
1, 247.504, 1, 0, 0,-0.00687214) , 
8, 207.723, 1, 0, 0.526448,0.147603)    );
  // itree = 375
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651739,0.00156238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421016,0.00928539) , 
1, 270.995, 1, 0, 0.637773,0.179385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.24177) , 
8, 179.674, 1, 0, 0.605504,0.170242) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0969028,0.175974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0990633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.293457) , 
4, 0.403722, 1, 0, 0,-0.000817101) , 
1, 287.8, 1, 0, 0.0242336,0.0194207) , 
8, 216.72, 1, 0, 0.525025,0.149361)    );
  // itree = 376
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413102,0.000877928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669914,0.00169351) , 
9, 0.93474, 1, 0, 0.601074,0.146931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.309865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127689,0.0229462) , 
2, 14.9765, 1, 0, 0.0283887,0.0252409) , 
7, 352.991, 1, 0, 0.506707,0.126879) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.879198,0.00167266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637406,0.0313848) , 
7, 239.366, 1, 0, 0.782878,0.380272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.384641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0811812) , 
1, 295.204, 1, 0, 0,-0.00496884) , 
7, 350.474, 1, 0, 0.569139,0.275095) , 
2, 18.6581, 1, 0, 0.520964,0.160725)    );
  // itree = 377
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555304,0.00138773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701115,0.00321282) , 
2, 19.2755, 1, 0, 0.577496,0.154045) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579333,0.0159818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207174,0.000399453) , 
4, 0.241743, 1, 0, 0.471612,0.361424) , 
0, 381.825, 1, 0, 0.56462,0.179263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.296273) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.128508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0989823) , 
3, 0.121073, 1, 0, 0,-0.000174008) , 
9, 0.89172, 1, 0, 0,-0.0016899) , 
7, 403.992, 1, 0, 0.476993,0.15118)    );
  // itree = 378
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685348,0.00130866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.234939) , 
8, 150.098, 1, 0, 0.615191,0.128853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66041,0.00163339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63731,0.00554296) , 
8, 122.724, 1, 0, 0.652418,0.285893) , 
0, 350.807, 1, 0, 0.620434,0.150974) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.646638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.119795) , 
0, 294.809, 1, 0, 0,-0.00439384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209778,0.0106108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.481179) , 
9, 0.920267, 1, 0, 0.0913358,0.0757369) , 
2, 17.9658, 1, 0, 0.0321606,0.0238213) , 
7, 322.65, 1, 0, 0.47849,0.120294)    );
  // itree = 379
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.113348,-0.00711433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.488904,0.00308781) , 
2, 14.8806, 1, 0, 0.288115,-0.00594963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768774,0.00174689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46697,0.00148334) , 
6, 114.613, 1, 0, 0.672941,0.186975) , 
8, 59.2484, 1, 0, 0.644609,0.172771) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.184025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108461,4.30106) , 
4, 0.565211, 1, 0, 0.0150917,0.0122912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144435,17.5358) , 
2, 26.707, 1, 0, 0.0282164,0.0256525) , 
8, 151.933, 1, 0, 0.488936,0.135616)    );
  // itree = 380
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611584,0.000768705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615506,0.00168892) , 
4, 0.121117, 1, 0, 0.614681,0.145984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.75769) , 
6, 230.73, 1, 0, 0.590807,0.137562) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.25911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128028,0.121152) , 
2, 20.2869, 1, 0, 0.0260359,0.0206699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108014,-1.15556) , 
2, 26.8843, 1, 0, 0.0425484,-0.0283339) , 
5, 252.611, 1, 0, 0.497856,0.109437)    );
  // itree = 381
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726648,0.00114842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442112,0.00792884) , 
8, 125.043, 1, 0, 0.698473,0.164469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.17302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.398542) , 
4, 0.241626, 1, 0, 0,-0.035305) , 
8, 150.098, 1, 0, 0.63669,0.146798) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121126,1.43452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.359229) , 
5, 146.159, 1, 0, 0.0164109,0.00946404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0944432,-1.54788) , 
2, 26.3628, 1, 0, 0.0293361,-0.0306599) , 
7, 319.588, 1, 0, 0.492139,0.104563)    );
  // itree = 382
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690092,0.00128912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355088,0.0651489) , 
6, 183.432, 1, 0, 0.667177,0.159411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302525,0.950065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0348676,-0.686193) , 
9, 0.884508, 1, 0, 0.0947574,0.0280474) , 
8, 159.251, 1, 0, 0.581874,0.139835) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.344047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102488) , 
1, 244.645, 1, 0, 0,-0.00043952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.18309) , 
2, 26.3628, 1, 0, 0,-0.0357648) , 
7, 422.918, 1, 0, 0.500203,0.115188)    );
  // itree = 383
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739768,0.00112589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398924,0.00833535) , 
8, 134.112, 1, 0, 0.699799,0.159812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.849768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.50223) , 
1, 308.132, 1, 0, 0,-0.0246009) , 
8, 178.907, 1, 0, 0.635013,0.142739) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.187536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0854287,0.619545) , 
7, 464.822, 1, 0, 0.0324352,0.0253359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.779301) , 
2, 26.5966, 1, 0, 0.0278142,-0.000181474) , 
5, 181.22, 1, 0, 0.470965,0.104126)    );
  // itree = 384
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.26041,-0.00151456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.728179,0.00180489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.591786) , 
8, 159.361, 1, 0, 0.670364,0.187744) , 
8, 58.1712, 1, 0, 0.64824,0.172411) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.30463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13715,0.443446) , 
5, 149.152, 1, 0, 0.0899537,0.0630333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.398411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.05239) , 
2, 27.021, 1, 0, 0,-0.0284414) , 
5, 259.024, 1, 0, 0.0313641,0.00345309) , 
7, 319.588, 1, 0, 0.506911,0.133702)    );
  // itree = 385
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746099,0.000910044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0527525,-0.000207671) , 
7, 195.138, 1, 0, 0.508987,0.0779042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510514,0.0100092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627231,0.00150328) , 
9, 0.891683, 1, 0, 0.610962,0.167264) , 
2, 11.1695, 1, 0, 0.563146,0.125363) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.455884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.782482) , 
2, 19.6965, 1, 0, 0,-0.0183828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.12731,4.26834) , 
9, 0.992291, 1, 0, 0.0238522,0.00575851) , 
7, 422.918, 1, 0, 0.485697,0.108187)    );
  // itree = 386
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460377,0.000670341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785899,0.00136017) , 
0, 228.627, 1, 0, 0.652849,0.12343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482812,0.00244945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51335,0.00664421) , 
8, 106.543, 1, 0, 0.50009,0.319789) , 
6, 154.411, 1, 0, 0.636963,0.14385) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237794,0.277552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.111911,0.5679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.28077) , 
8, 148.955, 1, 0, 0.0284484,0.00445904) , 
1, 118.564, 1, 0, 0.0522398,0.0273627) , 
7, 291.925, 1, 0, 0.466115,0.109814)    );
  // itree = 387
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406257,-0.000327898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71293,0.00165564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.162682) , 
5, 190.744, 1, 0, 0.679527,0.180383) , 
8, 54.8418, 1, 0, 0.663495,0.168094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245472,0.078571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0218153,0.877778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.687357) , 
2, 25.6686, 1, 0, 0.0187008,-0.000641048) , 
1, 118.564, 1, 0, 0.0461378,0.022699) , 
7, 299.699, 1, 0, 0.500675,0.129748)    );
  // itree = 388
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465528,-8.01844e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.771722,0.00159166) , 
8, 64.1203, 1, 0, 0.745614,0.183321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.06636) , 
8, 177.369, 1, 0, 0.688209,0.168288) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.080093,-0.00756135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.478799) , 
5, 206.196, 1, 0, 0.0311184,-0.0464133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345419,0.778873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.280838,0.00204949) , 
4, 0.0807444, 1, 0, 0.28576,0.0950424) , 
3, 0.121119, 1, 0, 0.230757,0.0644877) , 
5, 139.747, 1, 0, 0.492311,0.123837)    );
  // itree = 389
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231736,-0.00270099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654587,0.0017755) , 
6, 49.3668, 1, 0, 0.640103,0.171743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.233779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137635,-0.585939) , 
8, 133.623, 1, 0, 0.0642541,-0.0228956) , 
5, 298.109, 1, 0, 0.601702,0.158763) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.862267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.845091) , 
4, 0.403722, 1, 0, 0,-0.0205676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13071,0.0363605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.351008) , 
6, 165.862, 1, 0, 0.065809,0.0594511) , 
8, 368.378, 1, 0, 0.0209497,0.00490559) , 
8, 202.273, 1, 0, 0.510235,0.134531)    );
  // itree = 390
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782301,0.00113826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110368,7.06846e-06) , 
7, 200.226, 1, 0, 0.634206,0.11665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.800578,0.00126339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471767,0.0331113) , 
7, 240.046, 1, 0, 0.729314,0.228896) , 
2, 14.8151, 1, 0, 0.66008,0.147187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0847967,1.46804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.378138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.835679) , 
2, 26.3628, 1, 0, 0,-0.0176122) , 
5, 156.617, 1, 0, 0.0128888,-0.00495013) , 
7, 289.65, 1, 0, 0.481622,0.105236)    );
  // itree = 391
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622093,0.00125849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605325,0.00304377) , 
0, 310.088, 1, 0, 0.617714,0.157049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.451618) , 
7, 410.221, 1, 0, 0.585182,0.147896) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.258398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.593783) , 
2, 18.2126, 1, 0, 0,-0.00531319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.00747) , 
4, 0.524838, 1, 0, 0,-0.010204) , 
8, 202.273, 1, 0, 0.48974,0.122111)    );
  // itree = 392
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627931,0.000995594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818479,0.00228655) , 
2, 19.9107, 1, 0, 0.656516,0.124285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68932,0.00426684) , 
0, 358.621, 1, 0, 0.659571,0.145327) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.899588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106983,0.430611) , 
3, 0.484474, 1, 0, 0.0225898,0.011132) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.294683,0.304342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0633519,0.00257423) , 
2, 10.978, 1, 0, 0.156903,0.131034) , 
9, 0.985165, 1, 0, 0.0637904,0.047912) , 
7, 291.925, 1, 0, 0.489923,0.117588)    );
  // itree = 393
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621998,0.00317474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666251,0.0013601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.415546,-0.000250778) , 
4, 0.60546, 1, 0, 0.650236,0.135297) , 
5, 56.0288, 1, 0, 0.648781,0.144038) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.101238,1.26361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.352757) , 
7, 327.187, 1, 0, 0.0313586,0.0253578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.807537) , 
2, 26.3628, 1, 0, 0.0268121,0.0125687) , 
5, 185.059, 1, 0, 0.487496,0.109946)    );
  // itree = 394
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762862,0.00110527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466746,0.0149484) , 
7, 214.807, 1, 0, 0.743608,0.15917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13393,-0.00388296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382103,0.0011547) , 
0, 289.907, 1, 0, 0.292698,0.0185799) , 
5, 136.859, 1, 0, 0.595038,0.112847) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.134001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.358136) , 
4, 0.565211, 1, 0, 0,-0.00587866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135936,-0.0406444) , 
2, 26.5574, 1, 0, 0.0155082,-0.0182392) , 
8, 151.933, 1, 0, 0.442216,0.0782798)    );
  // itree = 395
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240029,0.000303615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700567,0.00123602) , 
0, 180.86, 1, 0, 0.60729,0.11271) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.749309,0.00209531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.766725,0.00310782) , 
3, 0.242237, 1, 0, 0.756629,0.244947) , 
2, 19.9107, 1, 0, 0.631277,0.13395) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.395202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.699406) , 
2, 26.3628, 1, 0, 0,-0.00758916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108985,0.550012) , 
3, 0.484294, 1, 0, 0.0226267,0.0153794) , 
7, 357.74, 1, 0, 0.519206,0.112118)    );
  // itree = 396
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245541,-0.00531327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.677488,0.000661155) , 
9, 0.970702, 1, 0, 0.507886,-0.0331159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7842,0.00130939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821208,0.00183995) , 
4, 0.484466, 1, 0, 0.791403,0.186099) , 
8, 67.2626, 1, 0, 0.760215,0.161984) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135121,0.0112965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.26514) , 
3, 0.282505, 1, 0, 0.0921966,0.0522957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.260035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.330903) , 
4, 0.55933, 1, 0, 0,-0.0235763) , 
4, 0.242184, 1, 0, 0.0557114,0.0222707) , 
7, 234.843, 1, 0, 0.508269,0.11202)    );
  // itree = 397
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482299,0.000587752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238582,-0.00223001) , 
0, 215.062, 1, 0, 0.375918,-0.0108691) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713399,0.0013157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231899,0.00034872) , 
0, 374.433, 1, 0, 0.66424,0.135784) , 
8, 59.3162, 1, 0, 0.640093,0.123502) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.113273,0.0762962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.34042) , 
7, 422.476, 1, 0, 0.072163,0.0503356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.830492) , 
2, 18.8634, 1, 0, 0.0582267,0.0303429) , 
8, 152.035, 1, 0, 0.491052,0.0996397)    );
  // itree = 398
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.353486,-0.000367748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613406,0.00123087) , 
2, 7.27778, 1, 0, 0.565305,0.100287) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582042,0.00078575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629586,0.00229964) , 
8, 75.266, 1, 0, 0.620615,0.184295) , 
2, 10.9533, 1, 0, 0.598227,0.150291) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.635716) , 
2, 17.6198, 1, 0, 0,-0.00177415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.495634) , 
4, 0.483957, 1, 0, 0,-0.00513603) , 
8, 207.723, 1, 0, 0.507813,0.1268)    );
  // itree = 399
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608784,0.00110744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669288,0.0023321) , 
0, 311.13, 1, 0, 0.623457,0.139078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.458887) , 
2, 20.1516, 1, 0, 0,-0.00745847) , 
7, 382.09, 1, 0, 0.57356,0.12735) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.122241,-0.00619588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.255856) , 
8, 179.099, 1, 0, 0.0592089,-0.012613) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0947779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.166447) , 
4, 0.403722, 1, 0, 0,-0.000548228) , 
8, 227.122, 1, 0, 0.0214096,-0.00491078) , 
1, 286.643, 1, 0, 0.480723,0.105112)    );
  // itree = 400
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79799,0.00128547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479339,0.00118425) , 
5, 138.422, 1, 0, 0.728534,0.155807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.276204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.436845) , 
5, 122.311, 1, 0, 0,-0.0238789) , 
8, 146.973, 1, 0, 0.675607,0.142753) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.31713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103756,-0.66544) , 
2, 26.5574, 1, 0, 0.017915,-0.00622308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.398343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.183859,0.0139763) , 
4, 0.242233, 1, 0, 0.0846308,0.0602307) , 
9, 0.985068, 1, 0, 0.03706,0.0128467) , 
7, 291.925, 1, 0, 0.501722,0.107377)    );
  // itree = 401
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625663,0.000313027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726589,0.0013051) , 
2, 10.6072, 1, 0, 0.692272,0.107879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.192987,0.0105264) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549035,0.0049495) , 
9, 0.985154, 1, 0, 0.342822,0.218041) , 
8, 110.585, 1, 0, 0.579619,0.143392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257537,0.919347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.588508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149646,0.00142364) , 
1, 544.487, 1, 0, 0.0523413,0.0109617) , 
9, 0.884532, 1, 0, 0.0921491,0.0585308) , 
1, 286.643, 1, 0, 0.494975,0.128657)    );
  // itree = 402
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.506425,0.00199346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.511622,0.0272295) , 
0, 492.082, 1, 0, 0.507119,0.197256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712032,0.00117571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0598579,0.00180228) , 
5, 163.812, 1, 0, 0.57469,0.109844) , 
9, 0.920412, 1, 0, 0.554841,0.135521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0986312,4.60741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.496911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.571215) , 
2, 18.1711, 1, 0, 0,-0.00304682) , 
0, 183.105, 1, 0, 0.0222138,0.0162971) , 
8, 202.273, 1, 0, 0.46293,0.114948)    );
  // itree = 403
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542487,0.000478016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537074,0.00150946) , 
5, 137.7, 1, 0, 0.539838,0.102366) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609427,0.00332721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589259,0.00183974) , 
9, 0.970779, 1, 0, 0.601695,0.287104) , 
8, 55.0203, 1, 0, 0.585743,0.239463) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.270006,-0.000536331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83354,0.00147072) , 
0, 186.327, 1, 0, 0.744433,0.150888) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.143355,0.0188195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0375063,-0.00050946) , 
1, 223.613, 1, 0, 0.0716786,0.0377615) , 
7, 270.117, 1, 0, 0.512926,0.111959) , 
1, 115.135, 1, 0, 0.529444,0.140882)    );
  // itree = 404
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71679,0.00123425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129336,0.0654492) , 
5, 172.301, 1, 0, 0.606964,0.13069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671766,0.00136763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755881,0.00333907) , 
3, 0.241255, 1, 0, 0.714317,0.260859) , 
2, 20.3461, 1, 0, 0.621051,0.147772) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.150383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.01562) , 
2, 26.3628, 1, 0, 0,-0.0159265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0915024,0.00430972) , 
9, 0.992351, 1, 0, 0.0180039,-0.0029287) , 
6, 157.783, 1, 0, 0.5169,0.121745)    );
  // itree = 405
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874596,0.0012957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545872,0.000410025) , 
7, 193.728, 1, 0, 0.840618,0.181984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222676,0.00029273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461029,0.00471817) , 
0, 264.774, 1, 0, 0.305438,0.096552) , 
8, 99.127, 1, 0, 0.682752,0.156783) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.200197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.461485) , 
7, 360.87, 1, 0, 0,-0.021216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.370549,0.0117488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0980808,0.00950428) , 
1, 117.03, 1, 0, 0.141311,0.104986) , 
0, 327.756, 1, 0, 0.0889615,0.058234) , 
5, 181.22, 1, 0, 0.52658,0.130864)    );
  // itree = 406
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782446,0.00124238) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352065,0.00617822) , 
8, 122.937, 1, 0, 0.715183,0.178206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546906,0.0610417) , 
6, 174.913, 1, 0, 0.708059,0.193123) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.200267,0.0124837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.798726) , 
6, 231.135, 1, 0, 0.147429,0.110348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.526296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.07568) , 
4, 0.559605, 1, 0, 0,-0.015289) , 
4, 0.242231, 1, 0, 0.0906459,0.0619581) , 
7, 291.925, 1, 0, 0.547567,0.159028)    );
  // itree = 407
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.563068,0.000781938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671701,0.0018723) , 
2, 8.88289, 1, 0, 0.638584,0.154244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.20187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193124,1.24015) , 
2, 19.0133, 1, 0, 0.0587267,0.0232799) , 
5, 188.685, 1, 0, 0.5252,0.128636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.306471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12054,0.000654432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.146761) , 
3, 0.202329, 1, 0, 0.0636543,-0.000308638) , 
1, 286.643, 1, 0, 0.0380384,-0.0121155) , 
0, 490.576, 1, 0, 0.479059,0.115305)    );
  // itree = 408
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683076,0.00653802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697902,0.00146317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126681,0.123096) , 
8, 148.167, 1, 0, 0.631359,0.155317) , 
4, 0.0807444, 1, 0, 0.63454,0.170177) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.662566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.719778) , 
0, 230.507, 1, 0, 0,-0.011893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0741052,12.1488) , 
8, 381.667, 1, 0, 0.0225246,0.0133948) , 
8, 211.026, 1, 0, 0.552505,0.149162)    );
  // itree = 409
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642464,0.00117651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527895,0.00379737) , 
1, 201.102, 1, 0, 0.617987,0.154715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.755652) , 
7, 313.534, 1, 0, 0,-0.00459559) , 
8, 176.471, 1, 0, 0.580684,0.145099) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.149934,-0.586611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.04849) , 
4, 0.362968, 1, 0, 0.11666,-0.0097331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.39611) , 
8, 389.782, 1, 0, 0.0851916,-0.0214199) , 
8, 213.571, 1, 0, 0.502672,0.118882)    );
  // itree = 410
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669715,0.00112396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501316,0.00464889) , 
1, 211.521, 1, 0, 0.650718,0.13723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.861629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0997681,2.13238) , 
9, 0.977969, 1, 0, 0.0352166,0.018745) , 
8, 153.726, 1, 0, 0.589394,0.125425) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.711262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.23141) , 
9, 0.949225, 1, 0, 0,-0.0366249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.157273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107326,-0.577007) , 
9, 0.985167, 1, 0, 0.0335599,-0.00507842) , 
0, 251.324, 1, 0, 0.0223061,-0.015657) , 
8, 207.723, 1, 0, 0.503858,0.104145)    );
  // itree = 411
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679655,0.00109045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359199,-0.000463173) , 
4, 0.161084, 1, 0, 0.530969,0.0538124) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658597,0.00192668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.48028) , 
7, 413.367, 1, 0, 0.615785,0.182991) , 
2, 8.88289, 1, 0, 0.595638,0.152307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.112951,2.68296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.384281) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.611524) , 
8, 371.025, 1, 0, 0,-0.0080028) , 
1, 234.069, 1, 0, 0.0228311,0.00941386) , 
8, 205.325, 1, 0, 0.508692,0.130617)    );
  // itree = 412
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662901,0.00139606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.715025) , 
8, 157.822, 1, 0, 0.603251,0.133074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57592,0.0123704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180317,0.00177452) , 
4, 0.161456, 1, 0, 0.398917,0.285775) , 
0, 490.328, 1, 0, 0.585204,0.146561) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.396148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136144,0.242269) , 
9, 0.910729, 1, 0, 0.0526411,0.0434518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.902042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.852077) , 
9, 0.991326, 1, 0, 0,-0.0200797) , 
9, 0.942017, 1, 0, 0.024107,0.00901457) , 
8, 213.571, 1, 0, 0.501216,0.125972)    );
  // itree = 413
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626324,0.000573978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.748749,0.00150399) , 
8, 72.0471, 1, 0, 0.725479,0.15513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276319,0.000753842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.436713) , 
9, 0.934787, 1, 0, 0.135353,-0.00637416) , 
8, 158.622, 1, 0, 0.686836,0.144555) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144101,0.242609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.37734) , 
1, 231.804, 1, 0, 0.0580229,0.0459396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.09389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117161,-0.823742) , 
9, 0.991326, 1, 0, 0.0456447,-0.0183857) , 
9, 0.942017, 1, 0, 0.0512493,0.0107394) , 
7, 296.099, 1, 0, 0.523783,0.110226)    );
  // itree = 414
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692777,0.00119157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445745,0.00741376) , 
6, 153.45, 1, 0, 0.676143,0.145811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0705839,-0.341153) , 
7, 279.505, 1, 0, 0.635187,0.134164) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593766,-0.548341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.23898,0.0371676) , 
2, 15.9516, 1, 0, 0.118591,0.0612929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.903739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.535555) , 
2, 26.3628, 1, 0, 0,-0.0109288) , 
6, 135.409, 1, 0, 0.0420469,0.0146777) , 
7, 317.074, 1, 0, 0.489199,0.104755)    );
  // itree = 415
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664166,0.00149416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0469059,0.0157074) , 
8, 157.924, 1, 0, 0.606339,0.145244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279653,-0.00206727) , 
4, 0.686327, 1, 0, 0.593478,0.13657) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125517,0.548127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0989918,-0.757804) , 
9, 0.941982, 1, 0, 0.111058,0.0460403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.605602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.634019) , 
4, 0.36335, 1, 0, 0,-0.010846) , 
3, 0.161456, 1, 0, 0.0455145,0.0124676) , 
8, 213.571, 1, 0, 0.512082,0.118135)    );
  // itree = 416
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389852,0.00173891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607543,0.00660697) , 
5, 115.945, 1, 0, 0.49049,0.260029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464157,-0.000224974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735143,0.00140883) , 
0, 213.445, 1, 0, 0.673879,0.119612) , 
0, 149.346, 1, 0, 0.638152,0.146967) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0177647,-0.000147109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179584,-0.00560299) , 
2, 20.1516, 1, 0, 0.0593171,-0.00880848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0959162,6.99194) , 
6, 292.739, 1, 0, 0.0647874,0.00615281) , 
5, 184.297, 1, 0, 0.481405,0.108471)    );
  // itree = 417
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614769,0.00138061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427123,0.0201866) , 
5, 277.298, 1, 0, 0.606733,0.145285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.551026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.662492) , 
7, 604.621, 1, 0, 0,-0.012984) , 
7, 403.159, 1, 0, 0.525505,0.124097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.190844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.623406,0.00091996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0395699,-0.508072) , 
8, 139.57, 1, 0, 0.410869,0.0477997) , 
1, 100.595, 1, 0, 0.37049,0.0223631) , 
3, 0.28261, 1, 0, 0.482409,0.0958131)    );
  // itree = 418
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663049,0.0032114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.476784,0.001341) , 
4, 0.242233, 1, 0, 0.595794,0.307496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543957,-0.000158115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862034,0.0010578) , 
8, 54.4688, 1, 0, 0.841223,0.133005) , 
0, 136.327, 1, 0, 0.804781,0.158914) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.057101,-0.00704532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0800525,0.00694088) , 
6, 161.54, 1, 0, 0.0671001,0.0065937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257101,0.00447069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0332952,0.010798) , 
7, 338.835, 1, 0, 0.155983,0.0902272) , 
9, 0.949144, 1, 0, 0.116025,0.0526293) , 
7, 202.98, 1, 0, 0.493928,0.110945)    );
  // itree = 419
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.394463,0.00135659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530103,0.00937958) , 
6, 100.793, 1, 0, 0.455967,0.250064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265769,-0.001975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712529,0.00126275) , 
0, 191.183, 1, 0, 0.668245,0.107157) , 
0, 149.274, 1, 0, 0.630544,0.132538) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.177335,-0.395625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.287398) , 
1, 228.821, 1, 0, 0.0556221,-0.00699702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.856142) , 
2, 26.5966, 1, 0, 0.0467036,-0.0121173) , 
7, 336.881, 1, 0, 0.50531,0.101509)    );
  // itree = 420
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710024,0.00168571) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100435,0.0144379) , 
5, 172.56, 1, 0, 0.617248,0.165522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.150003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.705693) , 
6, 247.962, 1, 0, 0,-0.00634511) , 
7, 401.455, 1, 0, 0.570324,0.152457) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.200459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258524,-0.140578) , 
8, 337.33, 1, 0, 0.119212,-0.00468743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.97791) , 
8, 399.143, 1, 0, 0.0693937,-0.0143722) , 
8, 281.669, 1, 0, 0.524191,0.137093)    );
  // itree = 421
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.302208,-0.00147047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739734,0.00163681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.234334,0.000764472) , 
5, 163.756, 1, 0, 0.673579,0.159831) , 
8, 57.6942, 1, 0, 0.653283,0.146035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185363,0.0672038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0731108,8.62853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0209703,-0.47665) , 
6, 99.8003, 1, 0, 0.0315315,0.00636506) , 
1, 148.567, 1, 0, 0.057892,0.0336535) , 
7, 320.987, 1, 0, 0.514682,0.119874)    );
  // itree = 422
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61023,0.0010888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248834,-0.00180317) , 
3, 0.121119, 1, 0, 0.402258,0.0042323) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.775232,0.00168648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.697865) , 
8, 168.385, 1, 0, 0.71154,0.174544) , 
9, 0.905985, 1, 0, 0.666759,0.149885) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0469223,0.000123739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0280555,-0.344252) , 
3, 0.115234, 1, 0, 0.034176,-0.0186845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0745085,-0.31584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409714,0.0160952) , 
4, 0.36335, 1, 0, 0.192317,0.0798824) , 
3, 0.403729, 1, 0, 0.0770097,0.00801322) , 
5, 184.297, 1, 0, 0.512963,0.112887)    );
  // itree = 423
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627412,0.00116868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395032,0.931528) , 
6, 162.588, 1, 0, 0.618877,0.12858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62052,0.0813259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0667178,0.104411) , 
5, 110.075, 1, 0, 0.325697,0.314247) , 
6, 177.529, 1, 0, 0.583589,0.150928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.143368,5.74008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191879,-0.0826445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.79491) , 
6, 98.9281, 1, 0, 0.0477248,-0.0185418) , 
9, 0.884493, 1, 0, 0.0648355,0.00547111) , 
5, 255.688, 1, 0, 0.493927,0.125787)    );
  // itree = 424
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605023,0.000507902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383378,-0.00237315) , 
6, 85.9375, 1, 0, 0.516448,-0.0295641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826946,0.00112479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860974,0.00161393) , 
4, 0.484182, 1, 0, 0.833513,0.172379) , 
8, 66.7212, 1, 0, 0.79503,0.147869) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0480404,-0.0841304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.339441) , 
1, 236.083, 1, 0, 0.0216769,-0.0270706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0710317,-0.0977579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227608,0.00419863) , 
6, 97.9709, 1, 0, 0.205908,0.0747573) , 
2, 10.9533, 1, 0, 0.143456,0.0402386) , 
7, 204.054, 1, 0, 0.49719,0.09867)    );
  // itree = 425
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698413,0.0016269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142778,-0.193299) , 
7, 282.336, 1, 0, 0.658399,0.160205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283505,-0.00305525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607835,0.0011523) , 
1, 152.059, 1, 0, 0.474747,0.00425915) , 
4, 0.524838, 1, 0, 0.637665,0.142599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.961998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.902026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119528,3.10143) , 
4, 0.565206, 1, 0, 0.0180183,0.00228879) , 
9, 0.884493, 1, 0, 0.0150064,-0.0119131) , 
7, 319.588, 1, 0, 0.495115,0.107225)    );
  // itree = 426
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.337897,0.000643575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684511,0.0033917) , 
4, 0.126594, 1, 0, 0.613059,0.304534) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.204127,-0.00170259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60234,0.00128936) , 
9, 0.963607, 1, 0, 0.446481,0.0814022) , 
4, 0.242233, 1, 0, 0.552023,0.222777) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75676,0.00132872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328945,0.000351801) , 
5, 137.105, 1, 0, 0.637538,0.114144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.72305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.755259) , 
9, 0.884458, 1, 0, 0,-0.0318305) , 
5, 236.041, 1, 0, 0.512856,0.0855959) , 
1, 117.03, 1, 0, 0.521617,0.116279)    );
  // itree = 427
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.826631,0.00120126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605783,0.000792577) , 
7, 174.991, 1, 0, 0.733835,0.122927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.44082,0.0195687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.203903) , 
4, 0.322975, 1, 0, 0.35284,0.289125) , 
8, 121.829, 1, 0, 0.653802,0.157839) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.596724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258607,4.97815) , 
6, 269.833, 1, 0, 0.0975381,0.0819831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.024065,-0.480531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.2843) , 
4, 0.524286, 1, 0, 0.0203968,-0.0244536) , 
8, 156.221, 1, 0, 0.0423359,0.0058172) , 
7, 311.813, 1, 0, 0.50574,0.121028)    );
  // itree = 428
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705933,0.00125978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682203,0.00532924) , 
0, 372.768, 1, 0, 0.703662,0.163781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480514,0.00144787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.229718) , 
6, 119.646, 1, 0, 0.285549,0.052526) , 
1, 195.576, 1, 0, 0.611661,0.139301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.00703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125283,6.25505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.03197,-7.26134e-05) , 
9, 0.917421, 1, 0, 0.0516231,0.0245216) , 
9, 0.884493, 1, 0, 0.0431308,0.00268513) , 
5, 257.28, 1, 0, 0.525349,0.11856)    );
  // itree = 429
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74117,0.00130626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663395,0.00248469) , 
5, 148.752, 1, 0, 0.729418,0.17392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.230966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.335084,0.00213541) , 
4, 0.201453, 1, 0, 0.197334,0.0395749) , 
5, 177.876, 1, 0, 0.680496,0.161568) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.970352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.832113) , 
1, 231.36, 1, 0, 0,-0.0589198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.741872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.025936,-0.000119939) , 
6, 101.848, 1, 0, 0.0214847,-0.007319) , 
9, 0.920472, 1, 0, 0.0140527,-0.0251688) , 
7, 319.588, 1, 0, 0.539983,0.122196)    );
  // itree = 430
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601075,0.00106089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71582,0.001663) , 
9, 0.970684, 1, 0, 0.658998,0.144523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752331,0.00350234) , 
2, 20.3461, 1, 0, 0.670808,0.167204) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.778939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0175956,-0.00536292) , 
9, 0.882778, 1, 0, 0.0142124,-0.0265919) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144573,0.0231628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.953351) , 
7, 387.554, 1, 0, 0.0714774,0.0383641) , 
9, 0.992351, 1, 0, 0.0256072,-0.0136667) , 
5, 181.22, 1, 0, 0.505921,0.120981)    );
  // itree = 431
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.294886,-0.00171975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71064,0.00120979) , 
8, 62.1124, 1, 0, 0.679832,0.117541) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650324,0.00485094) , 
2, 26.3628, 1, 0, 0.677471,0.133594) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0275227,-0.187702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.815688) , 
4, 0.484462, 1, 0, 0.0228946,-0.0184896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303548,0.00683263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.08105,0.00396746) , 
9, 0.89177, 1, 0, 0.131912,0.0651388) , 
0, 360.139, 1, 0, 0.0692601,0.0170779) , 
8, 148.72, 1, 0, 0.523916,0.104177)    );
  // itree = 432
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571284,0.000723476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256912,-0.00438309) , 
7, 142.132, 1, 0, 0.403797,-0.0558642) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76379,0.00139685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.052352,0.00056278) , 
8, 140.882, 1, 0, 0.693095,0.148401) , 
8, 65.4226, 1, 0, 0.666189,0.129403) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.094074,0.00231497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196605,0.166661) , 
4, 0.403722, 1, 0, 0.119682,0.0439918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.461053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.748119) , 
6, 288.206, 1, 0, 0,-0.0236462) , 
6, 164.828, 1, 0, 0.0600763,0.0103059) , 
7, 291.925, 1, 0, 0.498314,0.0964164)    );
  // itree = 433
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621772,0.000678527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.639665,0.00201785) , 
6, 87.7449, 1, 0, 0.632757,0.144622) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283733,0.0662684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.297189) , 
8, 77.3312, 1, 0, 0.0674611,-0.00822373) , 
6, 161.54, 1, 0, 0.557011,0.124142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.24009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.966751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.898247) , 
2, 18.2126, 1, 0, 0,-0.00680712) , 
0, 184.324, 1, 0, 0,-0.0134182) , 
8, 213.571, 1, 0, 0.471469,0.103016)    );
  // itree = 434
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520718,0.000964759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728772,0.00182056) , 
9, 0.985154, 1, 0, 0.608049,0.130184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689041,0.00251091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595828,0.00129493) , 
3, 0.54791, 1, 0, 0.651677,0.205223) , 
3, 0.322977, 1, 0, 0.622061,0.154284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133538,0.00654835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.259787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0350533,0.00129121) , 
8, 119.673, 1, 0, 0.024048,-0.0111406) , 
2, 10.9533, 1, 0, 0.0533967,0.0187003) , 
6, 157.783, 1, 0, 0.522999,0.130665)    );
  // itree = 435
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344603,-0.00239815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.318247,0.000231577) , 
7, 160.845, 1, 0, 0.33077,-0.0572361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718357,0.00140251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346196,0.000986229) , 
6, 114.787, 1, 0, 0.608585,0.129321) , 
5, 77.2851, 1, 0, 0.589378,0.116423) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0844686,-0.554619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.340543) , 
1, 295.204, 1, 0, 0.0310051,-0.00908252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.924912) , 
4, 0.484368, 1, 0, 0.0256548,-0.0146383) , 
7, 412.248, 1, 0, 0.507271,0.0973336)    );
  // itree = 436
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798607,0.00108235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0974113,0.000518488) , 
7, 204.084, 1, 0, 0.631546,0.113502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759394,0.003436) , 
2, 23.1779, 1, 0, 0.64232,0.129726) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0227424,-0.130946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.665603) , 
4, 0.524838, 1, 0, 0.0193752,-0.0174818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0896689,4.04262) , 
0, 653.517, 1, 0, 0.0336979,0.00259991) , 
7, 315.988, 1, 0, 0.494505,0.0988511)    );
  // itree = 437
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668309,0.000422399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72118,0.0016923) , 
8, 69.7171, 1, 0, 0.713702,0.165879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.301383,0.00134137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0909559,-0.0021217) , 
3, 0.161489, 1, 0, 0.19555,0.0149694) , 
5, 142.607, 1, 0, 0.591446,0.130272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.156055,0.0147505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.730259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.476898) , 
9, 0.920472, 1, 0, 0,-0.0241714) , 
4, 0.121117, 1, 0, 0.0419813,0.0180295) , 
5, 252.611, 1, 0, 0.497268,0.111034)    );
  // itree = 438
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798446,0.00117643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.522671,0.00982288) , 
7, 214.26, 1, 0, 0.76854,0.189133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.03527) , 
8, 179.431, 1, 0, 0.713983,0.175378) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481572,0.00205058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.18663) , 
6, 110.694, 1, 0, 0.389967,0.102162) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0290974,-0.00115552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0940402,-0.657249) , 
6, 299.024, 1, 0, 0.0442373,-0.0158182) , 
6, 138.81, 1, 0, 0.254568,0.0559572) , 
5, 138.206, 1, 0, 0.518675,0.124609)    );
  // itree = 439
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701712,0.00146014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.536545) , 
7, 291.81, 1, 0, 0.661809,0.155905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.430916,44.7453) , 
8, 230.334, 1, 0, 0.655084,0.163806) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.606601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0364453,-0.00540693) , 
9, 0.917021, 1, 0, 0.0221669,-0.0102415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156376,0.402084) , 
9, 0.992351, 1, 0, 0.0497867,0.0197076) , 
7, 346.134, 1, 0, 0.535685,0.135381)    );
  // itree = 440
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688598,0.00104224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391183,0.0172955) , 
8, 133.326, 1, 0, 0.663656,0.134172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713593,0.00289097) , 
2, 26.3628, 1, 0, 0.6687,0.151655) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-11.7242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0723182,-0.000589486) , 
0, 293.166, 1, 0, 0.0317652,-0.0853229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.150037,0.0117535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0838876,-0.0469585) , 
4, 0.161487, 1, 0, 0.111512,0.0199249) , 
2, 10.8233, 1, 0, 0.0780542,-0.0242319) , 
8, 151.933, 1, 0, 0.524252,0.10864)    );
  // itree = 441
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596202,0.00347379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623035,0.0017359) , 
1, 85.2302, 1, 0, 0.620101,0.181937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383857,-0.000621266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58387,0.00136367) , 
1, 137.428, 1, 0, 0.523548,0.0743035) , 
4, 0.322977, 1, 0, 0.594801,0.153733) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093171,-15.8677) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.53166) , 
7, 387.158, 1, 0, 0.0507183,-0.20388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128129,0.205775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.00656) , 
2, 11.3385, 1, 0, 0.0443092,0.0319324) , 
5, 259.024, 1, 0, 0.0473877,-0.081337) , 
8, 216.623, 1, 0, 0.516567,0.120138)    );
  // itree = 442
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.353144,-0.000165603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692842,0.00120664) , 
5, 80.1414, 1, 0, 0.664563,0.121783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516888,0.0408233) , 
6, 175.893, 1, 0, 0.658115,0.1382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.67967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.832845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0198224,-0.0892456) , 
9, 0.898874, 1, 0, 0.0154976,-0.0243776) , 
0, 181.376, 1, 0, 0.0132227,-0.0353747) , 
7, 291.925, 1, 0, 0.483773,0.0912756)    );
  // itree = 443
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.324626,-4.01355e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71881,0.00124917) , 
0, 191.621, 1, 0, 0.445851,0.0499203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.6885,0.000739355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768229,0.00171536) , 
2, 9.09905, 1, 0, 0.748576,0.16265) , 
0, 211.582, 1, 0, 0.647882,0.125153) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.117885,0.00938308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0920055,-0.0147575) , 
0, 389.675, 1, 0, 0.102354,0.0253502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0236804,-1.82135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.93891) , 
4, 0.524838, 1, 0, 0.019988,-0.0279687) , 
8, 152.035, 1, 0, 0.0428323,-0.0131807) , 
7, 311.813, 1, 0, 0.498692,0.0910436)    );
  // itree = 444
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.175376,-0.00321218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696872,0.00125906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.518995) , 
5, 275.115, 1, 0, 0.656529,0.129488) , 
8, 55.9163, 1, 0, 0.629838,0.11541) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0410647,0.000795665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211731,5.31492) , 
4, 0.1307, 1, 0, 0.0924347,0.0584922) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0731717,-1.46745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.55765) , 
7, 458.393, 1, 0, 0.0462751,-0.0264274) , 
4, 0.161489, 1, 0, 0.0651376,0.00827398) , 
8, 148.72, 1, 0, 0.47451,0.0859407)    );
  // itree = 445
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222987,-0.00241208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8496,0.00119763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1458,0.00399771) , 
7, 197.355, 1, 0, 0.593574,0.115564) , 
8, 59.3319, 1, 0, 0.57252,0.105037) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.55842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.109094) , 
7, 388.883, 1, 0, 0,-0.075528) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.106289,0.00125328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.78815) , 
0, 402.416, 1, 0, 0.043704,0.00345072) , 
5, 259.024, 1, 0, 0.0233302,-0.0333673) , 
8, 216.72, 1, 0, 0.491679,0.0846639)    );
  // itree = 446
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.441069,0.000378907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835336,0.00106549) , 
0, 215.803, 1, 0, 0.694526,0.0899127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542992,0.00342466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116477,-0.00038128) , 
7, 286.56, 1, 0, 0.474151,0.215985) , 
5, 149.768, 1, 0, 0.640148,0.121021) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0756846,-1.28254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.56058) , 
7, 385.236, 1, 0, 0.0406481,-0.0302689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0949734,3.05993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0290948,-0.00213926) , 
0, 293.856, 1, 0, 0.0450769,0.0171312) , 
5, 265.99, 1, 0, 0.0434626,-0.000146562) , 
7, 315.988, 1, 0, 0.495603,0.0916689)    );
  // itree = 447
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.806267,0.00119653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528635,0.0123945) , 
7, 205.411, 1, 0, 0.787188,0.174087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.38075,0.000367537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545428,0.00328626) , 
2, 26.3628, 1, 0, 0.407058,0.0637819) , 
5, 129.633, 1, 0, 0.650126,0.134315) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0820937,3.93106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473047,0.0264213) , 
2, 18.3408, 1, 0, 0.208406,0.183023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.26589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.463195) , 
7, 356.726, 1, 0, 0,-0.0231316) , 
4, 0.121115, 1, 0, 0.0628316,0.0390215) , 
8, 148.72, 1, 0, 0.497615,0.109569)    );
  // itree = 448
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.194522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721054,0.00116342) , 
5, 66.6165, 1, 0, 0.68725,0.113072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191276,0.00407545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134516,-0.00053521) , 
9, 0.949144, 1, 0, 0.162231,0.0352034) , 
5, 139.747, 1, 0, 0.47376,0.0814083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627546,0.00576818) , 
2, 41.7723, 1, 0, 0.480014,0.0947202)    );
  // itree = 449
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471637,0.000591929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585738,0.00299347) , 
8, 76.8596, 1, 0, 0.564453,0.221767) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71406,0.00137361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.511097) , 
7, 276.273, 1, 0, 0.600803,0.116166) , 
9, 0.905986, 1, 0, 0.591816,0.142273) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.56377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-108.31) , 
7, 379.507, 1, 0, 0,-0.0569581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.108037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.191339) , 
9, 0.97798, 1, 0, 0,-0.000832571) , 
5, 265.99, 1, 0, 0,-0.0287524) , 
8, 213.571, 1, 0, 0.508177,0.118103)    );
  // itree = 450
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696532,0.00124097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148833,-3.05909e-05) , 
5, 141.327, 1, 0, 0.547388,0.101753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729328,0.00245429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.535614) , 
6, 198.566, 1, 0, 0.613211,0.191147) , 
2, 18.6581, 1, 0, 0.562502,0.122279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.98799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.77639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.179453) , 
7, 439.452, 1, 0, 0,-0.00659019) , 
7, 335.509, 1, 0, 0,-0.0231964) , 
8, 202.273, 1, 0, 0.4698,0.0983041)    );
  // itree = 451
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514491,0.00118334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.271287,-0.0012356) , 
9, 0.891608, 1, 0, 0.339512,-0.00273678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.854811,0.00120713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0385806,-0.00265024) , 
5, 158.724, 1, 0, 0.626783,0.0884493) , 
0, 260.84, 1, 0, 0.497702,0.0474763) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.617378,0.00286789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61255,0.00148293) , 
1, 126.469, 1, 0, 0.614148,0.168354) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221343,-1.59715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.357601) , 
0, 268.088, 1, 0, 0.0820039,-0.0105127) , 
8, 217.173, 1, 0, 0.537971,0.142749) , 
2, 10.9533, 1, 0, 0.52109,0.10281)    );
  // itree = 452
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666533,0.0015643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0855266,0.00785065) , 
8, 148.627, 1, 0, 0.606056,0.139776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510669,0.0235675) , 
1, 364.06, 1, 0, 0.602733,0.151948) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.953135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0) , 
7, 383.068, 1, 0, 0,-0.0414131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.11572,0.00196389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.58333) , 
3, 0.161401, 1, 0, 0.0437268,0.0185449) , 
5, 259.024, 1, 0, 0.0228849,-0.0100335) , 
8, 213.571, 1, 0, 0.521614,0.129287)    );
  // itree = 453
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635079,0.00352021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690662,0.00115158) , 
5, 56.7316, 1, 0, 0.687558,0.139821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449236,0.0125369) , 
6, 164.812, 1, 0, 0.675543,0.151226) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0209405,-0.0114375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0839338,0.00423688) , 
9, 0.98516, 1, 0, 0.0404174,0.00601227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154682,6.33422) , 
2, 34.0676, 1, 0, 0.050577,0.0176684) , 
7, 286.239, 1, 0, 0.497756,0.113232)    );
  // itree = 454
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751574,0.00116966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0912884,-0.00141716) , 
5, 161.521, 1, 0, 0.683591,0.120091) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52692,0.0197671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.363965,0.0166254) , 
1, 302.167, 1, 0, 0.449524,0.298858) , 
1, 254.052, 1, 0, 0.66281,0.135962) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115322,0.227513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119425,0.00913638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0208691,-0.0104217) , 
9, 0.884493, 1, 0, 0.037422,0.00492406) , 
5, 139.25, 1, 0, 0.0462953,0.0154669) , 
7, 313.108, 1, 0, 0.517173,0.107498)    );
  // itree = 455
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423582,-0.00049121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.69688,0.00137398) , 
6, 55.176, 1, 0, 0.677265,0.140558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574933,0.0133099) , 
6, 165.376, 1, 0, 0.670082,0.164814) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274731,0.0128322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.864451) , 
9, 0.920424, 1, 0, 0.110109,0.0513931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0266093,-0.303374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.730932) , 
4, 0.586356, 1, 0, 0.021791,-0.0132735) , 
4, 0.161487, 1, 0, 0.0572597,0.0126967) , 
7, 291.925, 1, 0, 0.503582,0.123484)    );
  // itree = 456
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620045,0.0013986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.891322) , 
7, 383.35, 1, 0, 0.582165,0.120698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514651,0.0164549) , 
1, 364.265, 1, 0, 0.579721,0.129767) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.07751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.912341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.110347) , 
5, 266.068, 1, 0, 0,-0.00619813) , 
1, 287.8, 1, 0, 0,-0.014541) , 
8, 213.571, 1, 0, 0.494977,0.108672)    );
  // itree = 457
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537604,0.00115996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.064638,0.00011933) , 
5, 216.156, 1, 0, 0.413618,0.0666586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514065,0.00463381) , 
3, 0.726712, 1, 0, 0.420654,0.080549) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630494,0.00274958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448632,0.000561762) , 
2, 8.38874, 1, 0, 0.518111,0.110279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560422,0.00217731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728606,0.00523673) , 
4, 0.201046, 1, 0, 0.668545,0.352987) , 
2, 14.2371, 1, 0, 0.570881,0.195417) , 
9, 0.992347, 1, 0, 0.457521,0.108738)    );
  // itree = 458
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737139,0.000785964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19773,-0.00185687) , 
7, 178.68, 1, 0, 0.577163,0.048536) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.614224,0.00195009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.379436) , 
6, 197.836, 1, 0, 0.563319,0.153145) , 
8, 76.1328, 1, 0, 0.566359,0.130176) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.841345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.8653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.095273) , 
3, 0.161401, 1, 0, 0,-0.0015726) , 
7, 368.431, 1, 0, 0,-0.0100923) , 
8, 210.872, 1, 0, 0.479013,0.108543)    );
  // itree = 459
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508954,0.000282074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709147,0.0015741) , 
9, 0.992251, 1, 0, 0.576285,0.0690538) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667277,0.00136273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.436366,2.42915) , 
0, 374.054, 1, 0, 0.645172,0.156979) , 
2, 11.9368, 1, 0, 0.606649,0.10781) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.473559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.55775) , 
8, 156.411, 1, 0, 0,-0.00309269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0983305,-0.109994) , 
2, 26.3628, 1, 0, 0.0180089,-0.00643292) , 
7, 349.025, 1, 0, 0.483709,0.0839496)    );
  // itree = 460
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.76904,0.00151983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751444,0.000570475) , 
9, 0.913305, 1, 0, 0.756512,0.106549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767151,0.00208615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.846526,0.00107329) , 
1, 128.741, 1, 0, 0.821166,0.188133) , 
7, 176.378, 1, 0, 0.786061,0.143837) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.369855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313979,0.00707636) , 
6, 138.81, 1, 0, 0.193336,0.123523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134716,0.00954774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123775,-0.00126314) , 
2, 10.9896, 1, 0, 0.127971,0.0171819) , 
9, 0.891683, 1, 0, 0.141434,0.0390845) , 
7, 203.547, 1, 0, 0.479391,0.0940027)    );
  // itree = 461
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417455,0.000930649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61966,0.00174665) , 
9, 0.970684, 1, 0, 0.523832,0.113265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671325,0.00356105) , 
2, 27.5256, 1, 0, 0.534242,0.127735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.171598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.0461) , 
2, 18.6581, 1, 0, 0,-0.0116555) , 
6, 226.294, 1, 0, 0.488677,0.115846)    );
  // itree = 462
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697434,0.00451317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419095,0.00166757) , 
4, 0.199271, 1, 0, 0.598392,0.355461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64883,0.000777252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746111,0.00155328) , 
2, 9.09905, 1, 0, 0.718109,0.14501) , 
5, 72.2474, 1, 0, 0.707588,0.163506) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249697,0.0138892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0673316,0.0212636) , 
3, 0.161401, 1, 0, 0.152146,0.121644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0507725,-0.36971) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.16519) , 
4, 0.58625, 1, 0, 0.0415203,-0.0106939) , 
4, 0.161456, 1, 0, 0.0875758,0.0444008) , 
7, 291.925, 1, 0, 0.547294,0.132713)    );
  // itree = 463
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69793,0.0018819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695972,0.0015956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.722725,0.000782066) , 
9, 0.920424, 1, 0, 0.714284,0.109602) , 
5, 79.2612, 1, 0, 0.712427,0.125322) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.282261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0367675,0.649553) , 
6, 173.918, 1, 0, 0.0134118,-0.00642031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0439461,0.125628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372193,0.0178902) , 
2, 17.7288, 1, 0, 0.127612,0.095012) , 
9, 0.985097, 1, 0, 0.05057,0.0265835) , 
8, 119.41, 1, 0, 0.493086,0.0925998)    );
  // itree = 464
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531619,0.00138444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516536,4.46319e-05) , 
9, 0.920363, 1, 0, 0.52164,0.0447988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.557656,0.00129952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661469,0.0033465) , 
3, 0.403729, 1, 0, 0.586066,0.147587) , 
1, 145.105, 1, 0, 0.560856,0.107365) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.85897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.61012) , 
0, 184.293, 1, 0, 0,-0.00715845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124523,3.21912) , 
4, 0.524732, 1, 0, 0.0218765,0.0147935) , 
8, 207.723, 1, 0, 0.471589,0.0920332)    );
  // itree = 465
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.804525,0.000777945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0902044,-0.006641) , 
7, 195.075, 1, 0, 0.548045,0.0493836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538562,0.000618451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680915,0.0019415) , 
2, 9.09905, 1, 0, 0.642787,0.149192) , 
3, 0.121119, 1, 0, 0.619292,0.124441) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.466839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0950472) , 
1, 346.979, 1, 0, 0,-0.00104552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.756899) , 
0, 653.246, 1, 0, 0,-0.00727205) , 
7, 401.455, 1, 0, 0.53408,0.106318)    );
  // itree = 466
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639898,0.00325574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647409,0.00164692) , 
1, 96.6194, 1, 0, 0.646097,0.176311) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713952,0.000969476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0873426,0.00130977) , 
7, 231.097, 1, 0, 0.536896,0.0787912) , 
4, 0.201861, 1, 0, 0.598015,0.133372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.374114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0977237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.36143) , 
2, 19.3528, 1, 0, 0,-0.00139691) , 
7, 365.491, 1, 0, 0,-0.00543447) , 
1, 286.343, 1, 0, 0.50637,0.1121)    );
  // itree = 467
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636284,0.0043735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470987,0.00157896) , 
4, 0.161456, 1, 0, 0.546821,0.203409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82782,0.00113298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174421,0.00188765) , 
7, 198.532, 1, 0, 0.604818,0.109656) , 
9, 0.927551, 1, 0, 0.585613,0.140701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.775783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.703038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.72117) , 
4, 0.403297, 1, 0, 0,-0.00416418) , 
0, 183.105, 1, 0, 0,-0.00827324) , 
8, 213.571, 1, 0, 0.501239,0.119237)    );
  // itree = 468
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.561577,0.000581562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.712706,0.00163139) , 
2, 9.30733, 1, 0, 0.664008,0.13408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741546,0.00484698) , 
2, 24.4557, 1, 0, 0.668847,0.149716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130638,0.110977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0940949,5.60827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0430133,-0.0086784) , 
8, 120.021, 1, 0, 0.0533231,0.0147132) , 
6, 99.8003, 1, 0, 0.0680705,0.0319449) , 
7, 311.813, 1, 0, 0.521555,0.120842)    );
  // itree = 469
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702151,0.00178718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831627,0.000811598) , 
1, 103.282, 1, 0, 0.801349,0.135355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.174602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202663,0.00238799) , 
7, 215.921, 1, 0, 0.174401,0.0258774) , 
7, 199.91, 1, 0, 0.630657,0.105549) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.690142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0225301,-0.0297458) , 
8, 119.512, 1, 0, 0.0186594,-0.0169134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123846,0.111429) , 
9, 0.992351, 1, 0, 0.0399534,0.0079344) , 
7, 311.813, 1, 0, 0.479945,0.0806435)    );
  // itree = 470
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691416,0.0013684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547545,0.000564167) , 
4, 0.242233, 1, 0, 0.643461,0.108587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744442,0.00410991) , 
2, 24.4557, 1, 0, 0.650101,0.121166) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138565,0.115714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0740727,-0.439207) , 
6, 178.202, 1, 0, 0.107768,0.0555636) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0660558,-0.0386524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.33284) , 
1, 228.821, 1, 0, 0.0233224,-0.0132078) , 
4, 0.161489, 1, 0, 0.0580654,0.0150866) , 
7, 311.813, 1, 0, 0.499258,0.0941387)    );
  // itree = 471
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.309063,-0.00344205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800575,0.00142326) , 
8, 62.1612, 1, 0, 0.767463,0.150655) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0750651,0.00158367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254269,0.0165363) , 
9, 0.985165, 1, 0, 0.1332,0.0622327) , 
7, 229.178, 1, 0, 0.571566,0.123345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.644042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.94868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0988204,0.0011898) , 
9, 0.949207, 1, 0, 0.0522658,0.00591934) , 
5, 266.068, 1, 0, 0.0318783,-0.00096983) , 
1, 348.193, 1, 0, 0.509736,0.109103)    );
  // itree = 472
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750788,0.00103435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459149,0.00605268) , 
6, 148.105, 1, 0, 0.72054,0.133935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.118144,-0.00148174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149429,4.83189) , 
1, 240.29, 1, 0, 0.128024,0.0345907) , 
5, 176.677, 1, 0, 0.607889,0.115047) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.921671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.0735) , 
7, 363.451, 1, 0, 0,-0.0115934) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0686325,89.0887) , 
8, 371.025, 1, 0, 0.0212809,0.0132821) , 
8, 205.325, 1, 0, 0.516716,0.0992307)    );
  // itree = 473
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.514295,0.00327358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.813004,0.000797985) , 
0, 129.23, 1, 0, 0.774976,0.121696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.106841,0.0037461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0615353,-0.0423131) , 
5, 186.464, 1, 0, 0.0797518,-0.0242112) , 
7, 210.989, 1, 0, 0.486334,0.0611182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.29297e+24) , 
8, 396.624, 1, 0, 0.466119,0.031466)    );
  // itree = 474
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.266177,0.000320719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616087,0.00114076) , 
0, 174.659, 1, 0, 0.53924,0.084017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69563,0.00757494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.626885,0.000641167) , 
9, 0.92015, 1, 0, 0.654202,0.222919) , 
2, 20.3461, 1, 0, 0.556851,0.105296) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0481223,-0.310311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250823,-1.06554e+17) , 
8, 322.632, 1, 0, 0.0997885,-0.0427864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.26819e+22) , 
8, 392.569, 1, 0, 0.0713812,-0.0340877) , 
7, 422.918, 1, 0, 0.483138,0.0841319)    );
  // itree = 475
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801324,0.00100922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.254954,0.00103515) , 
7, 196.49, 1, 0, 0.658345,0.106083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.817958,0.00247876) , 
2, 20.3461, 1, 0, 0.68048,0.127995) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.602254) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0826383,0.0597166) , 
0, 584.338, 1, 0, 0.0172766,0.00260593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369798,0.00837579) , 
2, 34.0676, 1, 0, 0.0561272,0.0230131) , 
7, 286.239, 1, 0, 0.507042,0.0988324)    );
  // itree = 476
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648157,0.000974223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725122,0.0018399) , 
2, 14.7226, 1, 0, 0.672214,0.129839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.482441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0923193,0.000186384) , 
8, 100.954, 1, 0, 0.0520035,-0.0253191) , 
6, 185.943, 1, 0, 0.621646,0.117189) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0918122,-0.000139439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0453735,-0.61608) , 
3, 0.184492, 1, 0, 0.0719844,-0.0155283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162398,0.0332846) , 
3, 0.484368, 1, 0, 0.0905579,0.0150599) , 
1, 232.612, 1, 0, 0.502349,0.0942477)    );
  // itree = 477
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68677,0.00235121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.859815,0.000990542) , 
1, 89.221, 1, 0, 0.838006,0.152903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322226,-0.00078443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.305884,0.00491054) , 
8, 139.259, 1, 0, 0.31562,0.0422308) , 
7, 192.816, 1, 0, 0.694575,0.122516) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.10826,4.55318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0217828,-0.130728) , 
5, 151.584, 1, 0, 0.0344603,0.00418304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390565,0.0875117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.801305) , 
9, 0.913206, 1, 0, 0.155302,0.0896112) , 
3, 0.403729, 1, 0, 0.0664749,0.0268155) , 
7, 296.099, 1, 0, 0.532091,0.0977591)    );
  // itree = 478
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812748,0.00169409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798466,0.000847122) , 
9, 0.927552, 1, 0, 0.803884,0.1479) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0381423,-0.164538) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206823,0.0142903) , 
8, 136.791, 1, 0, 0.128495,0.015247) , 
7, 204.125, 1, 0, 0.632094,0.114159) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0622556,-0.000785958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11305,-0.843985) , 
2, 26.3628, 1, 0, 0.0704387,-0.00921681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0939336,0.041361) , 
3, 0.484474, 1, 0, 0.0748262,0.00576849) , 
7, 315.988, 1, 0, 0.49192,0.0868947)    );
  // itree = 479
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.261121,-0.00196352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653912,0.0034367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656434,0.00103183) , 
1, 79.9639, 1, 0, 0.656222,0.117531) , 
8, 56.6797, 1, 0, 0.635562,0.105573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.102557,0.03831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107162,-0.0648771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0210369,-0.655056) , 
8, 119.512, 1, 0, 0.0358737,-0.0131695) , 
9, 0.884532, 1, 0, 0.0473525,0.00247442) , 
7, 311.813, 1, 0, 0.48649,0.0794446)    );
  // itree = 480
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646496,0.00195195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.718426,0.00100756) , 
9, 0.956306, 1, 0, 0.687218,0.143036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142438,-0.00755423) , 
5, 204.154, 1, 0, 0.656272,0.131309) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.657694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.446731) , 
1, 286.343, 1, 0, 0,-0.00914343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100923,5.67059) , 
4, 0.565211, 1, 0, 0.0150788,0.0053673) , 
7, 322.65, 1, 0, 0.514573,0.103477)    );
  // itree = 481
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.803613,0.00095833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592399,0.00368306) , 
7, 193.549, 1, 0, 0.759445,0.160662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.111483,-0.00217927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.339231,0.00335479) , 
2, 25.3244, 1, 0, 0.160893,0.00396086) , 
5, 161.49, 1, 0, 0.642078,0.129935) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0576241,-0.0259634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.50922) , 
7, 424.468, 1, 0, 0.0359309,-0.0156416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118047,0.106511) , 
0, 642.129, 1, 0, 0.0477205,0.00250756) , 
8, 148.72, 1, 0, 0.485741,0.0964175)    );
  // itree = 482
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404413,-0.000746421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.815947,0.0010239) , 
7, 128.757, 1, 0, 0.791239,0.116805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184187,-0.000871781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11557,0.00380066) , 
1, 232.612, 1, 0, 0.151783,0.00761718) , 
7, 191.094, 1, 0, 0.457621,0.0598395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54924,0.00982347) , 
2, 41.7723, 1, 0, 0.460701,0.0688233)    );
  // itree = 483
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569945,-2.16287e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653607,0.00117483) , 
4, 0.121045, 1, 0, 0.639892,0.0984761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.890634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0252199,0.0178827) , 
1, 287.8, 1, 0, 0.0130924,-0.00651342) , 
7, 286.239, 1, 0, 0.457708,0.0679601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517977,0.518716) , 
2, 41.7723, 1, 0, 0.459633,0.0768098)    );
  // itree = 484
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418305,-0.000719325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757343,0.00107222) , 
8, 56.4446, 1, 0, 0.737823,0.118752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391802,-0.00215584) , 
5, 155.806, 1, 0, 0.710189,0.104572) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.220221,0.133106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.530873) , 
0, 235.188, 1, 0, 0.0749391,0.0412807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0518565,-0.443475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0308526,-0.290553) , 
8, 205.422, 1, 0, 0.0421564,-0.0265494) , 
9, 0.906064, 1, 0, 0.0510114,-0.00822768) , 
7, 244.016, 1, 0, 0.472762,0.0639434)    );
  // itree = 485
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.594771,0.00155735) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399287,-0.00147877) , 
9, 0.985074, 1, 0, 0.552415,0.10056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.798362,0.0027298) , 
2, 14.0234, 1, 0, 0.63689,0.17463) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559642,0.000792583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379914,0.00363574) , 
6, 144.061, 1, 0, 0.520032,0.0867111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.653599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.206617) , 
1, 286.643, 1, 0, 0,-0.019595) , 
6, 192.247, 1, 0, 0.434896,0.0693073) , 
6, 79.7848, 1, 0, 0.489484,0.0977703)    );
  // itree = 486
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.772685,0.00103736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595516,5.26387e-05) , 
4, 0.201861, 1, 0, 0.703475,0.0775879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137467,0.000699049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.241048) , 
3, 0.1614, 1, 0, 0.0637577,-0.0180599) , 
8, 100.605, 1, 0, 0.417047,0.0347625) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64699,0.00341817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.623806) , 
7, 403.633, 1, 0, 0.524929,0.237089) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735552,0.00134326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136619,-0.000161034) , 
5, 155.745, 1, 0, 0.48554,0.0778966) , 
9, 0.927636, 1, 0, 0.500303,0.137563) , 
2, 10.9533, 1, 0, 0.467323,0.09684)    );
  // itree = 487
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715441,0.00125602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213741,0.000791806) , 
5, 163.136, 1, 0, 0.647356,0.124184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361786,0.195287) , 
6, 177.756, 1, 0, 0.633294,0.135256) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327929,0.00721642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.389736) , 
8, 220.877, 1, 0, 0.159592,0.120619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.712615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.40494) , 
4, 0.570877, 1, 0, 0,-0.0152853) , 
4, 0.121092, 1, 0, 0.0432588,0.0215529) , 
7, 315.988, 1, 0, 0.488545,0.107362)    );
  // itree = 488
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778364,0.00100017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.107577,-0.00103439) , 
7, 196.953, 1, 0, 0.558393,0.0810342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692326,0.00144422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562714,0.0175408) , 
6, 169.017, 1, 0, 0.658313,0.227208) , 
2, 18.4112, 1, 0, 0.575073,0.105435) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116999,0.00419019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.1654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.090843) , 
8, 210.592, 1, 0, 0,-0.00386183) , 
8, 120.964, 1, 0, 0.0195068,0.0101793) , 
7, 352.991, 1, 0, 0.458806,0.0855005)    );
  // itree = 489
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592972,0.00144808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232397,-0.000396001) , 
6, 109.295, 1, 0, 0.45069,0.0651139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605187,0.0024658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470412,0.00138943) , 
3, 0.224985, 1, 0, 0.532268,0.138292) , 
3, 0.121115, 1, 0, 0.511872,0.119996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.531124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.099049) , 
1, 287.8, 1, 0, 0,-0.017593) , 
6, 250.497, 1, 0, 0.476444,0.110473)    );
  // itree = 490
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811022,0.00138932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558133,0.000803468) , 
7, 168.593, 1, 0, 0.669676,0.118961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198921,0.00609917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630878,0.00679986) , 
9, 0.977874, 1, 0, 0.437146,0.330198) , 
8, 130.139, 1, 0, 0.647364,0.13923) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0429035,-0.00790212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119285,0.64285) , 
4, 0.565206, 1, 0, 0.0531402,0.00647199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0980316,2.07687) , 
0, 584.338, 1, 0, 0.0608925,0.0208175) , 
8, 148.72, 1, 0, 0.494394,0.108344)    );
  // itree = 491
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48298,-0.000852874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829127,0.000980508) , 
8, 76.0635, 1, 0, 0.744766,0.0750376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121668,0.00201832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14494,-0.0074116) , 
9, 0.898924, 1, 0, 0.139669,-0.0145887) , 
8, 101.812, 1, 0, 0.496146,0.0382122) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606705,0.00348049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562829,0.00127721) , 
9, 0.927552, 1, 0, 0.579465,0.165351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.583473,0.00145432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.421496) , 
7, 358.278, 1, 0, 0.461508,0.0882546) , 
4, 0.161489, 1, 0, 0.512661,0.121688) , 
3, 0.121119, 1, 0, 0.508129,0.0987841)    );
  // itree = 492
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524706,0.00350257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.753324,0.00121339) , 
0, 149.346, 1, 0, 0.71177,0.165049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0788621,-0.0687373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242196,0.00382697) , 
4, 0.201453, 1, 0, 0.165418,0.00953392) , 
5, 181.486, 1, 0, 0.65187,0.147999) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.43219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.320072) , 
9, 0.920472, 1, 0, 0,-0.00751519) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0719431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0925046) , 
0, 625.16, 1, 0, 0,-6.16955e-11) , 
8, 205.422, 1, 0, 0,-0.00268825) , 
7, 352.991, 1, 0, 0.53734,0.121524)    );
  // itree = 493
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202764,-0.00438682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597184,0.000631398) , 
9, 0.956323, 1, 0, 0.460502,-0.00793338) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815701,0.00129867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.35779,0.0012059) , 
8, 94.2546, 1, 0, 0.664953,0.126252) , 
8, 65.4237, 1, 0, 0.639723,0.109693) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0649731,-0.0472826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250131,0.000871169) , 
4, 0.565211, 1, 0, 0.0919664,1.88315e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209669,0.0346812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.479023) , 
3, 0.242102, 1, 0, 0.131002,0.114008) , 
9, 0.98516, 1, 0, 0.103021,0.0322891) , 
8, 151.933, 1, 0, 0.497548,0.0891883)    );
  // itree = 494
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67089,0.00161676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555508,0.0166142) , 
0, 494.674, 1, 0, 0.660336,0.180761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.02066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.10354) , 
5, 259.024, 1, 0, 0,-0.00471653) , 
8, 218.374, 1, 0, 0.578764,0.157849) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57973,0.000235106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.714054,0.00131304) , 
3, 0.121115, 1, 0, 0.683858,0.123372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20749,0.00165372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0619948,-0.111526) , 
4, 0.520906, 1, 0, 0.174804,0.0215529) , 
5, 141.436, 1, 0, 0.479166,0.0824302) , 
4, 0.161489, 1, 0, 0.521859,0.114759)    );
  // itree = 495
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.48345,-4.35701e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729434,0.00116523) , 
8, 68.0942, 1, 0, 0.701967,0.108321) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.53269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.62142) , 
1, 325.519, 1, 0, 0,-0.00958023) , 
8, 182.581, 1, 0, 0.639502,0.0978292) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.37255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.454938) , 
7, 278.446, 1, 0, 0,-0.0543376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.11412,2.90511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0274489,-0.762528) , 
1, 232.292, 1, 0, 0.0440717,0.017147) , 
8, 152.544, 1, 0, 0.0265374,-0.0112938) , 
5, 181.22, 1, 0, 0.473626,0.068299)    );
  // itree = 496
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.646402,0.000923378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738312,0.00248485) , 
8, 57.796, 1, 0, 0.697251,0.237096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608237,-0.00114246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838399,0.000980518) , 
8, 72.8261, 1, 0, 0.818144,0.0975975) , 
1, 103.282, 1, 0, 0.789018,0.131206) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.227241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261833,0.00148846) , 
3, 0.282605, 1, 0, 0.10721,-0.00617514) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.204615,0.0243905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.074458,0.010483) , 
1, 225.72, 1, 0, 0.107319,0.078902) , 
8, 152.035, 1, 0, 0.107276,0.0451547) , 
7, 207.653, 1, 0, 0.485136,0.0928493)    );
  // itree = 497
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550491,0.000731135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.692586,0.00141503) , 
2, 9.09905, 1, 0, 0.651977,0.121026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431298,4.09507) , 
6, 197.272, 1, 0, 0.643223,0.132764) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176813,0.158705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.531216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.01843) , 
4, 0.524838, 1, 0, 0,-0.00547319) , 
9, 0.891683, 1, 0, 0.0373278,0.0302678) , 
7, 336.881, 1, 0, 0.516627,0.111349)    );
  // itree = 498
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695473,0.00067427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746667,0.00151971) , 
3, 0.121117, 1, 0, 0.732766,0.136778) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197844,-0.000616631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562742,0.00220618) , 
2, 20.4958, 1, 0, 0.276865,0.0195483) , 
5, 149.768, 1, 0, 0.652063,0.116026) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0662816,-7.43387e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.272198,14.7781) , 
4, 0.362851, 1, 0, 0.132463,0.0823306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.578893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0382701,0.000843237) , 
1, 287.8, 1, 0, 0.022052,-0.00579741) , 
0, 271.064, 1, 0, 0.0575628,0.0225467) , 
7, 315.988, 1, 0, 0.507028,0.0932206)    );
  // itree = 499
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5444,0.00147796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0669027,-0.0131382) , 
6, 76.7107, 1, 0, 0.276354,-0.0280211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572237,0.00150623) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.338108,0.320199) , 
0, 672.662, 1, 0, 0.563893,0.116649) , 
1, 95.5006, 1, 0, 0.536951,0.103093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.467083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.42785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.085982) , 
1, 287.8, 1, 0, 0,-0.00762312) , 
7, 390.629, 1, 0, 0,-0.0261505) , 
6, 185.038, 1, 0, 0.461678,0.0849752)    );
  // itree = 500
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711635,0.00119187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180889,-0.00126557) , 
1, 217.767, 1, 0, 0.608846,0.0999175) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569952,0.0354098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368395,0.00330878) , 
9, 0.906055, 1, 0, 0.432952,0.288867) , 
6, 144.727, 1, 0, 0.589233,0.120985) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116264,1.51138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.482067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.26899) , 
7, 462.549, 1, 0, 0,-0.0224014) , 
9, 0.891683, 1, 0, 0.0250174,0.00308282) , 
6, 173.918, 1, 0, 0.506062,0.103605)    );
  // itree = 501
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630538,0.0010947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0755945,-0.00688074) , 
5, 163.01, 1, 0, 0.477283,0.0674185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748648,0.00101074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.32929,0.00854438) , 
8, 112.033, 1, 0, 0.629477,0.1504) , 
9, 0.95638, 1, 0, 0.565312,0.115415) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.63636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0980719) , 
7, 408.718, 1, 0, 0,-0.00328518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.44216) , 
4, 0.484466, 1, 0, 0,-0.0125588) , 
8, 210.775, 1, 0, 0.479218,0.0959252)    );
  // itree = 502
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635652,0.00180391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376502,0.195419) , 
0, 494.674, 1, 0, 0.620345,0.162146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245774,-0.00268578) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548988,0.00134181) , 
1, 150.441, 1, 0, 0.432163,0.0264399) , 
4, 0.40364, 1, 0, 0.588936,0.139496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123751,0.00203518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130016,-0.658231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-88.6916) , 
7, 392.181, 1, 0, 0.0489787,-0.00742199) , 
9, 0.884532, 1, 0, 0.0614942,0.00370831) , 
1, 286.343, 1, 0, 0.500798,0.116805)    );
  // itree = 503
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.453949,-0.000145801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570343,0.00142307) , 
8, 67.9166, 1, 0, 0.55454,0.0924048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62089,0.00197444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540287,0.12583) , 
1, 219.534, 1, 0, 0.607938,0.21598) , 
2, 18.8634, 1, 0, 0.566462,0.119995) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.6041) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138082,0.000846229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.48905) , 
2, 11.1695, 1, 0, 0.0590926,0.000990197) , 
6, 92.037, 1, 0, 0.046985,-0.00200807) , 
1, 286.343, 1, 0, 0.476708,0.0989155)    );
  // itree = 504
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.467387,-0.00068354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540593,0.00104926) , 
6, 132.135, 1, 0, 0.486481,-0.0121895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257244,-0.00211206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.68666,0.00158368) , 
8, 57.5405, 1, 0, 0.665415,0.135498) , 
5, 96.6597, 1, 0, 0.630309,0.106523) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.44929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0869756,-3.02774) , 
4, 0.444004, 1, 0, 0.018084,-0.0226925) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12813,2.29651e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.092229) , 
3, 0.161788, 1, 0, 0.047413,0.047413) , 
8, 317.867, 1, 0, 0.0261103,-0.00350697) , 
7, 299.699, 1, 0, 0.465233,0.0764608)    );
  // itree = 505
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722111,0.00106214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376508,0.0116516) , 
8, 124.022, 1, 0, 0.659477,0.135038) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.510184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.1819) , 
4, 0.363346, 1, 0, 0,-0.00764068) , 
8, 174.889, 1, 0, 0.576716,0.117132) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.02468e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0813394) , 
3, 0.164416, 1, 0, 0,-0.332419) , 
8, 313.928, 1, 0, 0.539308,0.0879723)    );
  // itree = 506
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.612913,0.00136451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348836,-0.00137403) , 
3, 0.686339, 1, 0, 0.601696,0.105924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.399151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.874558) , 
5, 248.322, 1, 0, 0,-0.0301871) , 
6, 197.836, 1, 0, 0.548606,0.0939143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-454.056) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.54725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.102767) , 
7, 557.006, 1, 0, 0,-0.000820751) , 
3, 0.164715, 1, 0, 0,-0.264123) , 
8, 281.767, 1, 0, 0.50122,0.0629885)    );
  // itree = 507
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715116,0.00124395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492943,0.00654333) , 
1, 272.362, 1, 0, 0.70307,0.140934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174081,14.1297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0912911,0.0192615) , 
4, 0.120989, 1, 0, 0.110572,0.0425783) , 
7, 284.548, 1, 0, 0.582078,0.120849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0905184,-6.85307e+12) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.15288e+06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0918647) , 
5, 265.99, 1, 0, 0,-0.0011068) , 
3, 0.161456, 1, 0, 0.0347388,-0.257821) , 
8, 278.617, 1, 0, 0.532963,0.0868695)    );
  // itree = 508
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.325758,-0.00157871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694809,0.00110042) , 
8, 57.2143, 1, 0, 0.674,0.0971239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.15572,-1.52551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140389,0.0186486) , 
4, 0.121115, 1, 0, 0.144035,-0.0260463) , 
7, 291.933, 1, 0, 0.56131,0.0709334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0984351,-1.58594e+31) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.0919743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.73588e-07) , 
9, 0.941964, 1, 0, 0,-8.90152e-22) , 
3, 0.161456, 1, 0, 0.0372214,-0.257047) , 
8, 281.767, 1, 0, 0.514977,0.0419374)    );
  // itree = 509
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257123,-0.00570735) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.62873,0.00172206) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262749,0.00130515) , 
0, 369.134, 1, 0, 0.564187,0.123462) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109591,-0.00457731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472881,0.00114712) , 
1, 103.271, 1, 0, 0.434998,0.043831) , 
4, 0.263441, 1, 0, 0.518517,0.0953111) , 
4, 0.0807444, 1, 0, 0.507333,0.0861852)    );
  // itree = 510
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398717,0.000282979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607098,0.00178404) , 
4, 0.484462, 1, 0, 0.448151,0.0588997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737535,0.000699158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.702641,0.00214518) , 
4, 0.12095, 1, 0, 0.711375,0.15434) , 
0, 224.573, 1, 0, 0.614571,0.11924) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0957239,-1.0589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125236,-2.20185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.552882) , 
0, 272.017, 1, 0, 0.0282454,-0.00981628) , 
4, 0.121117, 1, 0, 0.0444703,-0.0206724) , 
5, 255.688, 1, 0, 0.524458,0.0971251)    );
  // itree = 511
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744009,0.000935755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557557,0.00397911) , 
6, 132.003, 1, 0, 0.714939,0.124656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.449316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101284,0.199194) , 
4, 0.201453, 1, 0, 0.0551545,-0.0409439) , 
5, 166.513, 1, 0, 0.659356,0.110706) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354673,-1.43398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0590194,0.0415914) , 
8, 209.634, 1, 0, 0.0483174,-0.0115227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.27594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385584,1.2544e+20) , 
8, 296.982, 1, 0, 0.173395,0.156157) , 
9, 0.992351, 1, 0, 0.074839,0.0240323) , 
7, 296.099, 1, 0, 0.498099,0.086794)    );
  // itree = 512
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566617,0.000537346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.631121,0.00215522) , 
4, 0.122721, 1, 0, 0.612729,0.145779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258594,-0.000848189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64484,0.0015435) , 
0, 303.164, 1, 0, 0.413315,0.0241277) , 
4, 0.322977, 1, 0, 0.567123,0.117957) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0771968,-1.3605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121454,1.52915e+10) , 
8, 236.506, 1, 0, 0.0956894,0.0358395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.78706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.09659) , 
9, 0.985061, 1, 0, 0,-0.0440841) , 
3, 0.161491, 1, 0, 0.0384681,-0.0119541) , 
5, 252.611, 1, 0, 0.475298,0.0953922)    );
  // itree = 513
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682575,0.00257107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269568,-0.000909319) , 
4, 0.201453, 1, 0, 0.550652,0.206917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663433,0.000923508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.40782) , 
6, 162.766, 1, 0, 0.632779,0.0748774) , 
1, 96.2883, 1, 0, 0.618759,0.0974168) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133093,-0.329307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0462243,-0.190787) , 
8, 235.027, 1, 0, 0.0977568,-0.0588957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115305,19.4982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-18.6426) , 
0, 468.593, 1, 0, 0.0461911,0.0060526) , 
7, 550.506, 1, 0, 0.082968,-0.0402688) , 
7, 313.108, 1, 0, 0.477062,0.0610039)    );
  // itree = 514
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685054,0.000926949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.418437,0.0193111) , 
7, 255.118, 1, 0, 0.651208,0.127718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.12097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.341213) , 
4, 0.161162, 1, 0, 0,-0.0897501) , 
5, 186.798, 1, 0, 0.5894,0.107078) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0980834,-0.00536294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167528,0.00765258) , 
0, 643.302, 1, 0, 0.116089,0.0251283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-55.3375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-76.4553) , 
9, 0.992293, 1, 0, 0,-0.0881182) , 
8, 220.877, 1, 0, 0.0526628,-0.0367449) , 
7, 336.881, 1, 0, 0.459508,0.0722724)    );
  // itree = 515
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107521,-0.0181111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389135,-0.00135934) , 
9, 0.977867, 1, 0, 0.238343,-0.196176) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713591,0.00133359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458879,0.0132582) , 
1, 238.051, 1, 0, 0.685363,0.156912) , 
8, 65.6495, 1, 0, 0.649904,0.128904) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128055,-0.00838581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.373427,11.0179) , 
9, 0.992351, 1, 0, 0.185265,0.0266123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-10.2629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-48.2643) , 
9, 0.992291, 1, 0, 0,-0.0592404) , 
1, 286.343, 1, 0, 0.0975201,-0.0140491) , 
7, 296.099, 1, 0, 0.491309,0.087861)    );
  // itree = 516
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638299,1.77301e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747041,0.00114524) , 
8, 76.7205, 1, 0, 0.721135,0.0857032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822788,0.00113413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61072,0.00354121) , 
8, 108.054, 1, 0, 0.78028,0.180716) , 
3, 0.201861, 1, 0, 0.751761,0.134902) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20681,0.0135448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.11335) , 
5, 328.649, 1, 0, 0.154887,0.0854931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.30988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.32336) , 
9, 0.992033, 1, 0, 0,-0.0737203) , 
9, 0.920472, 1, 0, 0.0589744,-0.0130985) , 
7, 239.017, 1, 0, 0.507605,0.0827429)    );
  // itree = 517
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607694,0.000866472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779232,0.00194468) , 
2, 14.7226, 1, 0, 0.663062,0.115054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0706129,-1.56578) , 
7, 282.333, 1, 0, 0.623326,0.100839) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.31884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313141,0.00808962) , 
9, 0.873145, 1, 0, 0.159571,0.104668) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.29885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0831641,-6.24267) , 
9, 0.994353, 1, 0, 0.0163868,-0.0645802) , 
9, 0.891665, 1, 0, 0.0477379,-0.0275221) , 
7, 319.588, 1, 0, 0.48503,0.069998)    );
  // itree = 518
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695679,0.00105774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300688,0.0249996) , 
7, 252.752, 1, 0, 0.650663,0.125398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0683741,-0.336976) , 
5, 199.677, 1, 0, 0.609667,0.113256) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221184,28.4088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-11.9605) , 
4, 0.161456, 1, 0, 0.0987995,0.0699409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.18251e+11) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.17344e+29) , 
8, 383.287, 1, 0, 0,-0.0535677) , 
1, 286.343, 1, 0, 0.046651,0.00475047) , 
7, 327.128, 1, 0, 0.474556,0.0872172)    );
  // itree = 519
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406775,0.000195897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.802787,0.00122786) , 
0, 214.507, 1, 0, 0.68153,0.0976381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505844,0.0242784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400197,0.00293324) , 
9, 0.949325, 1, 0, 0.454217,0.335488) , 
6, 160.603, 1, 0, 0.665486,0.114425) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0786411,-4.54617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.99683e+12) , 
1, 326.856, 1, 0, 0.0452646,-0.112556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.31448,1.42179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-10.3072) , 
7, 390.961, 1, 0, 0.141036,0.122798) , 
4, 0.242233, 1, 0, 0.0877445,-0.00816345) , 
7, 301.098, 1, 0, 0.509544,0.0813367)    );
  // itree = 520
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.735467,0.00121084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.331425,0.0197005) , 
7, 253.176, 1, 0, 0.698949,0.142575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.22467) , 
7, 286.925, 1, 0, 0.671366,0.134223) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21001,-2.86608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.54337e+09) , 
1, 287.8, 1, 0, 0.111413,-0.116289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142622,0.0566027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1023.48) , 
8, 205.422, 1, 0, 0.0652927,0.0445373) , 
4, 0.161487, 1, 0, 0.0835666,-0.019185) , 
7, 311.813, 1, 0, 0.527014,0.0965492)    );
  // itree = 521
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738512,0.00131448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481146,0.0250702) , 
7, 253.143, 1, 0, 0.718817,0.163493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.72576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.376622,-0.0145146) , 
4, 0.201453, 1, 0, 0.224969,-0.0460307) , 
7, 274.463, 1, 0, 0.681601,0.147704) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125034,-2.26211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.01377e+30) , 
1, 290.78, 1, 0, 0.0615422,-0.101386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.154005,1244.25) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-15.226) , 
4, 0.226859, 1, 0, 0.0479783,0.0251948) , 
4, 0.161489, 1, 0, 0.0532794,-0.0242766) , 
7, 311.813, 1, 0, 0.53616,0.107895)    );
  // itree = 522
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.680495,0.000939452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435221,0.0229995) , 
7, 258.297, 1, 0, 0.66177,0.114743) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-16.4597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-19869.2) , 
1, 308.132, 1, 0, 0,-0.0398969) , 
8, 196.905, 1, 0, 0.604918,0.101458) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.112303,-4.32607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.34925) , 
1, 294.771, 1, 0, 0.0678383,-0.129765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115153,0.0113957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154932,-0.0483467) , 
9, 0.898874, 1, 0, 0.146042,0.0037815) , 
4, 0.242233, 1, 0, 0.101883,-0.0716267) , 
5, 187.311, 1, 0, 0.46027,0.0516875)    );
  // itree = 523
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125049,-0.0110481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58778,0.00052309) , 
5, 97.9395, 1, 0, 0.476915,-0.00796891) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701234,0.00115774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4061,0.101519) , 
1, 237.798, 1, 0, 0.672017,0.137713) , 
2, 7.70614, 1, 0, 0.644396,0.117088) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21646,-0.713988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.26971e+06) , 
4, 0.161267, 1, 0, 0.096184,-0.157419) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.136637,5.02658e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.55295e+29) , 
1, 418.88, 1, 0, 0.0574818,0.0463211) , 
1, 289.814, 1, 0, 0.0751482,-0.0466799) , 
7, 320.987, 1, 0, 0.505879,0.077238)    );
  // itree = 524
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511609,-0.000965043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774224,0.00108132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.452329,0.00919796) , 
1, 224.767, 1, 0, 0.758287,0.127797) , 
6, 48.0703, 1, 0, 0.746415,0.118675) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.165334,10.7315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0719897,-0.00405383) , 
6, 143.686, 1, 0, 0.108743,0.0345419) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12983,-2.88311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.77819e+06) , 
1, 435.913, 1, 0, 0.0831078,-0.174126) , 
1, 230.278, 1, 0, 0.0942163,-0.0837061) , 
7, 239.017, 1, 0, 0.504964,0.0437511)    );
  // itree = 525
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7065,0.000997558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632036,0.00849579) , 
6, 151.885, 1, 0, 0.69992,0.140145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.62804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267584,0.000626273) , 
2, 16.0848, 1, 0, 0.090428,-0.109777) , 
7, 273.282, 1, 0, 0.621605,0.108032) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0485871,-4.12741) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131825,-6409.82) , 
1, 277.459, 1, 0, 0.0868684,-0.280512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.50881e+28) , 
8, 412.781, 1, 0, 0,-0.00111171) , 
1, 474.541, 1, 0, 0.0614709,-0.198824) , 
7, 358.278, 1, 0, 0.510964,0.0474202)    );
  // itree = 526
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703893,0.000754286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477544,0.018347) , 
6, 154.659, 1, 0, 0.689213,0.0953419) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0745961,-1.89105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165463,0.004003) , 
4, 0.20182, 1, 0, 0.120885,-0.0324967) , 
7, 276.226, 1, 0, 0.574622,0.0695662) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.160395,0.000511186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.86975e+31) , 
7, 318.889, 1, 0, 0.056794,-0.544557) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.04902e+06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.50881e+28) , 
1, 538.15, 1, 0, 0,-0.00765004) , 
1, 415.296, 1, 0, 0.0269187,-0.262129) , 
1, 286.343, 1, 0, 0.483202,0.0142009)    );
  // itree = 527
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635171,0.0159145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54261,0.00117156) , 
9, 0.934766, 1, 0, 0.583628,0.233053) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.334226,-1.5006e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67838,0.0014319) , 
0, 212.994, 1, 0, 0.5698,0.0855821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0630486,-0.0140413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.68859) , 
1, 232.612, 1, 0, 0.0252078,-0.0534952) , 
0, 404.255, 1, 0, 0.495865,0.0667007) , 
4, 0.0807444, 1, 0, 0.502776,0.0798003)    );
  // itree = 528
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679854,0.00100945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387766,425.573) , 
1, 340.23, 1, 0, 0.666956,0.112058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0300704,-1.78186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.372325,0.00519676) , 
3, 0.403503, 1, 0, 0.140469,-0.0262728) , 
5, 191.754, 1, 0, 0.564191,0.0850575) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.049519,-0.468958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.10538) , 
1, 234.069, 1, 0, 0.0257018,-0.0286444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.105912,0.149258) , 
2, 26.3628, 1, 0, 0.0419094,-0.00795406) , 
6, 157.783, 1, 0, 0.461216,0.066719)    );
  // itree = 529
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.143477,-0.00499031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700212,0.000923986) , 
9, 0.884508, 1, 0, 0.664948,0.0824335) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.889871,0.00135228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.442201,0.0140429) , 
7, 217.496, 1, 0, 0.811233,0.209047) , 
5, 124.61, 1, 0, 0.709206,0.12074) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0853089,-0.57641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316319,3.44723e-05) , 
9, 0.898831, 1, 0, 0.270717,-0.0275959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221538,0.0217968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.88924) , 
7, 461.274, 1, 0, 0.121248,0.0864997) , 
1, 236.083, 1, 0, 0.204268,0.0231275) , 
5, 141.283, 1, 0, 0.505836,0.0814252)    );
  // itree = 530
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675199,0.000359682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.83801,0.00112087) , 
9, 0.93474, 1, 0, 0.801611,0.122813) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12962,0.00567242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.038213,-0.285582) , 
2, 11.6545, 1, 0, 0.0864051,-0.0129162) , 
7, 204.054, 1, 0, 0.504962,0.0665157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.736306,0.0051323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.89627) , 
7, 353.097, 1, 0, 0.47335,0.213318) , 
2, 25.3244, 1, 0, 0.501938,0.0805553)    );
  // itree = 531
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774117,0.00138096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.74335) , 
8, 160.653, 1, 0, 0.735364,0.14861) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.324769,0.0029835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326892,-0.00609072) , 
8, 83.5424, 1, 0, 0.326225,-0.0306028) , 
5, 166.834, 1, 0, 0.687639,0.127705) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283234,0.440108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0621497,-1.16085) , 
7, 386.716, 1, 0, 0.152181,0.0930692) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0267619,-3.43852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0855646,2.16346e+30) , 
8, 348.937, 1, 0, 0.0401787,-0.00617221) , 
9, 0.920445, 1, 0, 0.0819347,0.0308264) , 
7, 299.699, 1, 0, 0.531378,0.102712)    );
  // itree = 532
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593412,0.00125544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59422,0.0116493) , 
0, 471.663, 1, 0, 0.593466,0.126493) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.132764,2.60285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-45.3373) , 
3, 0.161491, 1, 0, 0.0580703,-0.0426326) , 
7, 403.159, 1, 0, 0.525649,0.105071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.11552e+31) , 
8, 408.514, 1, 0, 0.50613,0.0849544)    );
  // itree = 533
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619524,0.00107493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74106,0.002314) , 
2, 14.7226, 1, 0, 0.65343,0.132358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162511,7.19633e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145957,-0.111317) , 
4, 0.241626, 1, 0, 0.155655,-0.047905) , 
5, 178.724, 1, 0, 0.586373,0.108074) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.9027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.26524) , 
3, 0.161491, 1, 0, 0,-0.0291626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.37749e+30) , 
8, 318.193, 1, 0, 0,-0.042977) , 
5, 255.688, 1, 0, 0.49187,0.0837295)    );
  // itree = 534
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722404,0.00105989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211464,3.76419e-05) , 
8, 105.608, 1, 0, 0.635212,0.0964476) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592688,0.00602362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177687,1.1999) , 
8, 151.931, 1, 0, 0.409465,0.196432) , 
1, 210.153, 1, 0, 0.587365,0.117639) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.17823e+10) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.11251e+11) , 
9, 0.970706, 1, 0, 0,-0.0436404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0811398,1.81867e+30) , 
5, 388.003, 1, 0, 0.0232365,-0.0127412) , 
8, 216.72, 1, 0, 0.505873,0.0988051)    );
  // itree = 535
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700782,0.000969844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0590599,-1.63597) , 
7, 237.788, 1, 0, 0.566097,0.0660903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.633085,0.00289974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540032,0.00124) , 
4, 0.201859, 1, 0, 0.590196,0.153067) , 
2, 14.7226, 1, 0, 0.57437,0.0959491) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.086919,3.10286e+26) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.10927e+25) , 
3, 0.161456, 1, 0, 0.0385041,-0.0182903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.17122e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.47117e+30) , 
1, 572.54, 1, 0, 0,-0.14686) , 
0, 402.085, 1, 0, 0.0234186,-0.0686626) , 
8, 213.571, 1, 0, 0.494517,0.0720907)    );
  // itree = 536
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242199,-0.0016386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523395,0.000974739) , 
1, 123.515, 1, 0, 0.456131,0.0370921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677534,0.00152694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700373,0.00123283) , 
1, 124.395, 1, 0, 0.693238,0.130748) , 
9, 0.963495, 1, 0, 0.595411,0.0921068) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-68.8869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-43.2728) , 
0, 295.937, 1, 0, 0,-0.0617898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244769,4.33142) , 
4, 0.565211, 1, 0, 0.0419577,-0.0399667) , 
1, 286.343, 1, 0, 0.505991,0.070768)    );
  // itree = 537
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693005,0.000896752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.277103,0.0111001) , 
8, 120.83, 1, 0, 0.58637,0.122009) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128135,-0.0064287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608548,0.000878624) , 
1, 119.577, 1, 0, 0.523349,0.0226814) , 
4, 0.444094, 1, 0, 0.574617,0.103484) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.40152e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.83902e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.78705e+29) , 
0, 400.444, 1, 0, 0,-0.0529574) , 
1, 287.8, 1, 0, 0,-0.10398) , 
8, 213.571, 1, 0, 0.488478,0.0723843)    );
  // itree = 538
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498459,0.00619217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687631,0.000929503) , 
0, 100.387, 1, 0, 0.672161,0.108783) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624769,0.0248188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.238806,0.00385297) , 
4, 0.161081, 1, 0, 0.440316,0.322758) , 
6, 143.744, 1, 0, 0.643755,0.135) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221743,199.976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0297618,20.0149) , 
5, 166.48, 1, 0, 0.0755998,0.0629735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137843,-0.0120832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0479254,-1.82232) , 
5, 279.364, 1, 0, 0.0739274,-0.0142688) , 
2, 18.6581, 1, 0, 0.0750772,0.0388364) , 
7, 296.099, 1, 0, 0.477772,0.106932)    );
  // itree = 539
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743734,0.00116385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.560351,0.0103167) , 
1, 233.897, 1, 0, 0.725317,0.152733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672666,0.000835563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.33087,-0.00835718) , 
5, 141.964, 1, 0, 0.601162,0.0404113) , 
4, 0.242184, 1, 0, 0.68338,0.114793) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.11179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-12.2983) , 
7, 379.599, 1, 0, 0,-0.0615809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223735,44.5535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0339565,-0.0270369) , 
0, 248.902, 1, 0, 0.093428,0.0517977) , 
4, 0.201861, 1, 0, 0.0486293,-0.00256732) , 
7, 285.684, 1, 0, 0.504943,0.0818012)    );
  // itree = 540
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.328571,-0.00104275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.832146,0.00101818) , 
0, 207.482, 1, 0, 0.698429,0.067998) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682424,0.000154471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760292,0.00171) , 
4, 0.120872, 1, 0, 0.747054,0.169735) , 
3, 0.242237, 1, 0, 0.718673,0.110354) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0542406,-0.0356311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.054595,139.294) , 
8, 205.422, 1, 0, 0.0544152,-0.029512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351896,0.0607237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131917,0.00539782) , 
5, 205.459, 1, 0, 0.186534,0.0803092) , 
2, 18.6581, 1, 0, 0.0933079,0.00281679) , 
7, 242.617, 1, 0, 0.481059,0.0694939)    );
  // itree = 541
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737717,0.00114652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.521236,416129) , 
7, 281.522, 1, 0, 0.728335,0.138376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.653336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173545,0.00348374) , 
7, 269.762, 1, 0, 0.13601,-0.0256813) , 
5, 163.311, 1, 0, 0.591738,0.100543) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.12759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.59741) , 
7, 313.364, 1, 0, 0,-0.0546993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.186476,0.0474706) , 
2, 25.3244, 1, 0, 0.0418771,-0.00399405) , 
6, 157.77, 1, 0, 0.490406,0.0812778)    );
  // itree = 542
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208331,-0.00358349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61757,0.000620207) , 
2, 6.4661, 1, 0, 0.552266,0.0219215) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718071,0.00178488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115972,0.0867313) , 
7, 301.14, 1, 0, 0.623382,0.146861) , 
2, 8.88289, 1, 0, 0.606488,0.117182) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8232.95) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.45277e+28) , 
8, 246.361, 1, 0, 0,-0.0526055) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.94792e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
1, 465.079, 1, 0, 0,-0.00426912) , 
7, 409.467, 1, 0, 0,-0.0212471) , 
8, 205.325, 1, 0, 0.514135,0.0961025)    );
  // itree = 543
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719201,0.00130193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.89459) , 
6, 173.267, 1, 0, 0.676294,0.121087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422363,0.00375803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109346,-0.000967413) , 
6, 70.8527, 1, 0, 0.162433,0.0277591) , 
5, 143.571, 1, 0, 0.475554,0.0846287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.624175,0.0165235) , 
2, 41.7723, 1, 0, 0.481528,0.0989224)    );
  // itree = 544
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65125,0.00028099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.286419,0.00740631) , 
8, 131.965, 1, 0, 0.598354,0.0510834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.45912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-17.7347) , 
8, 194.525, 1, 0, 0,-0.0482441) , 
7, 243.445, 1, 0, 0.41226,0.0201916) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.835439,0.000740299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85445,0.00180292) , 
7, 181.994, 1, 0, 0.845416,0.170747) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.214592,0.0156071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.64448) , 
4, 0.242233, 1, 0, 0.138904,0.0534173) , 
7, 217.345, 1, 0, 0.518556,0.116466) , 
2, 10.9533, 1, 0, 0.476824,0.0786682)    );
  // itree = 545
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774401,0.00113945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588758,0.0118634) , 
1, 220.044, 1, 0, 0.765412,0.136622) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.03294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110478,0.000827051) , 
2, 20.8172, 1, 0, 0.0357289,-0.05291) , 
5, 188.685, 1, 0, 0.678892,0.114149) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.47401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2225,3.67384) , 
0, 139.418, 1, 0, 0.105966,0.0661646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0210959,-4.86278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129674,13.5862) , 
4, 0.565096, 1, 0, 0.0361605,-0.0170901) , 
0, 182.102, 1, 0, 0.0541617,0.00437933) , 
8, 148.72, 1, 0, 0.526612,0.0873922)    );
  // itree = 546
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.296375,-0.000427957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472345,0.00121234) , 
2, 10.7779, 1, 0, 0.387938,0.0371543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.451009,-0.000682175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642913,0.00306248) , 
3, 0.121051, 1, 0, 0.601442,0.165152) , 
9, 0.985154, 1, 0, 0.473925,0.0887045) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802132,0.00981363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123357,1150.05) , 
5, 252.976, 1, 0, 0.62652,0.403983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417149,0.00204411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0906009,-0.00282274) , 
4, 0.201649, 1, 0, 0.283375,0.0337075) , 
9, 0.92744, 1, 0, 0.472057,0.237307) , 
2, 18.8634, 1, 0, 0.473534,0.119815)    );
  // itree = 547
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738178,0.000862212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0775793,-0.0063413) , 
7, 196.927, 1, 0, 0.553881,0.0516188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766054,0.00185402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.528614,43.4683) , 
6, 158.057, 1, 0, 0.72363,0.224071) , 
0, 268.169, 1, 0, 0.628948,0.127881) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.198798,0.0433589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.02713e+29) , 
4, 0.161456, 1, 0, 0.0820319,0.0494576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.93392e+06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7986.39) , 
9, 0.927311, 1, 0, 0,-0.0678387) , 
2, 18.6581, 1, 0, 0.0560047,0.0122417) , 
7, 352.991, 1, 0, 0.513802,0.10464)    );
  // itree = 548
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776163,0.00132357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.08253) , 
8, 139.476, 1, 0, 0.744758,0.141229) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0199509,-1.37256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257452,12.4313) , 
6, 145.792, 1, 0, 0.0579103,-0.0175773) , 
7, 242.494, 1, 0, 0.5938,0.106326) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221316,0.00580066) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115261,-0.0239555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.52516) , 
7, 423.369, 1, 0, 0.0564694,-0.130597) , 
0, 182.102, 1, 0, 0.0838465,-0.0854963) , 
6, 158.789, 1, 0, 0.497949,0.0702707)    );
  // itree = 549
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601263,0.00368783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.728523,0.00131799) , 
5, 58.5778, 1, 0, 0.721397,0.140392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107083,0.00471047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.61868) , 
6, 130.123, 1, 0, 0.07707,-0.0136825) , 
5, 164.021, 1, 0, 0.5807,0.106748) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0925928,-0.090725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-16.5947) , 
7, 341.605, 1, 0, 0.0436704,-0.187251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.09042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
1, 437.185, 1, 0, 0,-0.00422348) , 
7, 462.43, 1, 0, 0.0234259,-0.102404) , 
6, 173.918, 1, 0, 0.496202,0.0750349)    );
  // itree = 550
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597076,0.00099552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566955,0.00286802) , 
6, 132.882, 1, 0, 0.594325,0.100355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101009,-0.259329) , 
6, 144.71, 1, 0, 0.575495,0.0912972) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-20.2996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346442,-1.63724) , 
8, 143.79, 1, 0, 0.169418,-0.279087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.4751e+12) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-105599) , 
6, 281.769, 1, 0, 0,-0.00516057) , 
7, 365.815, 1, 0, 0.070555,-0.119238) , 
6, 157.783, 1, 0, 0.476951,0.0502089)    );
  // itree = 551
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647612,0.00127018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384613,7.15604e+30) , 
8, 233.686, 1, 0, 0.637782,0.120591) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.15213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.46178e+29) , 
8, 229.297, 1, 0, 0,-0.0370077) , 
1, 306.752, 1, 0, 0.570632,0.103998) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183472,-6.89381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.30406e+28) , 
7, 382.354, 1, 0, 0.11226,-0.151381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.98748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128827,9.92829) , 
9, 0.977969, 1, 0, 0.0426471,0.0172722) , 
6, 243.281, 1, 0, 0.0790797,-0.0709946) , 
6, 173.918, 1, 0, 0.490606,0.0755089)    );
  // itree = 552
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466946,-0.00159171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822249,0.00101718) , 
7, 147.307, 1, 0, 0.7832,0.0921477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.165868,0.00153029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0766907,-0.00967445) , 
6, 131.687, 1, 0, 0.11785,-0.0377973) , 
7, 204.054, 1, 0, 0.473095,0.0315832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48751,0.021838) , 
2, 41.7723, 1, 0, 0.473504,0.0422146)    );
  // itree = 553
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648986,0.00318688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303349,0.00449405) , 
7, 164.278, 1, 0, 0.506195,0.288614) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781902,0.000858837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.829432,0.0013664) , 
4, 0.322977, 1, 0, 0.799017,0.123071) , 
0, 134.75, 1, 0, 0.759122,0.145625) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0155867,-3.26364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144905,183.901) , 
6, 236.834, 1, 0, 0.0393191,-0.0682301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.388925,0.0147057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.71157) , 
4, 0.242184, 1, 0, 0.260552,0.127645) , 
2, 18.9049, 1, 0, 0.109141,-0.00641141) , 
7, 234.843, 1, 0, 0.518048,0.0892358)    );
  // itree = 554
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74595,0.00228051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.868638,0.000980265) , 
1, 105.756, 1, 0, 0.839474,0.167086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320412,-0.000468715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243432,0.0310745) , 
8, 114.866, 1, 0, 0.275195,0.0696607) , 
7, 195.272, 1, 0, 0.628023,0.130578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169958,-6.57323e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.83275e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.00738e+29) , 
1, 416.749, 1, 0, 0,-0.00680283) , 
1, 287.8, 1, 0, 0.0487213,-0.0707554) , 
8, 216.623, 1, 0, 0.551622,0.104025)    );
  // itree = 555
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229503,-0.00496524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65094,0.000873623) , 
4, 0.0807064, 1, 0, 0.578775,0.0336567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.662408,0.00203548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634916,0.00173635) , 
1, 103.532, 1, 0, 0.640773,0.164191) , 
4, 0.121117, 1, 0, 0.628852,0.139092) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.14407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586808,0.101622) , 
9, 0.87728, 1, 0, 0.328318,0.263395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12857,-0.00553417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435991,0.00287816) , 
3, 0.645966, 1, 0, 0.16888,0.00131724) , 
9, 0.891665, 1, 0, 0.203248,0.0578094) , 
6, 138.81, 1, 0, 0.518098,0.11794)    );
  // itree = 556
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726905,0.00156092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.43113) , 
6, 195.735, 1, 0, 0.697053,0.138618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.84928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0578971,17.1166) , 
7, 320.087, 1, 0, 0.0423574,0.000764855) , 
5, 172.301, 1, 0, 0.531838,0.10383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668292,0.0175305) , 
2, 41.7723, 1, 0, 0.536826,0.118022)    );
  // itree = 557
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568866,0.00380698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803107,0.000984368) , 
0, 124.706, 1, 0, 0.774628,0.139239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140296,-0.00877926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266687,1.14738e+16) , 
7, 454.093, 1, 0, 0.163513,-0.000520102) , 
7, 221.844, 1, 0, 0.64263,0.109052) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.94075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0227001,-5.12215) , 
7, 329.082, 1, 0, 0.0142914,-0.0505396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0960252,8.79356e+10) , 
0, 585.887, 1, 0, 0.0289075,-0.0244461) , 
8, 148.72, 1, 0, 0.481541,0.0740112)    );
  // itree = 558
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57331,0.00137867) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735793,0.00359944) , 
2, 24.6286, 1, 0, 0.586855,0.118791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.38582) , 
6, 159.287, 1, 0, 0.56882,0.109999) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.166195,-1.23812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6444.14) , 
6, 253.4, 1, 0, 0.106017,-0.225887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-33.6279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.21089e+28) , 
8, 275.795, 1, 0, 0,-0.0423779) , 
8, 152.035, 1, 0, 0.0477545,-0.125038) , 
6, 173.918, 1, 0, 0.485719,0.0725149)    );
  // itree = 559
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764746,0.00132109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65343,0.0112441) , 
1, 235.558, 1, 0, 0.756588,0.164735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.105252,-0.207852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118136,6.69274e+10) , 
1, 337.997, 1, 0, 0.109783,0.022293) , 
7, 242.494, 1, 0, 0.571229,0.123914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0816699,-111.489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.25103e+28) , 
8, 210.872, 1, 0, 0.0445158,-0.171026) , 
6, 226.276, 1, 0, 0.52854,0.100011)    );
  // itree = 560
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678185,0.000647598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.092742,-0.0061729) , 
5, 140.351, 1, 0, 0.533293,0.0309468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732736,0.00109309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588511,0.00553342) , 
0, 308.21, 1, 0, 0.696191,0.164184) , 
2, 11.9368, 1, 0, 0.608372,0.0923558) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178543,-0.010733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.40064e+30) , 
6, 243.482, 1, 0, 0.136164,-0.186697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.118177,26.3606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-19.4685) , 
1, 232.292, 1, 0, 0.0294754,-0.014066) , 
8, 152.035, 1, 0, 0.0813175,-0.0979512) , 
6, 138.81, 1, 0, 0.479131,0.0456899)    );
  // itree = 561
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663495,0.00119932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.682e+29) , 
8, 205.325, 1, 0, 0.595478,0.0956272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636557,0.00408287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645326,0.00214139) , 
9, 0.9492, 1, 0, 0.641041,0.261321) , 
3, 0.645966, 1, 0, 0.599611,0.110657) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352997,-0.276456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122112,-2.62089) , 
5, 125.378, 1, 0, 0.233027,-0.13181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-19.334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.82771e+28) , 
8, 210.872, 1, 0, 0,-0.0195124) , 
7, 324.118, 1, 0, 0.0713493,-0.0538961) , 
6, 157.783, 1, 0, 0.503384,0.0806822)    );
  // itree = 562
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.678835,0.00122342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129947,-18.3741) , 
1, 274.857, 1, 0, 0.657959,0.105473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.321968,44.8146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0293829,-5.09583) , 
4, 0.0807444, 1, 0, 0.0587255,0.00904351) , 
7, 290.205, 1, 0, 0.491162,0.0786316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599088,0.0152632) , 
2, 41.9453, 1, 0, 0.494779,0.0886194)    );
  // itree = 563
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.405032,0.00185885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0694038,-0.00483994) , 
1, 135.233, 1, 0, 0.251182,0.0584577) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482238,4.81326e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164933,-0.0357214) , 
3, 0.121119, 1, 0, 0.302477,-0.0799299) , 
0, 126.751, 1, 0, 0.274282,-0.00386278) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693224,0.00111124) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628496,0.0217534) , 
0, 418.807, 1, 0, 0.687257,0.127085) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174215,0.00738454) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.58291) , 
6, 99.8003, 1, 0, 0.0352468,0.011077) , 
7, 342.716, 1, 0, 0.544273,0.101644) , 
0, 165.46, 1, 0, 0.501521,0.0849377)    );
  // itree = 564
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732099,0.000933399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.303805,-0.000852444) , 
8, 93.0488, 1, 0, 0.627202,0.0602581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495841,0.0177557) , 
1, 234.862, 1, 0, 0.618236,0.0781812) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119203,0.0205621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0182485,-0.0131937) , 
0, 182.102, 1, 0, 0.044871,-0.0289926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187939,9.42837) , 
4, 0.565211, 1, 0, 0.0649703,-0.00614113) , 
8, 148.72, 1, 0, 0.466008,0.0549803)    );
  // itree = 565
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752238,0.00103084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444614,0.144269) , 
8, 125.743, 1, 0, 0.7384,0.122909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.291543,0.219112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126575,-0.0982616) , 
8, 155.659, 1, 0, 0.190364,-0.0782103) , 
8, 137.014, 1, 0, 0.67508,0.0996716) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-19.8394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-13.1986) , 
9, 0.91324, 1, 0, 0,-0.0924649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107968,4.57323e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.50159e+29) , 
5, 259.024, 1, 0, 0.049998,0.0465124) , 
8, 220.877, 1, 0, 0.0267521,-0.0181031) , 
7, 299.699, 1, 0, 0.510611,0.0697942)    );
  // itree = 566
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705267,0.00300984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218132,0.00129717) , 
7, 164.839, 1, 0, 0.450144,0.21662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.568854,0.00027294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.555353,0.00153844) , 
3, 0.121119, 1, 0, 0.559415,0.0802819) , 
0, 130.079, 1, 0, 0.544613,0.0987511) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226144,-4.28662e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.24956e+30) , 
8, 278.928, 1, 0, 0.122005,-0.143003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.63661e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
1, 537.586, 1, 0, 0,-0.00595144) , 
5, 271.023, 1, 0, 0.056896,-0.0698644) , 
1, 342.507, 1, 0, 0.482782,0.0773748)    );
  // itree = 567
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247421,7.22073e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726683,0.00121219) , 
0, 179.741, 1, 0, 0.615841,0.0888221) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72874,0.00651113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-17311.5) , 
5, 293.112, 1, 0, 0.53834,0.280598) , 
0, 374.725, 1, 0, 0.60326,0.119954) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128343,-0.00407812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.572e+29) , 
8, 205.575, 1, 0, 0.0807206,-0.0549011) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322058,0.0778203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.201578,-0.00193199) , 
4, 0.161456, 1, 0, 0.253102,0.0521331) , 
2, 18.6581, 1, 0, 0.143936,-0.01565) , 
6, 128.796, 1, 0, 0.468848,0.0802718)    );
  // itree = 568
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490972,0.00267131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698749,0.000871932) , 
0, 127.623, 1, 0, 0.66952,0.103912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636164,0.0102653) , 
0, 376.157, 1, 0, 0.667319,0.120655) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-11.54) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.75622e+29) , 
8, 261.473, 1, 0, 0,-0.0482407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226485,2738.53) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.39346) , 
5, 229.642, 1, 0, 0.0864183,0.0553099) , 
9, 0.98516, 1, 0, 0.0251504,-0.0181042) , 
7, 291.925, 1, 0, 0.496089,0.0836558)    );
  // itree = 569
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748772,0.000969298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3707,0.00875188) , 
1, 195.345, 1, 0, 0.659693,0.12926) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.788231,0.000950437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149849,-1.83645) , 
7, 221.226, 1, 0, 0.445952,0.0201745) , 
6, 122.851, 1, 0, 0.613525,0.105698) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265773,40.1372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.19461) , 
3, 0.161491, 1, 0, 0.120782,0.0725285) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0547398,-5.74833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.05786e+15) , 
5, 267.147, 1, 0, 0.0301979,-0.0699176) , 
9, 0.920415, 1, 0, 0.0648901,-0.0153628) , 
6, 173.918, 1, 0, 0.533068,0.0879442)    );
  // itree = 570
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639154,0.00108339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566535,0.00542013) , 
0, 332.774, 1, 0, 0.624588,0.13465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73587,0.00660029) , 
2, 24.0195, 1, 0, 0.633453,0.155638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237633,13.6763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0282251,-5.26388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104736,7.99129) , 
2, 27.2849, 1, 0, 0.0424526,-0.0438021) , 
9, 0.891647, 1, 0, 0.0904247,0.0110793) , 
6, 157.77, 1, 0, 0.536825,0.129915)    );
  // itree = 571
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709528,0.00141306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529118,4.74234e+16) , 
1, 276.473, 1, 0, 0.701183,0.15535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0984233,2.27462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-14.4742) , 
6, 135.295, 1, 0, 0.0519649,-0.115888) , 
7, 271.936, 1, 0, 0.645878,0.132244) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221431,90.3337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.18562) , 
6, 180.363, 1, 0, 0.122127,0.0940668) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.76683e+13) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.80108e+29) , 
8, 205.422, 1, 0, 0,-0.0170972) , 
4, 0.121117, 1, 0, 0.0322872,0.0122918) , 
7, 321.603, 1, 0, 0.508448,0.105378)    );
  // itree = 572
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65988,0.00230407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.801253,0.000862991) , 
5, 71.9782, 1, 0, 0.784356,0.120823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634825,0.00397697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57058,0.0319283) , 
5, 136.513, 1, 0, 0.601375,0.391793) , 
7, 217.251, 1, 0, 0.76426,0.150583) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0764049,-0.0113866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127441,4.49469e+30) , 
8, 366.747, 1, 0, 0.0841067,-0.0112272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269995,17.6228) , 
2, 34.0676, 1, 0, 0.0984128,0.00792562) , 
7, 234.843, 1, 0, 0.521066,0.0984785)    );
  // itree = 573
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.55117,-0.000211705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.675405,0.001246) , 
1, 161.981, 1, 0, 0.604395,0.035398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.637745,0.000667029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684661,0.00224817) , 
3, 0.121119, 1, 0, 0.671794,0.169141) , 
2, 10.9533, 1, 0, 0.644802,0.11558) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.10635,-21.9806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-59.2643) , 
7, 294.804, 1, 0, 0.0365902,-0.0811029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.118183,-951.849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0767976,24.819) , 
4, 0.161487, 1, 0, 0.093148,-0.00799982) , 
2, 11.2131, 1, 0, 0.0677557,-0.0408203) , 
8, 148.72, 1, 0, 0.487978,0.0730747)    );
  // itree = 574
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187705,-0.00266646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.587998,0.00102955) , 
1, 117.474, 1, 0, 0.502163,0.0306473) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740032,0.00119359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577464,0.00658408) , 
8, 139.51, 1, 0, 0.729609,0.143487) , 
9, 0.941929, 1, 0, 0.663542,0.11071) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138242,34.4036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.312293,2377.32) , 
3, 0.242184, 1, 0, 0.225012,0.185963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0321176,-22.2267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0401459,141841) , 
5, 259.024, 1, 0, 0.0357524,-0.0316676) , 
9, 0.884532, 1, 0, 0.0731711,0.0113604) , 
8, 152.035, 1, 0, 0.518449,0.0862934)    );
  // itree = 575
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502643,0.000563273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700979,0.00306717) , 
9, 0.879644, 1, 0, 0.601547,0.164062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570355,0.000682927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59892,0.00248709) , 
4, 0.565211, 1, 0, 0.573821,0.0620976) , 
9, 0.898831, 1, 0, 0.580288,0.0858793) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0713157,-10.9101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0627684,-0.0082687) , 
9, 0.903325, 1, 0, 0.0654204,-0.0426346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17887,0.0320017) , 
9, 0.992351, 1, 0, 0.0880061,-0.0150188) , 
6, 157.77, 1, 0, 0.484385,0.0662231)    );
  // itree = 576
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758939,0.00107948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.41751,7.73528e+30) , 
6, 227.239, 1, 0, 0.743957,0.127926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55651,0.00419385) , 
8, 106.885, 1, 0, 0.728951,0.143061) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411982,0.0292427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.36119) , 
3, 0.161, 1, 0, 0.233634,0.138953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.112688,-0.112061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0244837,3.57518e+29) , 
8, 209.04, 1, 0, 0.070354,-0.0488421) , 
1, 147.55, 1, 0, 0.0978112,-0.0172625) , 
8, 116.197, 1, 0, 0.515445,0.0888255)    );
  // itree = 577
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70668,0.00123014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-19.0972) , 
8, 160.329, 1, 0, 0.680105,0.108965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161543,-5.57712e+30) , 
1, 288.968, 1, 0, 0.661426,0.0941249) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255167,-63.8194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0372049,1.20753e+30) , 
8, 215.146, 1, 0, 0.0307808,-0.0476269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.078679,1.80527e+30) , 
1, 571.237, 1, 0, 0.0394256,-0.0288285) , 
7, 302.761, 1, 0, 0.501431,0.062498)    );
  // itree = 578
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552975,0.00322611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46365,0.000502819) , 
4, 0.218519, 1, 0, 0.518839,0.138142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454157,0.000623075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.03989,-0.0185551) , 
0, 439.097, 1, 0, 0.391643,0.0220968) , 
3, 0.161491, 1, 0, 0.451911,0.0770815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687887,0.00536716) , 
4, 0.767071, 1, 0, 0.467836,0.0942512)    );
  // itree = 579
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.3474,-0.000491737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77545,0.00107772) , 
0, 229.808, 1, 0, 0.604522,0.0468981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727567,0.00255907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734932,0.00138979) , 
1, 106.951, 1, 0, 0.732547,0.190581) , 
2, 11.6931, 1, 0, 0.666529,0.116489) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.066089,34.0461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-147.009) , 
3, 0.161431, 1, 0, 0.0274269,-0.038863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253617,147.868) , 
2, 34.0676, 1, 0, 0.051242,-0.0250299) , 
7, 296.099, 1, 0, 0.501977,0.078641)    );
  // itree = 580
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528321,0.00012769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188677,-0.00456712) , 
0, 258.925, 1, 0, 0.4259,-0.0366042) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513997,0.000898337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535115,0.00428419) , 
0, 317.095, 1, 0, 0.521158,0.100163) , 
8, 72.9628, 1, 0, 0.50811,0.0814284) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240886,-4.03056e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.47378e+30) , 
8, 287.97, 1, 0, 0.130832,-0.0748988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.27423e+28) , 
8, 406.448, 1, 0, 0.0861211,-0.0507206) , 
1, 428.79, 1, 0, 0.470012,0.0694979)    );
  // itree = 581
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.388663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400911,-0.00156875) , 
3, 0.242237, 1, 0, 0.200768,-0.111129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.75171e+29) , 
7, 366.506, 1, 0, 0.136484,-0.088292) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625183,0.00501851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657884,0.00104388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0336576,-2.25293e+30) , 
7, 321.603, 1, 0, 0.517491,0.0626041) , 
9, 0.888905, 1, 0, 0.525473,0.082134) , 
9, 0.87725, 1, 0, 0.494755,0.0686754)    );
  // itree = 582
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780499,0.00126452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104231,-4.90431) , 
7, 266.973, 1, 0, 0.714852,0.117512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206723,3.6911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563376,0.0052291) , 
9, 0.970857, 1, 0, 0.403382,0.302891) , 
8, 130.139, 1, 0, 0.68885,0.132988) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.228811,321.112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.99726e+16) , 
7, 329.65, 1, 0, 0.0964794,0.069295) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.15141,-494.291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.77313e+29) , 
5, 262.836, 1, 0, 0.0870834,-0.0448178) , 
3, 0.161401, 1, 0, 0.0909135,0.00169867) , 
8, 148.72, 1, 0, 0.543973,0.101177)    );
  // itree = 583
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232447,-0.00361828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559378,0.000920672) , 
2, 7.22364, 1, 0, 0.517665,0.0381262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.569288,0.000763901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659518,0.0031012) , 
0, 228.176, 1, 0, 0.635162,0.179912) , 
2, 14.7226, 1, 0, 0.553241,0.0810563) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128995,0.00925607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-12.3216) , 
3, 0.161489, 1, 0, 0.0582777,-6.00601e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131654,-11.0004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.04049e+30) , 
7, 344.423, 1, 0, 0.0352835,-0.0701345) , 
4, 0.161267, 1, 0, 0.0442155,-0.0428936) , 
6, 174.937, 1, 0, 0.470384,0.0608803)    );
  // itree = 584
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52751,0.000856649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.687493,0.00558809) , 
2, 14.8806, 1, 0, 0.602373,0.240618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599992,-5.35298e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769765,0.00110283) , 
1, 136.709, 1, 0, 0.72044,0.0730067) , 
1, 94.1433, 1, 0, 0.699078,0.103333) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0679851,-0.0105307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0598207,1.63042e+30) , 
8, 218.094, 1, 0, 0.0651424,-0.0977246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289541,0.0114094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.54209e+29) , 
8, 208.934, 1, 0, 0.145868,0.0566625) , 
0, 272.667, 1, 0, 0.10886,-0.014116) , 
8, 116.197, 1, 0, 0.484424,0.0606184)    );
  // itree = 585
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.765887,0.00104388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.04243) , 
7, 265.35, 1, 0, 0.695875,0.0881936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.111453,-0.0176257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1935,6.35788) , 
0, 270.374, 1, 0, 0.156517,-0.00842616) , 
8, 116.197, 1, 0, 0.491,0.0514927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650845,0.00425289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616098,0.000716234) , 
9, 0.94197, 1, 0, 0.633347,0.206618) , 
4, 0.645955, 1, 0, 0.507941,0.0699545)    );
  // itree = 586
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74619,0.00129181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0957585,-793.222) , 
7, 316.165, 1, 0, 0.704388,0.120179) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.124109,-0.610599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.431569,0.0838566) , 
6, 174.173, 1, 0, 0.226121,-0.0843287) , 
8, 117.762, 1, 0, 0.645983,0.0952053) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168674,-1.32995e+31) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.05388e+29) , 
7, 340.228, 1, 0, 0.0951389,-0.142936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.150422,4.5037e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.64126e+29) , 
7, 428.897, 1, 0, 0.0578879,0.0420369) , 
1, 335.753, 1, 0, 0.0777888,-0.0567826) , 
8, 148.72, 1, 0, 0.494554,0.0546992)    );
  // itree = 587
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582613,0.00998664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474897,0.000555951) , 
9, 0.941973, 1, 0, 0.528215,0.253076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626155,0.00095026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334638,7.0638e+30) , 
8, 214.34, 1, 0, 0.612073,0.0895403) , 
1, 78.5005, 1, 0, 0.602382,0.108438) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.118042,-0.0166267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31501,0.00350849) , 
9, 0.992351, 1, 0, 0.165755,-0.0196078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137075,4.74722) , 
4, 0.605583, 1, 0, 0.162842,-0.00632698) , 
1, 232.612, 1, 0, 0.491131,0.07939)    );
  // itree = 588
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703285,0.000937482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-53.5013) , 
7, 254.723, 1, 0, 0.613982,0.0650441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593528,0.0034806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615004,0.00104827) , 
9, 0.949207, 1, 0, 0.605346,0.134883) , 
2, 11.1695, 1, 0, 0.609323,0.102724) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.20465e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.05293e+29) , 
7, 412.391, 1, 0, 0,-0.0439227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118179,1.8205e+30) , 
4, 0.524838, 1, 0, 0.0213889,-0.0192238) , 
1, 286.343, 1, 0, 0.519581,0.08411)    );
  // itree = 589
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417216,-0.00169737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601107,0.00104891) , 
6, 56.4016, 1, 0, 0.581573,0.0711549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719077,0.00140813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501792,1.32508e+31) , 
8, 154.327, 1, 0, 0.696153,0.173708) , 
2, 11.3565, 1, 0, 0.639124,0.122665) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142519,-4.52997e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.86669e+30) , 
1, 222.249, 1, 0, 0.0444982,-0.0529439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1268,2.19928e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.11188e+29) , 
8, 152.544, 1, 0, 0.0469461,0.0403034) , 
6, 252.713, 1, 0, 0.0451821,-0.0268901) , 
7, 311.813, 1, 0, 0.490209,0.0851681)    );
  // itree = 590
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645864,0.00104077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354485,-0.221174) , 
5, 166.279, 1, 0, 0.535479,0.0759644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747859,0.00140754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550283,0.0334647) , 
0, 301.511, 1, 0, 0.677063,0.213237) , 
2, 18.6581, 1, 0, 0.563753,0.103377) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.65561e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.43995e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
0, 440, 1, 0, 0,-0.00398614) , 
1, 289.814, 1, 0, 0,-0.0202541) , 
7, 422.918, 1, 0, 0.485283,0.0861685)    );
  // itree = 591
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.193949,-0.00677569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606184,0.00174319) , 
6, 51.5876, 1, 0, 0.589271,0.116131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661062,0.0126779) , 
2, 29.0346, 1, 0, 0.592414,0.128331) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.105163,-144.749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-31.5639) , 
8, 119.673, 1, 0, 0.0335845,-0.0329407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219616,0.247857) , 
9, 0.992293, 1, 0, 0.0712447,-0.00913533) , 
6, 182.815, 1, 0, 0.518726,0.108895)    );
  // itree = 592
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.194094,-0.00115344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.605771,0.00155952) , 
1, 83.071, 1, 0, 0.577013,0.0995621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723676,0.00232217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570903,0.00104994) , 
9, 0.942375, 1, 0, 0.655788,0.220083) , 
4, 0.645824, 1, 0, 0.585279,0.112208) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.05528e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.62874e+29) , 
7, 312.797, 1, 0, 0,-0.0591013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.94112e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.04757e+28) , 
9, 0.906025, 1, 0, 0,-0.00384773) , 
7, 410.421, 1, 0, 0,-0.0254851) , 
1, 286.643, 1, 0, 0.494044,0.0907437)    );
  // itree = 593
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82279,0.0011462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0468198,-0.618842) , 
7, 214.325, 1, 0, 0.691618,0.0956807) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730385,0.00101361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616943,0.00387411) , 
6, 106.145, 1, 0, 0.678665,0.181799) , 
3, 0.201864, 1, 0, 0.685786,0.134453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.39967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127266,12.4746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0598354,-0.520175) , 
9, 0.912353, 1, 0, 0.0686011,0.0132089) , 
9, 0.891683, 1, 0, 0.0559275,0.00176112) , 
5, 184.297, 1, 0, 0.530807,0.101803)    );
  // itree = 594
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737108,0.00138941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0852353,-4.10493) , 
5, 185.708, 1, 0, 0.655581,0.107681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.417805,7.65545e+30) , 
7, 483.214, 1, 0, 0.646907,0.118852) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12818,2.12822e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.52678e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0840625,2.88084e+30) , 
0, 539.557, 1, 0, 0.0191601,-0.00415918) , 
1, 147.922, 1, 0, 0.0310191,0.00850606) , 
8, 148.72, 1, 0, 0.48937,0.0906265)    );
  // itree = 595
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.515045,0.000973008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118979,-0.0103875) , 
9, 0.992247, 1, 0, 0.461337,0.0315787) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590082,0.00132562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451527,0.00479015) , 
6, 128.372, 1, 0, 0.547409,0.130419) , 
3, 0.121117, 1, 0, 0.525758,0.105556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-201.072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.26267e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.9364e+28) , 
5, 266.068, 1, 0, 0,-0.00489217) , 
8, 152.035, 1, 0, 0,-0.122746) , 
6, 226.276, 1, 0, 0.480719,0.0859985)    );
  // itree = 596
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755819,0.00116393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156006,-0.116932) , 
8, 123.752, 1, 0, 0.655268,0.0998795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.716827,0.00729141) , 
2, 24.6286, 1, 0, 0.658824,0.114486) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.56669e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.9795e+30) , 
7, 419.759, 1, 0, 0,-0.191365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.57354e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131279,2.44141e+30) , 
2, 24.5871, 1, 0, 0.0212657,0.0125605) , 
8, 152.035, 1, 0, 0.0158445,-0.0394257) , 
7, 317.074, 1, 0, 0.513533,0.0797074)    );
  // itree = 597
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424088,0.000799788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0864507,-0.0145812) , 
4, 0.2415, 1, 0, 0.312318,-0.00835627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573126,0.0013851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61788,0.00264424) , 
4, 0.282605, 1, 0, 0.589892,0.13674) , 
2, 7.51922, 1, 0, 0.558348,0.120251) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0862216,172868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.271309,-0.232062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0495678,-7.20026e+29) , 
7, 349.594, 1, 0, 0.107192,-0.0275272) , 
3, 0.121119, 1, 0, 0.101286,-0.00397772) , 
6, 185.038, 1, 0, 0.491865,0.102181)    );
  // itree = 598
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664571,0.000790843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359741,45.9375) , 
6, 160.586, 1, 0, 0.649864,0.0792612) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352953,19158.5) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.074576,34.6676) , 
4, 0.242231, 1, 0, 0.263799,0.25036) , 
5, 229.762, 1, 0, 0.584546,0.10821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16968,-1.28288e+10) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.00044e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.409e+29) , 
9, 0.906064, 1, 0, 0,-0.0137492) , 
7, 356.167, 1, 0, 0.046341,-0.0539395) , 
6, 183.947, 1, 0, 0.510933,0.0860318)    );
  // itree = 599
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252541,-0.0082307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638908,0.000758697) , 
2, 6.10151, 1, 0, 0.613628,0.0553712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669499,0.0005121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743454,0.00217519) , 
4, 0.201584, 1, 0, 0.712207,0.152318) , 
2, 11.3565, 1, 0, 0.657948,0.0989577) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-12.3806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0251543,1.05706e+30) , 
8, 154.625, 1, 0, 0.015103,-0.0373255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212072,45.9786) , 
4, 0.645955, 1, 0, 0.0379224,-0.0141283) , 
5, 181.22, 1, 0, 0.494625,0.0691694)    );
  // itree = 600
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277002,-0.00367605) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767425,0.00129485) , 
8, 56.7054, 1, 0, 0.741378,0.110704) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0450553,-11.2589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.058047,2.77433e+30) , 
8, 171.026, 1, 0, 0.0534114,-0.0450146) , 
7, 246.365, 1, 0, 0.58863,0.0761306) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.105436,-37.0895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0438898,-44.3491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.36492e+28) , 
8, 257.292, 1, 0, 0.026774,-0.0195932) , 
1, 147.922, 1, 0, 0.0468372,-0.0339009) , 
6, 173.918, 1, 0, 0.509398,0.0600394)    );
  // itree = 601
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734754,0.000879912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708484,0.00260712) , 
5, 151.198, 1, 0, 0.731247,0.100171) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.136762,-20.4864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0604799,9.51282e+29) , 
7, 354.029, 1, 0, 0.102834,-0.0749386) , 
5, 172.301, 1, 0, 0.607026,0.0655562) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119771,-10.5913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.10696e+30) , 
7, 297.068, 1, 0, 0.0375909,-0.0926012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.059667,-30541.2) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.133588,7021.13) , 
9, 0.98516, 1, 0, 0.0798635,-0.00400337) , 
0, 362.94, 1, 0, 0.0585558,-0.0486615) , 
6, 157.77, 1, 0, 0.506891,0.0447031)    );
  // itree = 602
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723708,0.000794181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.319454,-0.00437313) , 
7, 174.178, 1, 0, 0.542125,0.0117616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677699,0.00153083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389975,7.08738e+30) , 
1, 331.279, 1, 0, 0.662857,0.129681) , 
1, 137.93, 1, 0, 0.623238,0.0909855) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.76818e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.59683e+29) , 
6, 184.401, 1, 0, 0,-0.0541289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.129938,2.07177e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.329e+29) , 
4, 0.20182, 1, 0, 0.0658751,0.0527479) , 
8, 368.378, 1, 0, 0.021016,-0.0200321) , 
8, 202.273, 1, 0, 0.533767,0.0744918)    );
  // itree = 603
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61713,0.0029472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.803549,0.00101117) , 
0, 131.684, 1, 0, 0.781759,0.133374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-61.8217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.66024e+28) , 
5, 289.246, 1, 0, 0,-0.119593) , 
7, 266.973, 1, 0, 0.716641,0.112303) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.70139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0975686,-1.10658) , 
6, 98.4113, 1, 0, 0.071575,-0.046868) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.46803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315033,28.0755) , 
0, 300.238, 1, 0, 0.16619,0.0273572) , 
9, 0.992347, 1, 0, 0.0927773,-0.0302348) , 
8, 116.197, 1, 0, 0.49838,0.0624354)    );
  // itree = 604
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778784,0.000927659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350737,0.0209344) , 
7, 211.993, 1, 0, 0.683665,0.121631) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-46.2562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176542,2.98022e+07) , 
1, 221.539, 1, 0, 0.050653,-0.0339234) , 
5, 193.893, 1, 0, 0.585009,0.0973881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.19246e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.98861e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.69137e+29) , 
7, 472.063, 1, 0, 0,-0.0152359) , 
8, 196.577, 1, 0, 0,-0.0514049) , 
1, 286.643, 1, 0, 0.491981,0.0737271)    );
  // itree = 605
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.41054,-0.000500579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865279,0.000856992) , 
1, 106.1, 1, 0, 0.788418,0.0659736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635169,0.00427156) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.537361,0.00196314) , 
5, 75.0492, 1, 0, 0.558408,0.190016) , 
8, 94.1118, 1, 0, 0.71262,0.10685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142123,9.5294e+09) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.106247,-206.787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.32609e+30) , 
7, 337.958, 1, 0, 0.0369764,-0.0703393) , 
5, 124.064, 1, 0, 0.050392,-0.0489399) , 
7, 248.472, 1, 0, 0.476454,0.0512918)    );
  // itree = 606
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702551,0.000954056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618963,0.0043782) , 
7, 183.026, 1, 0, 0.665999,0.198555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.00156e+30) , 
7, 275.467, 1, 0, 0.59765,0.166962) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481422,0.000472448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467548,0.00323511) , 
4, 0.565211, 1, 0, 0.479732,0.0447738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5322,0.000691631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569968,0.00486549) , 
3, 0.121092, 1, 0, 0.559992,0.163449) , 
2, 17.9658, 1, 0, 0.500305,0.075193) , 
1, 117.346, 1, 0, 0.524793,0.0982785)    );
  // itree = 607
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771127,0.000889937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685219,0.0179865) , 
7, 212.666, 1, 0, 0.760285,0.148277) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134903,-15.47) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199446,19.946) , 
4, 0.201859, 1, 0, 0.168153,-0.00198982) , 
7, 228.901, 1, 0, 0.616259,0.111727) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.30482e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.39368e+28) , 
9, 0.985165, 1, 0, 0,-0.0140961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.27185e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.08743e+29) , 
7, 625.598, 1, 0, 0,-0.00198656) , 
6, 187.254, 1, 0, 0,-0.0078801) , 
7, 356.411, 1, 0, 0.498743,0.088919)    );
  // itree = 608
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520109,0.00173003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.282588,-0.00182838) , 
3, 0.0935574, 1, 0, 0.430028,0.0331099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.468306,0.00256034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.572305,0.00113687) , 
9, 0.941992, 1, 0, 0.532354,0.110336) , 
3, 0.122822, 1, 0, 0.50465,0.0894278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.430352,-0.00347173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.15748e+29) , 
7, 252.039, 1, 0, 0.216223,-0.0832917) , 
3, 0.645966, 1, 0, 0.487594,0.0792141)    );
  // itree = 609
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.499563,-0.000571363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.701855,0.00109273) , 
6, 63.7699, 1, 0, 0.683204,0.0855205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197935,-0.000187627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389217,0.00460444) , 
4, 0.726699, 1, 0, 0.211732,0.0147872) , 
5, 139.747, 1, 0, 0.495792,0.0574037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68365,0.0068283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.50193e+29) , 
5, 291.576, 1, 0, 0.463088,0.245505) , 
2, 26.3628, 1, 0, 0.492817,0.074517)    );
  // itree = 610
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622718,-0.0003003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740376,0.00131782) , 
8, 72.3832, 1, 0, 0.721054,0.0974044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141795,-177.725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110966,4.56633e+30) , 
5, 306.153, 1, 0, 0.131031,0.000949919) , 
5, 172.865, 1, 0, 0.597832,0.0772606) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0746381,-278.193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.81554e+28) , 
7, 350.863, 1, 0, 0.03695,-0.0338993) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.89122e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
3, 0.161491, 1, 0, 0,-0.000607108) , 
5, 265.99, 1, 0, 0.019627,-0.0182911) , 
6, 173.918, 1, 0, 0.513432,0.0633129)    );
  // itree = 611
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597249,0.00160272) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.02396) , 
1, 222.975, 1, 0, 0.457252,0.101625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649693,0.00390175) , 
4, 0.524732, 1, 0, 0.499738,0.154882) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579419,-0.000901665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.695564,0.00094762) , 
6, 59.9588, 1, 0, 0.684477,0.063589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157436,-0.00346242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389765,0.00148547) , 
3, 0.524847, 1, 0, 0.204911,-0.0196016) , 
5, 142.824, 1, 0, 0.491359,0.0300887) , 
9, 0.891637, 1, 0, 0.49301,0.0546732)    );
  // itree = 612
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624848,0.0021813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705703,0.00109906) , 
9, 0.905985, 1, 0, 0.688276,0.111927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0605301,-4.7005e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154767,4.50957e+30) , 
7, 433.661, 1, 0, 0.0890216,-0.00183352) , 
5, 179.472, 1, 0, 0.575984,0.0906099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.31616e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.72556e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.31462e+29) , 
8, 272.364, 1, 0, 0,-0.0146909) , 
8, 182.786, 1, 0, 0,-0.0245741) , 
1, 286.343, 1, 0, 0.48326,0.0720672)    );
  // itree = 613
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.376409,-0.000526733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212122,0.00195253) , 
1, 160.006, 1, 0, 0.307418,0.0115978) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622458,0.000276596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669721,0.00185636) , 
3, 0.161401, 1, 0, 0.650804,0.110064) , 
0, 196.543, 1, 0, 0.513038,0.0705594) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638143,0.00272391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.534117,1.15947e+31) , 
6, 201.235, 1, 0, 0.624021,0.217744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.75795e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.159465,2.38887e+30) , 
3, 0.484474, 1, 0, 0.0347793,0.00737407) , 
7, 380.078, 1, 0, 0.424315,0.146445) , 
0, 293.429, 1, 0, 0.478698,0.0999308)    );
  // itree = 614
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720651,0.00177554) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.666656,0.00107579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358994,6.31659e+30) , 
5, 229.533, 1, 0, 0.655477,0.0927952) , 
7, 133.371, 1, 0, 0.661017,0.1079) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.88678e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.91407e+30) , 
0, 330.177, 1, 0, 0,-0.0497809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.15041e+29) , 
1, 416.689, 1, 0, 0,-0.0107461) , 
1, 287.8, 1, 0, 0,-0.0284076) , 
7, 319.588, 1, 0, 0.512679,0.0773114)    );
  // itree = 615
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597087,0.000724919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640444,0.00278332) , 
3, 0.121115, 1, 0, 0.62886,0.218145) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.54936e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0857856,1.94814e+30) , 
5, 261.852, 1, 0, 0.044802,-0.0112179) , 
7, 269.401, 1, 0, 0.425429,0.138257) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780989,0.000501418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129436,-0.0303624) , 
7, 209.668, 1, 0, 0.491512,0.00734841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776933,0.00168489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.76594) , 
8, 116.197, 1, 0, 0.534536,0.098691) , 
3, 0.443936, 1, 0, 0.500604,0.0266512) , 
9, 0.906024, 1, 0, 0.482947,0.0528652)    );
  // itree = 616
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737572,0.00254393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734752,0.00105945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50045,-0.00171801) , 
4, 0.605583, 1, 0, 0.719743,0.08838) , 
9, 0.870042, 1, 0, 0.72156,0.108309) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-10800.2) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.43321e+29) , 
7, 352.4, 1, 0, 0,-0.142778) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14645,71.7513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.084616,-2519.85) , 
6, 142.446, 1, 0, 0.114457,0.027279) , 
8, 116.588, 1, 0, 0.0928325,-0.00484957) , 
7, 244.583, 1, 0, 0.49457,0.0674555)    );
  // itree = 617
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.630591,0.00078374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.391334,-0.000686474) , 
6, 118.564, 1, 0, 0.578493,0.0421958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672705,0.00225743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594801,0.000403129) , 
9, 0.941928, 1, 0, 0.635588,0.132462) , 
4, 0.403722, 1, 0, 0.593314,0.0656283) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267563,-11.161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.25746e+29) , 
5, 202.56, 1, 0, 0.116028,-0.107147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0923496,2.30372e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.47818e+30) , 
2, 11.9778, 1, 0, 0.0343481,0.0116702) , 
8, 152.035, 1, 0, 0.0706863,-0.0411899) , 
6, 157.77, 1, 0, 0.493745,0.0452777)    );
  // itree = 618
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410222,0.00213334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24249,-0.00449072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577222,0.000113809) , 
4, 0.0922359, 1, 0, 0.465459,-0.0273712) , 
9, 0.891607, 1, 0, 0.455671,-0.00488012) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738696,0.00172864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.158191,-37.8191) , 
7, 235.373, 1, 0, 0.616964,0.124047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.22644e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.56895e+29) , 
6, 162.162, 1, 0, 0,-0.0155356) , 
7, 349.025, 1, 0, 0.497265,0.0969659) , 
4, 0.121117, 1, 0, 0.48869,0.0759697)    );
  // itree = 619
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685346,0.00118545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139544,1.01431e+29) , 
5, 173.667, 1, 0, 0.558016,0.0789682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606229,0.00669344) , 
4, 0.767071, 1, 0, 0.559983,0.0870381) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249154,2.25893e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.11326e+29) , 
4, 0.161267, 1, 0, 0.115839,0.0469861) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.29105e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.50603e+28) , 
5, 271.377, 1, 0, 0,-0.067045) , 
0, 293.882, 1, 0, 0.0437375,-0.0239903) , 
6, 173.918, 1, 0, 0.476522,0.0690883)    );
  // itree = 620
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64427,0.00108227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770219,0.0021242) , 
4, 0.686327, 1, 0, 0.65834,0.10277) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.71615e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.41777e+30) , 
8, 171.95, 1, 0, 0,-0.096192) , 
5, 232.67, 1, 0, 0.579425,0.0789208) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.328598,-0.832346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.14704e+30) , 
6, 177.567, 1, 0, 0.164379,-0.161571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.20256e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.04786e+28) , 
0, 330.527, 1, 0, 0,-0.00457195) , 
7, 334.106, 1, 0, 0.050088,-0.0524112) , 
6, 157.783, 1, 0, 0.478018,0.053761)    );
  // itree = 621
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756046,0.00131615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.737516) , 
8, 101.677, 1, 0, 0.486107,0.0813665) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720556,0.00943832) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124004,26.9524) , 
8, 114.34, 1, 0, 0.521915,0.40926) , 
2, 13.1312, 1, 0, 0.501547,0.222746) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608259,0.00393473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315488,0.000777854) , 
1, 117.034, 1, 0, 0.438013,0.167024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687272,0.0011932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.69581e+29) , 
7, 350.678, 1, 0, 0.548342,0.0716409) , 
0, 165.989, 1, 0, 0.526847,0.0902247) , 
9, 0.891637, 1, 0, 0.522209,0.114516)    );
  // itree = 622
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585736,0.000429728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22446,4.77024e+30) , 
7, 378.259, 1, 0, 0.51859,0.0644892) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679352,0.00412857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.387673,0.00127596) , 
4, 0.259648, 1, 0, 0.54066,0.190074) , 
4, 0.161489, 1, 0, 0.532427,0.143228) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43236,0.000576546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540476,0.00307308) , 
3, 0.7171, 1, 0, 0.44547,0.0470893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481622,0.00114363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623685,0.00504944) , 
9, 0.985067, 1, 0, 0.529994,0.155726) , 
4, 0.484466, 1, 0, 0.462494,0.0689701) , 
3, 0.161491, 1, 0, 0.494505,0.102961)    );
  // itree = 623
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607692,0.00221987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681287,0.000842722) , 
9, 0.905986, 1, 0, 0.664968,0.0967106) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0399856,-7.55161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0608076,7.02795e+23) , 
1, 244.738, 1, 0, 0.0511977,-0.00611447) , 
5, 164.021, 1, 0, 0.508708,0.0705324) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716512,0.00192904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637384,1.59609e+31) , 
5, 207.356, 1, 0, 0.694094,0.265726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.02199e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.44944e+28) , 
8, 220.877, 1, 0, 0,-0.0146416) , 
7, 350.474, 1, 0, 0.462503,0.172178) , 
2, 18.6581, 1, 0, 0.499611,0.0905462)    );
  // itree = 624
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687112,0.000969197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857046,0.00225424) , 
2, 19.9107, 1, 0, 0.713488,0.103281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123831,-7.88942e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250242,5.65458e+30) , 
7, 320.528, 1, 0, 0.163896,-0.0267183) , 
7, 263.714, 1, 0, 0.629546,0.0834257) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.79701e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.43076e+29) , 
7, 461.251, 1, 0, 0,-0.0196487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0765729,-9.82469e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.98494e+29) , 
0, 538.754, 1, 0, 0.0528254,-0.00522177) , 
1, 236.083, 1, 0, 0.0364323,-0.00969882) , 
7, 349.025, 1, 0, 0.510217,0.0646898)    );
  // itree = 625
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435157,0.00116063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-12.2916) , 
7, 208.374, 1, 0, 0.26028,0.0407632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.34686,-0.00035559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.148632,-0.00342344) , 
4, 0.201861, 1, 0, 0.256602,-0.0651891) , 
0, 121.73, 1, 0, 0.258225,-0.0184473) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522291,-0.00079059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340564,0.148385) , 
8, 129.383, 1, 0, 0.49347,0.00382146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616089,0.00166889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.30181e+29) , 
1, 415.232, 1, 0, 0.532205,0.0881833) , 
1, 143.896, 1, 0, 0.522146,0.066275) , 
0, 181.376, 1, 0, 0.4722,0.0502415)    );
  // itree = 626
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.677199,0.000954165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.42138,405.95) , 
1, 272.583, 1, 0, 0.660071,0.101375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.74052e+30) , 
5, 198.064, 1, 0, 0.621998,0.0857028) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.12366e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114415,-1.36188e+29) , 
7, 411.715, 1, 0, 0.0620054,-0.0543954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.66886e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0286494,-2.34103e+29) , 
1, 287.8, 1, 0, 0.0206976,-0.00659814) , 
8, 152.544, 1, 0, 0.0312298,-0.0187849) , 
7, 315.988, 1, 0, 0.472858,0.0593247)    );
  // itree = 627
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712702,0.000332613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723711,0.00162552) , 
4, 0.121117, 1, 0, 0.721567,0.127714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550791,25.5537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345893,0.116284) , 
3, 0.159801, 1, 0, 0.451896,0.358521) , 
1, 255.195, 1, 0, 0.70304,0.143571) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.36541e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124885,-3.49429e+30) , 
2, 17.9658, 1, 0, 0.0564804,-0.0470192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168485,7.00117e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.35104e+29) , 
1, 343.887, 1, 0, 0.0663167,0.0645771) , 
8, 205.422, 1, 0, 0.061987,0.0154548) , 
7, 291.925, 1, 0, 0.537508,0.110489)    );
  // itree = 628
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607785,0.0038957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67461,0.00129547) , 
0, 102.262, 1, 0, 0.669236,0.122356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0357576,-8.12856e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121612,5.77431e+30) , 
0, 443.14, 1, 0, 0.0597389,0.0325095) , 
8, 148.72, 1, 0, 0.514483,0.0995436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49604,0.035996) , 
2, 41.9453, 1, 0, 0.514004,0.108502)    );
  // itree = 629
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.186341,-0.0015335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551084,0.00260556) , 
9, 0.877225, 1, 0, 0.348328,0.0841645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575453,0.00973632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526616,0.00501932) , 
9, 0.868887, 1, 0, 0.550982,0.360033) , 
4, 0.322912, 1, 0, 0.422031,0.184496) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490914,-0.000552637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501043,0.00134626) , 
1, 144.211, 1, 0, 0.497825,0.0343051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463499,0.000818491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625858,0.0080655) , 
2, 14.3455, 1, 0, 0.537493,0.221074) , 
3, 0.645966, 1, 0, 0.50179,0.0529734) , 
9, 0.891637, 1, 0, 0.488187,0.0754044)    );
  // itree = 630
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592535,0.00523512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6081,0.000756128) , 
3, 0.28261, 1, 0, 0.597974,0.260993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.01313e+30) , 
7, 317.074, 1, 0, 0.448778,0.185927) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7136,0.000350563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.274526,-0.00993512) , 
7, 186.065, 1, 0, 0.537625,-0.002846) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718564,0.00210004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.036564,2.20791e+30) , 
8, 154.236, 1, 0, 0.494209,0.105569) , 
1, 143.896, 1, 0, 0.508888,0.0689141) , 
9, 0.884444, 1, 0, 0.499869,0.0864718)    );
  // itree = 631
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.631303,0.0057245) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71641,0.000902077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.775817,0.00170172) , 
3, 0.403503, 1, 0, 0.732119,0.105003) , 
9, 0.877324, 1, 0, 0.722681,0.129086) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.100791,-0.542356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316349,0.00209841) , 
9, 0.916982, 1, 0, 0.24428,0.0247709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.103867,-0.0100146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185717,-9.52322e+29) , 
5, 211.045, 1, 0, 0.155842,-0.0539381) , 
9, 0.992347, 1, 0, 0.228446,0.0106787) , 
5, 142.824, 1, 0, 0.525078,0.0817451)    );
  // itree = 632
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641175,0.00148652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734474,0.00523341) , 
4, 0.292017, 1, 0, 0.648058,0.134019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420211,-0.000797478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620602,0.00105123) , 
4, 0.52292, 1, 0, 0.543272,0.0436464) , 
4, 0.322977, 1, 0, 0.621944,0.111497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.90348e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.92716e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.59976e+29) , 
0, 539.557, 1, 0, 0,-0.0105591) , 
1, 287.8, 1, 0, 0,-0.028164) , 
8, 213.571, 1, 0, 0.541399,0.0934102)    );
  // itree = 633
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606201,0.00122201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.384791,-0.0008535) , 
3, 0.130714, 1, 0, 0.483306,0.0209825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497685,0.00269555) , 
3, 0.686327, 1, 0, 0.484308,0.0324516) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74865,0.00321363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.565581,0.00135727) , 
4, 0.232737, 1, 0, 0.604141,0.134876) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.66659e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.595e+29) , 
0, 586.2, 1, 0, 0,-0.0213567) , 
5, 261.07, 1, 0, 0.514683,0.111742) , 
4, 0.201861, 1, 0, 0.500123,0.073736)    );
  // itree = 634
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.627552,0.00102928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615263,0.00455835) , 
0, 358.198, 1, 0, 0.626203,0.0963294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.104689,2.13011e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0370328,-4.1625e+30) , 
9, 0.884493, 1, 0, 0.0487501,-0.0123835) , 
7, 311.813, 1, 0, 0.478629,0.0685466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573866,0.0129335) , 
4, 0.767071, 1, 0, 0.482993,0.0811141)    );
  // itree = 635
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490601,0.00136462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424795,-0.000404836) , 
9, 0.939529, 1, 0, 0.466289,0.0421239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.613853,0.000863481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654625,0.00489412) , 
3, 0.199666, 1, 0, 0.625613,0.112724) , 
9, 0.985154, 1, 0, 0.524841,0.0680696) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616314,0.00168882) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392005,0.000128634) , 
4, 0.242233, 1, 0, 0.545797,0.101912) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771049,0.0047719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381378,0.00308279) , 
3, 0.498583, 1, 0, 0.644198,0.359464) , 
2, 18.8634, 1, 0, 0.568956,0.162528) , 
3, 0.322983, 1, 0, 0.539207,0.0988306)    );
  // itree = 636
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2781,-0.00497249) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671806,0.00102892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.21445e+07) , 
5, 170.172, 1, 0, 0.440633,0.0355905) , 
5, 97.6965, 1, 0, 0.417803,0.00879499) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459171,0.00025394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616408,0.00378756) , 
2, 11.1695, 1, 0, 0.556604,0.17593) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647151,0.00162717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215674,-1.91876e+30) , 
8, 154.236, 1, 0, 0.402787,0.059747) , 
1, 143.896, 1, 0, 0.462493,0.104845) , 
3, 0.121119, 1, 0, 0.450758,0.0796236)    );
  // itree = 637
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244211,-0.00535996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486952,0.000407121) , 
2, 7.50549, 1, 0, 0.422528,-0.00518235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.400571,0.00329235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438647,0.000539258) , 
9, 0.913548, 1, 0, 0.423584,0.0723801) , 
2, 11.1695, 1, 0, 0.4231,0.0368057) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702608,0.00010968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793053,0.00132362) , 
3, 0.322167, 1, 0, 0.736096,0.0666628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.357715,0.68348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.02156) , 
9, 0.996812, 1, 0, 0.266431,0.238778) , 
8, 114.818, 1, 0, 0.556473,0.132488) , 
9, 0.985154, 1, 0, 0.46815,0.0691246)    );
  // itree = 638
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674242,0.00199321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717541,0.000534116) , 
9, 0.891608, 1, 0, 0.710069,0.0698248) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518104,0.0777187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262437,0.00972862) , 
1, 122.122, 1, 0, 0.315361,0.206808) , 
8, 108.747, 1, 0, 0.585332,0.113115) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.61904e+29) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.43152e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.12164e+29) , 
0, 516.705, 1, 0, 0,-0.00529715) , 
1, 234.069, 1, 0, 0,-0.00987117) , 
8, 207.723, 1, 0, 0.495498,0.0942393)    );
  // itree = 639
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603866,0.00148779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608763,0.00464261) , 
2, 17.1787, 1, 0, 0.604665,0.128482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.26518,-0.00286627) , 
2, 25.7859, 1, 0, 0.588023,0.119739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.88399e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.70055e+28) , 
8, 325.261, 1, 0, 0,-0.0108005) , 
1, 428.79, 1, 0, 0.547063,0.110646)    );
  // itree = 640
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.306187,-0.00190923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.617414,0.00134899) , 
8, 59.3907, 1, 0, 0.598281,0.0874756) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707988,0.00412404) , 
2, 25.9696, 1, 0, 0.60497,0.100359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.89079e+29) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.22047e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.029955,-4.00103e+29) , 
1, 223.398, 1, 0, 0.0210773,-0.00689668) , 
9, 0.884493, 1, 0, 0.0176304,-0.0120073) , 
7, 336.881, 1, 0, 0.473586,0.0752234)    );
  // itree = 641
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435463,0.000933446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27819,-0.000659097) , 
9, 0.941952, 1, 0, 0.357313,0.0182405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61881,0.00506056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244329,0.000257149) , 
4, 0.322977, 1, 0, 0.542375,0.337798) , 
3, 0.161489, 1, 0, 0.477964,0.226575) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595334,0.000999036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506272,0.0242055) , 
8, 129.238, 1, 0, 0.57944,0.164775) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.490314,0.00289343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540913,0.000879934) , 
9, 0.913284, 1, 0, 0.527281,0.0728707) , 
1, 117.346, 1, 0, 0.537662,0.0911619) , 
0, 165.184, 1, 0, 0.525346,0.119099)    );
  // itree = 642
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205036,-0.0041229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60717,0.00108471) , 
8, 63.9486, 1, 0, 0.578992,0.0560382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72478,0.00116858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551581,0.00985892) , 
8, 104.586, 1, 0, 0.663167,0.172233) , 
2, 14.7226, 1, 0, 0.602179,0.0880453) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.6914e+29) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.02282e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118546,-2.40298e+29) , 
2, 27.021, 1, 0, 0.0215514,-0.00465388) , 
9, 0.884478, 1, 0, 0.0180612,-0.0079913) , 
7, 340.847, 1, 0, 0.476205,0.0673335)    );
  // itree = 643
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40559,0.000206703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764211,0.00109243) , 
0, 232.111, 1, 0, 0.532373,0.0457781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667826,0.00196103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0889248,-4.72997e+29) , 
1, 433.753, 1, 0, 0.597703,0.113054) , 
0, 270.374, 1, 0, 0.560624,0.0748712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.102682,-8.21343e+29) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.1535e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.87876e+28) , 
1, 281.03, 1, 0, 0,-0.00598222) , 
1, 145.429, 1, 0, 0.0267682,-0.0126016) , 
6, 173.918, 1, 0, 0.476835,0.0611422)    );
  // itree = 644
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587645,0.00131875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479214,-0.000305186) , 
1, 53.8635, 1, 0, 0.495586,0.00521348) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.669663,0.00156249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125555,0.00374655) , 
1, 229.865, 1, 0, 0.506531,0.0816078) , 
1, 119.857, 1, 0, 0.504178,0.0651881) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571517,0.00532004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530407,0.00117779) , 
9, 0.956331, 1, 0, 0.550905,0.213859) , 
3, 0.726712, 1, 0, 0.507044,0.0743062)    );
  // itree = 645
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551438,0.00230642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-242.802) , 
6, 157.783, 1, 0, 0.442113,0.144757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503158,0.000535033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.586477,0.00174953) , 
9, 0.986189, 1, 0, 0.538394,0.0650514) , 
9, 0.906024, 1, 0, 0.516679,0.083028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57233,0.00823259) , 
4, 0.767071, 1, 0, 0.519347,0.0913051)    );
  // itree = 646
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.293363,-0.00163012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447719,0.000813504) , 
2, 7.64408, 1, 0, 0.397151,0.0148051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648778,0.00241463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.308403,0.00144569) , 
1, 144.211, 1, 0, 0.473362,0.117579) , 
2, 10.9533, 1, 0, 0.442237,0.0756049) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83642,0.00102035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529633,-0.00132135) , 
8, 88.2018, 1, 0, 0.789646,0.0733903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522319,0.0176428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.01646e+29) , 
5, 249.288, 1, 0, 0.406698,0.280375) , 
8, 109.94, 1, 0, 0.636066,0.156401) , 
9, 0.985154, 1, 0, 0.515873,0.106299)    );
  // itree = 647
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505633,0.000674331) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.223257,-0.00487489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458707,0.000233604) , 
9, 0.985077, 1, 0, 0.328395,-0.0361212) , 
9, 0.898839, 1, 0, 0.375279,-0.0151029) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.363587,-0.00394489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597116,0.00197376) , 
8, 45.0281, 1, 0, 0.588156,0.128987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.46565e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119608,2.16214e+30) , 
9, 0.992256, 1, 0, 0.0277953,0.0195538) , 
8, 202.273, 1, 0, 0.5027,0.112298) , 
4, 0.121117, 1, 0, 0.47943,0.089031)    );
  // itree = 648
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673216,0.00229977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470852,0.00196315) , 
1, 112.739, 1, 0, 0.522864,0.124753) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589731,0.000798363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136792,-0.00266159) , 
5, 130.462, 1, 0, 0.360393,0.0216995) , 
4, 0.182621, 1, 0, 0.446755,0.0764781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.545147,0.012753) , 
4, 0.767071, 1, 0, 0.451324,0.0865443)    );
  // itree = 649
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.249032,-0.00269918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542743,3.86287e-05) , 
0, 250.95, 1, 0, 0.364401,-0.0675817) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465855,0.000619675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56589,0.0024302) , 
9, 0.992251, 1, 0, 0.494233,0.0786583) , 
6, 83.7708, 1, 0, 0.460222,0.0403491) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375518,-0.000511774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618132,0.00266717) , 
4, 0.161394, 1, 0, 0.561772,0.200252) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.459596,-2.21314e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435889,0.00414272) , 
0, 249.667, 1, 0, 0.444607,0.0876113) , 
1, 116.668, 1, 0, 0.472549,0.114475) , 
2, 11.1695, 1, 0, 0.466935,0.0807154)    );
  // itree = 650
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538591,0.00416599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578097,0.00168201) , 
1, 62.8139, 1, 0, 0.576202,0.11291) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.104702,-4.11775e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
8, 329.295, 1, 0, 0.0482536,-0.00790796) , 
1, 429.074, 1, 0, 0.536476,0.103819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219485,-0.00186968) , 
3, 0.686339, 1, 0, 0.522833,0.0967565)    );
  // itree = 651
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123584,-0.00629046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510212,0.00101508) , 
2, 6.80952, 1, 0, 0.479253,0.0444568) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719439,0.00428031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.45631e+29) , 
5, 176.571, 1, 0, 0.486295,0.16836) , 
2, 15.7121, 1, 0, 0.480045,0.0583856) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709031,0.00248337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.71265,0.006761) , 
3, 0.241478, 1, 0, 0.710415,0.219094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.24873e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
6, 217.76, 1, 0, 0,-0.00291358) , 
7, 362.164, 1, 0, 0.491432,0.150661) , 
2, 18.6581, 1, 0, 0.482453,0.0779005)    );
  // itree = 652
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703582,0.00103711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317988,1.04069e+31) , 
6, 188.511, 1, 0, 0.675379,0.102382) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.23671e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0184878,7.37321e+29) , 
8, 120.021, 1, 0, 0.0131904,-0.0144265) , 
5, 173.754, 1, 0, 0.501081,0.071636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575799,0.0331584) , 
2, 41.7723, 1, 0, 0.503695,0.081129)    );
  // itree = 653
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551256,0.00154228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.55556,-0.0019929) , 
5, 74.6335, 1, 0, 0.553676,-0.0291917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61451,0.00287427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60118,0.00156458) , 
1, 111.849, 1, 0, 0.603511,0.123954) , 
7, 154.37, 1, 0, 0.598812,0.109513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0899529,-3.24187e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0947116,1.40112e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0369708,-1.99148e+30) , 
2, 10.9533, 1, 0, 0.0521533,-0.00737432) , 
1, 145.429, 1, 0, 0.0615238,-0.0360026) , 
6, 173.918, 1, 0, 0.518482,0.0877565)    );
  // itree = 654
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.45516,0.000513103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.782151,0.00205571) , 
3, 0.281611, 1, 0, 0.63702,0.202364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590726,0.00171761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643284,0.000728285) , 
9, 0.906024, 1, 0, 0.63023,0.0725442) , 
1, 97.1198, 1, 0, 0.631319,0.0933746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0879575,-0.00816424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.218972,0.0055249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0466766,-0.00602143) , 
3, 0.242237, 1, 0, 0.158011,0.0348872) , 
1, 112.423, 1, 0, 0.147897,0.0150275) , 
6, 131.272, 1, 0, 0.498223,0.071804)    );
  // itree = 655
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649303,0.000980436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.505693,2.63169e-05) , 
6, 108.259, 1, 0, 0.594629,0.0441802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.350976,-0.000942673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.618613,0.00173952) , 
2, 7.58432, 1, 0, 0.588076,0.107905) , 
4, 0.20182, 1, 0, 0.59132,0.0763566) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0773057,-4.26008e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157262,-3.53786e+29) , 
5, 156.317, 1, 0, 0.11863,-0.0789969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134383,2.5485e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.5439e+29) , 
8, 123.888, 1, 0, 0.0519397,0.0482721) , 
5, 265.99, 1, 0, 0.088005,-0.020553) , 
6, 173.918, 1, 0, 0.513636,0.0613991)    );
  // itree = 656
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667871,0.00029709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596783,0.00160763) , 
3, 0.161491, 1, 0, 0.630225,0.0773123) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648326,0.00733933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.49512e+29) , 
7, 430.859, 1, 0, 0.532732,0.257725) , 
0, 332.525, 1, 0, 0.609178,0.11626) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215234,-0.395247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.84358e+29) , 
7, 288.089, 1, 0, 0.0651305,-0.042112) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.090389,1.8685e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.31424e+29) , 
2, 11.9778, 1, 0, 0.0335941,0.0292699) , 
1, 232.912, 1, 0, 0.050186,-0.00828563) , 
6, 158.802, 1, 0, 0.509503,0.0940522)    );
  // itree = 657
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706772,0.00191599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.73828e+19) , 
7, 237.361, 1, 0, 0.439216,0.0954243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447401,-3.74933e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604972,0.0900547) , 
1, 189.797, 1, 0, 0.547702,0.367845) , 
3, 0.403729, 1, 0, 0.468906,0.16998) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768663,0.000911646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499349,-0.000459734) , 
8, 91.7106, 1, 0, 0.712178,0.061552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244591,0.366315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0652404,-3.14344) , 
9, 0.925543, 1, 0, 0.0857665,-0.0124708) , 
8, 119.512, 1, 0, 0.496198,0.0360298) , 
9, 0.913174, 1, 0, 0.488303,0.0747788)    );
  // itree = 658
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602843,0.00128514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.23443e+29) , 
7, 378.735, 1, 0, 0.505693,0.070391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.550864,0.01161) , 
4, 0.767071, 1, 0, 0.507686,0.0797251) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643643,0.0168308) , 
2, 41.7723, 1, 0, 0.513026,0.0883227)    );
  // itree = 659
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.555344,0.000546842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610469,0.00147317) , 
3, 0.444102, 1, 0, 0.567033,0.0555533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766405,0.00126096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490293,8.98427e+30) , 
8, 165.494, 1, 0, 0.743465,0.142366) , 
9, 0.985062, 1, 0, 0.640234,0.0915719) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.155312,-0.00870225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.11794e+29) , 
7, 306.568, 1, 0, 0.0404834,-0.0214168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156502,0.0203224) , 
3, 0.484368, 1, 0, 0.0652317,0.0100201) , 
1, 232.612, 1, 0, 0.516503,0.0740233)    );
  // itree = 660
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447234,0.00259139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711144,0.000504047) , 
0, 151.822, 1, 0, 0.658287,0.067436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503478,0.00224947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767613,0.00570042) , 
9, 0.963553, 1, 0, 0.67257,0.216751) , 
0, 350.807, 1, 0, 0.659968,0.0850097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215805,1.36707e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.05669e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.28216e+30) , 
9, 0.98516, 1, 0, 0,-0.0125515) , 
6, 90.8603, 1, 0, 0.0385486,-0.00284391) , 
7, 296.099, 1, 0, 0.4915,0.0611924)    );
  // itree = 661
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755159,0.00109819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0817703,-0.00245169) , 
7, 222.589, 1, 0, 0.573762,0.0789951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529089,0.0151431) , 
0, 473.728, 1, 0, 0.571101,0.0937759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.41848e+29) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.1802e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.21017e+29) , 
0, 618.919, 1, 0, 0,-0.00190694) , 
1, 236.083, 1, 0, 0,-0.00957251) , 
7, 406.917, 1, 0, 0.484098,0.0780315)    );
  // itree = 662
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.282438,-0.00309476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.523434,0.000524334) , 
2, 6.91508, 1, 0, 0.484562,0.017044) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.622832,0.00424543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538256,0.00202562) , 
9, 0.949191, 1, 0, 0.582033,0.225641) , 
4, 0.565211, 1, 0, 0.498924,0.0477795) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.641066,0.00126383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.499239,0.0185595) , 
0, 318.005, 1, 0, 0.594189,0.171687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.98725e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
1, 430.17, 1, 0, 0,-0.0109653) , 
8, 216.873, 1, 0, 0.511802,0.146361) , 
2, 10.9533, 1, 0, 0.506238,0.103775)    );
  // itree = 663
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750626,0.000857803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242147,-0.00235018) , 
8, 102.254, 1, 0, 0.713056,0.0660945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0480523,-3.37407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0916366,0.0185259) , 
0, 295.937, 1, 0, 0.0690413,-0.000752603) , 
8, 116.197, 1, 0, 0.490265,0.0429694) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708328,0.00513764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377086,0.00244023) , 
1, 172.59, 1, 0, 0.584846,0.317223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.519807,-0.000254428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561077,0.00345239) , 
3, 0.201789, 1, 0, 0.541077,0.0929812) , 
9, 0.941966, 1, 0, 0.562283,0.201625) , 
4, 0.565211, 1, 0, 0.501058,0.0667458)    );
  // itree = 664
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.297075,0.00135002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490441,-0.000185219) , 
0, 130.566, 1, 0, 0.443083,0.0101166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578441,0.00282941) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410376,0.000559513) , 
3, 0.161491, 1, 0, 0.493447,0.0720387) , 
0, 246.97, 1, 0, 0.470656,0.0440181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606394,0.0179902) , 
2, 41.7723, 1, 0, 0.475814,0.054479)    );
  // itree = 665
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145647,-0.00490564) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24597,-0.00379946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532601,0.000476476) , 
2, 6.91508, 1, 0, 0.488066,0.0110506) , 
1, 109.274, 1, 0, 0.448635,-0.00607206) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661173,0.00162823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.518821,3.15826) , 
8, 87.2026, 1, 0, 0.61874,0.263284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503451,0.00297819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446173,0.000938863) , 
9, 0.92039, 1, 0, 0.466681,0.0764195) , 
1, 111.849, 1, 0, 0.502843,0.120858) , 
2, 10.9533, 1, 0, 0.480498,0.0685377)    );
  // itree = 666
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22222,-0.00587851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.67984) , 
5, 157.788, 1, 0, 0.113399,-0.0621041) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.682514,0.00505378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297816,0.00254629) , 
3, 0.158777, 1, 0, 0.530434,0.268337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657907,0.00179902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.49797e+29) , 
7, 357.74, 1, 0, 0.544353,0.0963961) , 
9, 0.888615, 1, 0, 0.543143,0.111343) , 
9, 0.870057, 1, 0, 0.519226,0.10169)    );
  // itree = 667
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616677,0.000431378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.381978,0.00553794) , 
6, 118.801, 1, 0, 0.516919,0.0732351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.271085,-0.00853477) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460096,8.9261e-05) , 
3, 0.271336, 1, 0, 0.444252,-0.00461806) , 
3, 0.242233, 1, 0, 0.490202,0.0446109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390388,1.61453) , 
4, 0.767071, 1, 0, 0.486891,0.0529984)    );
  // itree = 668
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642397,0.00104314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0400759,-2.57307e+29) , 
8, 152.035, 1, 0, 0.493856,0.0544871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.489256,-0.00276148) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423981,-0.00518992) , 
9, 0.942278, 1, 0, 0.455276,-0.0734189) , 
4, 0.686327, 1, 0, 0.491024,0.0450977) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.369334,-0.000751308) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.500769,0.00204567) , 
2, 10.8233, 1, 0, 0.451351,0.0601695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.798235,0.00300531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.361936,0.00297302) , 
3, 0.551942, 1, 0, 0.675952,0.300584) , 
4, 0.36335, 1, 0, 0.538133,0.153062) , 
3, 0.403729, 1, 0, 0.502166,0.0706342)    );
  // itree = 669
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.512736,0.00249067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609017,0.00105941) , 
9, 0.905985, 1, 0, 0.587067,0.0836066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.681152,0.00348895) , 
2, 26.5574, 1, 0, 0.592663,0.0959064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142998,2.3369e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0813399,-9.69908e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.2042e+29) , 
0, 540.46, 1, 0, 0.0523477,-0.00434817) , 
1, 143.896, 1, 0, 0.0666708,0.016836) , 
5, 255.842, 1, 0, 0.505236,0.0827638)    );
  // itree = 670
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573155,0.00278497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-447.866) , 
8, 137.396, 1, 0, 0.4092,0.180798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527931,-3.09563e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538971,0.00194668) , 
0, 250.972, 1, 0, 0.53463,0.058885) , 
0, 129.803, 1, 0, 0.520705,0.0724195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627602,0.0120234) , 
2, 41.7723, 1, 0, 0.524442,0.0806759)    );
  // itree = 671
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706795,0.00110624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397676,-0.00168022) , 
8, 77.2767, 1, 0, 0.58748,0.0385542) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131852,-0.026006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446408,-0.000839457) , 
0, 203.193, 1, 0, 0.332475,-0.11911) , 
4, 0.201861, 1, 0, 0.486152,-0.0240945) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809548,0.000971479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475863,0.00937347) , 
8, 109.664, 1, 0, 0.704764,0.13974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0219476,-1.94129e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0645188,2.05816e+30) , 
5, 385.641, 1, 0, 0.0320445,0.000778708) , 
8, 150.664, 1, 0, 0.472299,0.0917206) , 
1, 145.429, 1, 0, 0.476854,0.0536355)    );
  // itree = 672
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488026,0.00106425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190081,5.40538e+30) , 
0, 622.201, 1, 0, 0.466929,0.0673921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693172,0.00376422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.543076,0.000789319) , 
2, 10.7562, 1, 0, 0.623649,0.157237) , 
9, 0.985097, 1, 0, 0.524214,0.100233) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.592181,-0.00552341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-19.6868) , 
7, 228.916, 1, 0, 0.295326,-0.100231) , 
4, 0.645955, 1, 0, 0.509684,0.0875071)    );
  // itree = 673
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650346,0.000640619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635529,0.00229774) , 
3, 0.403729, 1, 0, 0.647225,0.0788059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0914778,35.6245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481481,1124.46) , 
0, 306.369, 1, 0, 0.28903,0.230274) , 
8, 141.115, 1, 0, 0.587093,0.104234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.9503e+29) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.2929e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.15315e+29) , 
0, 522.523, 1, 0, 0,-0.00367125) , 
1, 312.996, 1, 0, 0,-0.00995941) , 
8, 202.273, 1, 0, 0.494521,0.0862277)    );
  // itree = 674
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487279,0.000160834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503519,0.00169028) , 
2, 14.3101, 1, 0, 0.492924,0.0338929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540168,0.00265903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479891,0.000646991) , 
4, 0.324999, 1, 0, 0.505986,0.0889158) , 
4, 0.201861, 1, 0, 0.499639,0.0621795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.61355,0.00913583) , 
2, 41.7723, 1, 0, 0.503871,0.0694754)    );
  // itree = 675
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283003,-0.00353026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529112,0.002028) , 
1, 100.595, 1, 0, 0.504743,0.0872014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428603,0.0092876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3892,0.00958509) , 
4, 0.201453, 1, 0, 0.408759,0.305421) , 
2, 26.3628, 1, 0, 0.49573,0.107692) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.532513,0.00217602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612634,0.000636689) , 
1, 118.564, 1, 0, 0.59844,0.0543025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615184,-0.00253484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.73954e+29) , 
7, 244.221, 1, 0, 0.369552,-0.0739207) , 
4, 0.402709, 1, 0, 0.562729,0.0342974) , 
9, 0.963525, 1, 0, 0.527618,0.0727603)    );
  // itree = 676
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707765,0.000914225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450852,0.0196117) , 
8, 127.198, 1, 0, 0.676712,0.0954361) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.105782,3.51707e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.029428,-1.93845e+30) , 
3, 0.161456, 1, 0, 0.0622484,0.0105415) , 
8, 152.035, 1, 0, 0.529885,0.0751504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670787,0.00548107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.189662,-0.00592431) , 
6, 107.062, 1, 0, 0.478256,0.195467) , 
4, 0.565211, 1, 0, 0.523874,0.0891591)    );
  // itree = 677
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.401905,-7.95149e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56308,0.00153332) , 
0, 234.832, 1, 0, 0.491274,0.0434737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551423,126.161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142797,0.0183334) , 
9, 0.884527, 1, 0, 0.24936,0.203529) , 
0, 490.328, 1, 0, 0.461296,0.0633078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510454,0.00589468) , 
3, 0.767085, 1, 0, 0.463369,0.0737132)    );
  // itree = 678
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725936,0.00285035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.1066) , 
8, 117.491, 1, 0, 0.493202,0.171023) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508621,0.000795691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503096,0.00225892) , 
4, 0.555536, 1, 0, 0.508249,0.0526953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.216447,-0.00748137) , 
4, 0.686327, 1, 0, 0.493469,0.0444929) , 
9, 0.870057, 1, 0, 0.493443,0.0565376)    );
  // itree = 679
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.44823,0.000968081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259004,-0.00271626) , 
9, 0.906, 1, 0, 0.386075,0.0195837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503139,0.00291731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60194,0.00575268) , 
3, 0.403729, 1, 0, 0.529391,0.168427) , 
2, 10.9533, 1, 0, 0.474422,0.111338) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643026,0.000773933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187947,-0.00169955) , 
6, 130.496, 1, 0, 0.524403,0.0355043) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389702,-0.105466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.0937e+29) , 
7, 239.145, 1, 0, 0.186529,-0.143943) , 
4, 0.484462, 1, 0, 0.488656,0.0165189) , 
9, 0.949144, 1, 0, 0.481912,0.0614453)    );
  // itree = 680
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505426,-1.2422e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195938,4.5983e+30) , 
8, 263.178, 1, 0, 0.474901,0.0184497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312747,0.000648626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561594,0.00320989) , 
9, 0.970724, 1, 0, 0.44247,0.138454) , 
0, 438.692, 1, 0, 0.470157,0.0360028) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681583,0.00139602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788274,0.00217263) , 
3, 0.444102, 1, 0, 0.70927,0.12679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-29.5829) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0968787,12.8608) , 
3, 0.121073, 1, 0, 0.0709883,0.00855193) , 
8, 119.673, 1, 0, 0.497541,0.0875683) , 
2, 10.9533, 1, 0, 0.485915,0.0656755)    );
  // itree = 681
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.221487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0991901,-0.000900785) , 
1, 155.155, 1, 0, 0.0480807,-0.0943142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745119,0.000932646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142968,-0.00472289) , 
5, 158.35, 1, 0, 0.607691,0.0505351) , 
0, 122.054, 1, 0, 0.566206,0.0397972) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696132,0.00886674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104835,2.0098e+30) , 
7, 392.468, 1, 0, 0.42768,0.281757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.50551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244654,0.012257) , 
4, 0.520996, 1, 0, 0.0776868,0.024075) , 
4, 0.161489, 1, 0, 0.252173,0.15254) , 
0, 420.7, 1, 0, 0.517253,0.0573723)    );
  // itree = 682
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628142,0.000864668) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623812,0.00428738) , 
0, 315.312, 1, 0, 0.62715,0.0940487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0293238,-1.46788e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204758,1.79396e+30) , 
9, 0.992351, 1, 0, 0.0640513,0.00305228) , 
5, 252.611, 1, 0, 0.538758,0.0797645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.241161,-0.0116432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.574538,0.000198849) , 
2, 15.0228, 1, 0, 0.390484,-0.048749) , 
3, 0.645966, 1, 0, 0.528614,0.0709725)    );
  // itree = 683
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.309506,-0.005123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566195,0.000125865) , 
1, 94.2346, 1, 0, 0.423609,-0.0764773) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463337,-0.000308425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446579,0.00193504) , 
4, 0.201859, 1, 0, 0.455207,0.0360837) , 
1, 109.773, 1, 0, 0.449801,0.0168268) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50915,0.0194712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.460634,0.00208607) , 
3, 0.232721, 1, 0, 0.466719,0.144289) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785574,0.000843681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.43834) , 
8, 117.141, 1, 0, 0.569714,0.0374943) , 
9, 0.963494, 1, 0, 0.518122,0.090989) , 
3, 0.201864, 1, 0, 0.484448,0.0544354)    );
  // itree = 684
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522068,0.00227651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.487181,-0.000331763) , 
9, 0.891619, 1, 0, 0.494242,0.0178021) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.401666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52757,0.00194022) , 
9, 0.870057, 1, 0, 0.499727,0.0913031) , 
4, 0.121117, 1, 0, 0.498495,0.0747887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57634,-0.00244219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0960817,-3.79423e+29) , 
7, 242.902, 1, 0, 0.337287,-0.0556383) , 
3, 0.645966, 1, 0, 0.487342,0.0657652)    );
  // itree = 685
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121367,-0.0114354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590884,-0.000287544) , 
4, 0.134246, 1, 0, 0.45281,-0.0761595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485037,0.00052314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.375109,0.00919058) , 
2, 26.5574, 1, 0, 0.476577,0.0380896) , 
1, 118.564, 1, 0, 0.471661,0.0144557) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.647192,0.00166122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.582899,0.0674818) , 
0, 368.462, 1, 0, 0.640666,0.156779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.4671e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.34795e+29) , 
0, 586.2, 1, 0, 0,-0.00961847) , 
7, 340.847, 1, 0, 0.513213,0.123676) , 
4, 0.201861, 1, 0, 0.49349,0.071835)    );
  // itree = 686
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576901,-0.000927313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835076,0.00123906) , 
5, 99.9787, 1, 0, 0.763011,0.0618784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0955172,-9.36377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.29448e+30) , 
7, 286.649, 1, 0, 0.031381,-0.0472508) , 
7, 216.163, 1, 0, 0.466808,0.0176971) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4719,-4.84955e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.227515,4.34454e+30) , 
7, 313.235, 1, 0, 0.432146,0.0289982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.635783,0.00281424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.01018e+29) , 
7, 392.991, 1, 0, 0.488273,0.116819) , 
1, 143.896, 1, 0, 0.471964,0.0913008) , 
3, 0.121119, 1, 0, 0.470499,0.070385)    );
  // itree = 687
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502113,0.000287261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4964,0.00136193) , 
4, 0.13719, 1, 0, 0.498805,0.049873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619463,0.00217133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8678.62) , 
6, 158.954, 1, 0, 0.515931,0.13615) , 
4, 0.288132, 1, 0, 0.503584,0.073947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.376241,-0.0501607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.402472,0.000817814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504046,-0.0194811) , 
4, 0.744046, 1, 0, 0.454282,-0.00237357) , 
6, 109.33, 1, 0, 0.426185,-0.0592615) , 
4, 0.605583, 1, 0, 0.496252,0.0613274)    );
  // itree = 688
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.83187,0.0018047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23591,0.00219262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.336676,0.0159609) , 
3, 0.403729, 1, 0, 0.261496,0.0711855) , 
7, 181.92, 1, 0, 0.495107,0.13233) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281003,-0.0018503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682113,0.00041382) , 
0, 188.654, 1, 0, 0.5727,0.00211903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651022,0.00411053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.07148e+29) , 
7, 380.078, 1, 0, 0.411123,0.120117) , 
0, 328.018, 1, 0, 0.526672,0.0357325) , 
9, 0.913191, 1, 0, 0.517818,0.0628298)    );
  // itree = 689
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57084,-8.06527e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161885,-0.00661384) , 
4, 0.282439, 1, 0, 0.485783,-0.0309481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661176,0.00265194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146932,-0.0075674) , 
6, 121.765, 1, 0, 0.441654,0.0922373) , 
6, 99.2878, 1, 0, 0.462732,0.0333995) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.660689,0.00170017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481218,0.0470707) , 
0, 321.896, 1, 0, 0.632523,0.152996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383086,-10.8955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3868.46) , 
1, 144.211, 1, 0, 0.126673,-0.024667) , 
0, 421.425, 1, 0, 0.560721,0.127778) , 
2, 10.9533, 1, 0, 0.522476,0.0909427)    );
  // itree = 690
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162584,-0.109353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433561,-0.000375236) , 
1, 84.172, 1, 0, 0.339905,-0.097183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716611,0.00126783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0379529,-2.02901e+30) , 
7, 293.984, 1, 0, 0.512902,0.0546913) , 
1, 116.668, 1, 0, 0.484781,0.0300039) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.756579,0.00818037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637564,0.00218583) , 
9, 0.963501, 1, 0, 0.708026,0.42059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.284079,-0.00278377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.609127,0.00161751) , 
2, 11.1695, 1, 0, 0.503774,0.0447357) , 
3, 0.488538, 1, 0, 0.572495,0.171192) , 
3, 0.403729, 1, 0, 0.507729,0.0669423)    );
  // itree = 691
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433679,-0.000248798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.666765,0.0013104) , 
0, 196.106, 1, 0, 0.594164,0.0579861) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37421,0.00719143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154128,-0.00295512) , 
4, 0.0807436, 1, 0, 0.175779,-0.010938) , 
6, 128.796, 1, 0, 0.468013,0.0372042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.558908,0.536408) , 
2, 41.7723, 1, 0, 0.470981,0.0462434)    );
  // itree = 692
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807278,0.000741887) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.578985,0.00424287) , 
0, 337.08, 1, 0, 0.774336,0.0874498) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205664,-0.00382675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313829,0.00407497) , 
0, 371.803, 1, 0, 0.245021,-0.0197261) , 
8, 101.312, 1, 0, 0.542426,0.0404925) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269888,-0.000857078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670999,0.00488332) , 
9, 0.920363, 1, 0, 0.592047,0.23763) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.435869,0.00688192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448126,0.000624468) , 
9, 0.891637, 1, 0, 0.445777,0.0760817) , 
4, 0.226859, 1, 0, 0.496402,0.131995) , 
4, 0.161489, 1, 0, 0.514961,0.0950959)    );
  // itree = 693
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464895,0.000821799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568468,0.00382575) , 
3, 0.138332, 1, 0, 0.528661,0.174137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259872,-0.00560672) , 
3, 0.484474, 1, 0, 0.496188,0.144661) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268356,-0.00103284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561867,0.000593956) , 
0, 181.652, 1, 0, 0.508997,0.0211314) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.520921,-0.00111964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713983,0.00451925) , 
2, 13.1443, 1, 0, 0.630044,0.131866) , 
3, 0.645966, 1, 0, 0.522335,0.0333328) , 
9, 0.913218, 1, 0, 0.515047,0.0643629)    );
  // itree = 694
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109992,-0.00880725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.743044,0.000489503) , 
0, 170.862, 1, 0, 0.68185,0.0165705) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670216,0.00157576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635182,-0.00107132) , 
4, 0.651724, 1, 0, 0.665676,0.102428) , 
4, 0.161489, 1, 0, 0.671673,0.0705941) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.72138e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0460495,-6.00265e+29) , 
1, 152.203, 1, 0, 0.0342096,-0.0345841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.78048e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.49723e+29) , 
3, 0.121092, 1, 0, 0,-0.00928654) , 
1, 287.8, 1, 0, 0.0137486,-0.0194535) , 
8, 148.72, 1, 0, 0.514347,0.0490615)    );
  // itree = 695
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.529839,0.0010491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438666,-0.00210564) , 
1, 117.037, 1, 0, 0.500764,0.038478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601966,0.00384076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708111,0.000725984) , 
9, 0.970563, 1, 0, 0.647894,0.160506) , 
2, 11.1695, 1, 0, 0.592207,0.11432) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553362,0.000967462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25247,0.022913) , 
0, 427.877, 1, 0, 0.498098,0.0751529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240576,-0.00150017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477988,0.000691554) , 
0, 268.088, 1, 0, 0.397165,-0.00105697) , 
3, 0.28261, 1, 0, 0.466548,0.0513316) , 
1, 144.211, 1, 0, 0.513307,0.0747701)    );
  // itree = 696
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211141,-0.175796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.348585) , 
9, 0.942023, 1, 0, 0.104506,-0.21516) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739133,0.000760723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169484,-0.960326) , 
7, 194.713, 1, 0, 0.575838,0.0406732) , 
1, 83.996, 1, 0, 0.447139,-0.0291831) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663184,0.00140877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31113,1.50786e+31) , 
8, 149.504, 1, 0, 0.618355,0.117114) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.14503e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134605,2.2264e+30) , 
4, 0.565211, 1, 0, 0.0189556,0.00881723) , 
8, 180.079, 1, 0, 0.476389,0.0914645) , 
1, 117.03, 1, 0, 0.470361,0.0666011)    );
  // itree = 697
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527053,-0.000757624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.721177,0.00120912) , 
2, 9.09905, 1, 0, 0.685075,0.0724709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737345,0.00349433) , 
1, 180.695, 1, 0, 0.692461,0.0921457) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2888,49.1177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-17.4056) , 
4, 0.161456, 1, 0, 0.128913,0.0547666) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109792,-0.0158186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0585297,1.45548e+30) , 
6, 227.241, 1, 0, 0.100335,-0.0543821) , 
9, 0.884444, 1, 0, 0.105137,-0.0360386) , 
8, 113.863, 1, 0, 0.467955,0.0431471)    );
  // itree = 698
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.230385,-0.00720435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619884,6.76361e-05) , 
9, 0.970703, 1, 0, 0.452085,-0.0674424) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724878,0.000808463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770599,0.00343571) , 
2, 18.4415, 1, 0, 0.736339,0.0890868) , 
8, 73.1057, 1, 0, 0.675144,0.0553887) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170912,-22.7644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0458046,-5.09692e+29) , 
8, 212.085, 1, 0, 0.117703,-0.0708227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.361988,10.7603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0319243,-869.494) , 
1, 231.506, 1, 0, 0.173464,0.0327253) , 
4, 0.201861, 1, 0, 0.146894,-0.0166148) , 
8, 119.41, 1, 0, 0.47427,0.0280084)    );
  // itree = 699
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.427402,0.00227383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150712,-0.246768) , 
8, 55.7572, 1, 0, 0.319873,-0.0301485) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778986,0.00112102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.325482,0.0217377) , 
6, 144.647, 1, 0, 0.70966,0.114957) , 
1, 94.814, 1, 0, 0.669658,0.100066) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0881404,-5.59372e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165952,-1.35973e+30) , 
8, 192.416, 1, 0, 0.130113,-0.135521) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.86961e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187997,7.01342e+30) , 
9, 0.985073, 1, 0, 0.0621941,0.0236406) , 
1, 234.069, 1, 0, 0.0811034,-0.0206716) , 
8, 148.72, 1, 0, 0.516024,0.0685487)    );
  // itree = 700
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639594,0.00376928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-64.4852) , 
8, 114.416, 1, 0, 0.403476,0.180073) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114081,-0.00700552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573767,0.00107723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0377357,-2.23532e+30) , 
1, 348.478, 1, 0, 0.513563,0.0486082) , 
9, 0.882452, 1, 0, 0.498297,0.0428079) , 
9, 0.870057, 1, 0, 0.490248,0.0544593)    );
  // itree = 701
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63213,0.00100476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.12218e+29) , 
1, 286.643, 1, 0, 0.546114,0.0509952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693968,0.00389187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.458402,0.0014783) , 
1, 120.684, 1, 0, 0.541489,0.165662) , 
4, 0.17299, 1, 0, 0.544862,0.0820392) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.155449,-0.0102326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.493897,9.68921e-05) , 
0, 182.299, 1, 0, 0.427839,-0.0236081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.56358,0.00540567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444303,0.000811846) , 
3, 0.232738, 1, 0, 0.462129,0.0697218) , 
3, 0.201864, 1, 0, 0.444924,0.0228931) , 
4, 0.242233, 1, 0, 0.506138,0.0591215)    );
  // itree = 702
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424785,-0.0015006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696956,0.00423416) , 
1, 120.778, 1, 0, 0.61891,0.187472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705697,0.000636709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685108,0.00184393) , 
4, 0.36335, 1, 0, 0.700254,0.0736788) , 
9, 0.891608, 1, 0, 0.687048,0.0921521) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116694,-3.24901) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0980192,4514.31) , 
7, 242.42, 1, 0, 0.102734,-0.045901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.57823e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258334,4.12151e+30) , 
9, 0.992293, 1, 0, 0.0571757,0.032591) , 
6, 173.918, 1, 0, 0.0876634,-0.0199365) , 
8, 116.197, 1, 0, 0.466713,0.0509482)    );
  // itree = 703
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22951,-0.00189473) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.58548,0.000801148) , 
0, 198.178, 1, 0, 0.503182,0.0169057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241858,5.43296e+30) , 
0, 680.083, 1, 0, 0.488364,0.0284668) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625043,0.0017402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713112,0.0058921) , 
2, 20.3854, 1, 0, 0.644683,0.18208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110362,-2.20565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.04264e+29) , 
7, 335.614, 1, 0, 0.0393214,-0.0417892) , 
1, 207.67, 1, 0, 0.491078,0.125275) , 
4, 0.282605, 1, 0, 0.489327,0.0628015)    );
  // itree = 704
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.616857,0.00143424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.804522,0.000633532) , 
1, 104.64, 1, 0, 0.764698,0.0821107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779688,0.00433597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.75966,0.00146281) , 
4, 0.201453, 1, 0, 0.769839,0.206386) , 
2, 14.7226, 1, 0, 0.7665,0.125682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.286114,2.66911) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.193074,0.0044422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354296,-0.0191981) , 
2, 10.9533, 1, 0, 0.111234,-0.000230369) , 
1, 118.564, 1, 0, 0.132842,0.0246821) , 
8, 105.099, 1, 0, 0.526399,0.0874118)    );
  // itree = 705
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308136,0.00245279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236014,-0.00388422) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.497245,0.00181749) , 
2, 15.8019, 1, 0, 0.292796,-0.06313) , 
0, 96.2301, 1, 0, 0.296714,-0.0195268) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567454,0.00108774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473443,0.00753387) , 
2, 15.5469, 1, 0, 0.544605,0.100327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.166503,-0.288779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459321,-0.000414462) , 
9, 0.969942, 1, 0, 0.288264,-0.0484548) , 
2, 26.5574, 1, 0, 0.523204,0.0879062) , 
0, 181.376, 1, 0, 0.476865,0.0659258)    );
  // itree = 706
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208104,-0.326203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.56864,0.00119659) , 
2, 6.15179, 1, 0, 0.549823,0.0662471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541685,0.00905472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.66554,0.00248359) , 
9, 0.906037, 1, 0, 0.641071,0.163129) , 
2, 14.7226, 1, 0, 0.577003,0.0951057) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0916023,1.56598e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.46446e+30) , 
2, 10.9533, 1, 0, 0.0237973,0.00121182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11655,-1.57437e+30) , 
9, 0.992291, 1, 0, 0.041246,-0.0142731) , 
6, 173.918, 1, 0, 0.495853,0.0785383)    );
  // itree = 707
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706403,0.00197612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352318,0.0252606) , 
7, 189.5, 1, 0, 0.599562,0.21828) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.787289,0.00103176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.688632,0.00317612) , 
1, 193.223, 1, 0, 0.779757,0.101191) , 
1, 94.3959, 1, 0, 0.750574,0.120154) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734608,-7.94184) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.099121,1.66271e+30) , 
6, 239.443, 1, 0, 0.0781314,-0.0248252) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497404,45.5134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0903829,0.000275133) , 
3, 0.232712, 1, 0, 0.168854,0.0704167) , 
3, 0.20182, 1, 0, 0.124299,0.0236421) , 
8, 116.197, 1, 0, 0.542217,0.0880452)    );
  // itree = 708
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53952,0.00258658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685184,0.00112381) , 
1, 94.3352, 1, 0, 0.662511,0.106862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421944,8.65525e+30) , 
6, 268.535, 1, 0, 0.65245,0.119755) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.35292e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0888122,-1.04606e+30) , 
8, 175.504, 1, 0, 0.0510772,-0.116769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0214868,-1.4861e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.60017e+30) , 
0, 584.338, 1, 0, 0.0167094,-0.0253578) , 
7, 312.763, 1, 0, 0.0261711,-0.0505239) , 
8, 148.72, 1, 0, 0.494624,0.076844)    );
  // itree = 709
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.487381,0.000202199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.620842,0.00191722) , 
4, 0.140931, 1, 0, 0.500924,0.030427) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607566,0.00248155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.71952e+29) , 
8, 202.273, 1, 0, 0.51348,0.127767) , 
4, 0.148013, 1, 0, 0.508412,0.088478) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225516,-0.00877257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.46766,-0.000752065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206079,0.0295966) , 
2, 16.0819, 1, 0, 0.410406,0.0143574) , 
1, 117.962, 1, 0, 0.376975,-0.0185862) , 
4, 0.44409, 1, 0, 0.486483,0.070615)    );
  // itree = 710
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.390255,0.00602751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570703,0.00015567) , 
9, 0.877231, 1, 0, 0.553363,0.028036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.808653,0.00208029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700719,0.0256773) , 
1, 233.66, 1, 0, 0.792409,0.197456) , 
0, 255.961, 1, 0, 0.669022,0.110008) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0393034,-1.26773e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.38813e+30) , 
0, 560.063, 1, 0, 0.0296073,-0.0330449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.95564e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.76234e+29) , 
1, 327.335, 1, 0, 0,-0.007873) , 
8, 205.575, 1, 0, 0.0133383,-0.0192131) , 
7, 291.925, 1, 0, 0.493596,0.0754351)    );
  // itree = 711
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.80564,0.000535079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.857351,0.0013226) , 
3, 0.44409, 1, 0, 0.81879,0.0754185) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52328,0.00977975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541978,0.00230095) , 
9, 0.949116, 1, 0, 0.533051,0.235863) , 
5, 133.652, 1, 0, 0.720664,0.130517) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.275508,762.673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123263,1.40297) , 
3, 0.161, 1, 0, 0.198287,0.121963) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.054439,-13.7289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127788,0.00643079) , 
4, 0.282605, 1, 0, 0.0816253,-0.00063267) , 
1, 146.723, 1, 0, 0.0994311,0.0180787) , 
8, 116.197, 1, 0, 0.506472,0.0917499)    );
  // itree = 712
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656617,0.00286539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691139,0.000239142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.734253,0.00144412) , 
3, 0.28261, 1, 0, 0.706601,0.0547647) , 
9, 0.870042, 1, 0, 0.702174,0.0729189) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.284831,-17.5896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106007,-16.9399) , 
9, 0.935002, 1, 0, 0.190085,-0.140578) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0736548,-20.2508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0954692,5.30447) , 
3, 0.20182, 1, 0, 0.0846494,-0.00362332) , 
1, 146.723, 1, 0, 0.101344,-0.0253082) , 
8, 119.41, 1, 0, 0.49097,0.03839)    );
  // itree = 713
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476076,-0.000225019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629965,0.00132984) , 
0, 237.303, 1, 0, 0.536227,0.0278497) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484048,0.116786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257231,0.00798872) , 
1, 115.45, 1, 0, 0.298371,0.123947) , 
0, 330.177, 1, 0, 0.474472,0.0527995) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.546886,0.00300758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377049,-0.00105967) , 
9, 0.941906, 1, 0, 0.465831,0.0774102) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73573,0.00533916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484722,0.00296078) , 
3, 0.551942, 1, 0, 0.632202,0.309376) , 
4, 0.282605, 1, 0, 0.540915,0.182098) , 
3, 0.403729, 1, 0, 0.491498,0.0859311)    );
  // itree = 714
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807798,0.00116387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218473,-0.00443776) , 
8, 97.5877, 1, 0, 0.651018,0.0782921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.806233,0.00211267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630738,0.0232413) , 
2, 12.3491, 1, 0, 0.751642,0.220571) , 
0, 310.957, 1, 0, 0.676159,0.113841) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.10962e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.24184e+29) , 
1, 283.206, 1, 0, 0,-0.0108217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.30545e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.7785e+29) , 
4, 0.201231, 1, 0, 0,-0.0377726) , 
0, 561.533, 1, 0, 0,-0.0180666) , 
7, 319.588, 1, 0, 0.533471,0.0860047)    );
  // itree = 715
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.708258,0.000903055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151343,0.000793544) , 
5, 142.874, 1, 0, 0.499416,0.0453341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.505668,-0.00780428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.390568,-0.00286186) , 
9, 0.941969, 1, 0, 0.448751,-0.0657298) , 
4, 0.686327, 1, 0, 0.496064,0.0379865) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.376282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568039,0.000841301) , 
9, 0.963555, 1, 0, 0.367878,-0.00363224) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.60663,0.00888325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.570377,0.00402627) , 
9, 0.913225, 1, 0, 0.581002,0.253335) , 
2, 10.8233, 1, 0, 0.504253,0.160797) , 
3, 0.403722, 1, 0, 0.497909,0.0656518)    );
  // itree = 716
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.553211,0.00122158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0266814,-1.59616e+30) , 
1, 286.343, 1, 0, 0.462392,0.0535277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658184,0.00606828) , 
4, 0.547262, 1, 0, 0.474427,0.0731188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322005,-0.0234829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457306,-0.0102135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495257,-0.000150909) , 
9, 0.956343, 1, 0, 0.47613,-0.0180312) , 
0, 251.324, 1, 0, 0.411166,-0.0816088) , 
4, 0.605583, 1, 0, 0.468324,0.0581914)    );
  // itree = 717
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.603727,0.00143301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0919157,-0.135656) , 
7, 176.296, 1, 0, 0.317863,0.0408128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224578,-0.000447506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.411204) , 
0, 123.299, 1, 0, 0.1122,-0.143482) , 
9, 0.941929, 1, 0, 0.216782,-0.0497659) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372441,-0.000945917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.421297,0.0016992) , 
3, 0.444102, 1, 0, 0.383639,0.00205937) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597253,0.00303644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.571803,0.00125186) , 
1, 108.958, 1, 0, 0.575708,0.100331) , 
9, 0.941992, 1, 0, 0.508636,0.0660135) , 
0, 182.102, 1, 0, 0.452381,0.0436972)    );
  // itree = 718
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.371351,0.00211176) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0437707,-0.0380957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0888493,2.27737e+30) , 
7, 272.519, 1, 0, 0.0609985,-0.105947) , 
8, 72.0279, 1, 0, 0.122706,-0.0556871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.511786,0.00315628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611704,0.000918843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.355748,0.00635606) , 
0, 320.041, 1, 0, 0.516109,0.0863486) , 
9, 0.862863, 1, 0, 0.515859,0.0981314) , 
0, 165.184, 1, 0, 0.459639,0.076136)    );
  // itree = 719
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.565245,0.000921393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.301323,18.0155) , 
0, 384.434, 1, 0, 0.520942,0.0870352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184851,-0.0140835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439911,0.000124808) , 
1, 116.668, 1, 0, 0.401585,-0.0207015) , 
3, 0.148013, 1, 0, 0.46252,0.0343013) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151309,-0.0201747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.49457,0.000256444) , 
9, 0.96349, 1, 0, 0.346085,-0.0279911) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796564,0.00351821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295429,0.000788585) , 
3, 0.559563, 1, 0, 0.615041,0.263612) , 
4, 0.282548, 1, 0, 0.477005,0.113953) , 
3, 0.444102, 1, 0, 0.465529,0.0508467)    );
  // itree = 720
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703646,0.00133374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.467466,-0.000143858) , 
6, 112.269, 1, 0, 0.633391,0.0755184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757565,0.0017054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.800058,0.0079969) , 
3, 0.201861, 1, 0, 0.77943,0.266326) , 
2, 14.7226, 1, 0, 0.67702,0.132522) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.358803,6.35444e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0471129,-6.76714e+29) , 
6, 109.719, 1, 0, 0.147923,0.0702555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0749392,-1.99704e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.9143e+28) , 
8, 275.861, 1, 0, 0.0421415,-0.0196184) , 
8, 152.196, 1, 0, 0.0883226,0.0196179) , 
5, 181.22, 1, 0, 0.525395,0.103442)    );
  // itree = 721
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608984,0.0013874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.209912,-0.00491581) , 
8, 93.1491, 1, 0, 0.397038,0.010468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.779036,0.00187624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.30012e+30) , 
5, 246.755, 1, 0, 0.694039,0.111935) , 
0, 194.984, 1, 0, 0.618707,0.0861989) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164588,-8954.38) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104918,-5.3673e+29) , 
5, 187.633, 1, 0, 0.127303,-0.0365639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119025,1.58434e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.70492e+10) , 
4, 0.328679, 1, 0, 0.0404014,0.0151374) , 
4, 0.242184, 1, 0, 0.091741,-0.0154065) , 
6, 157.783, 1, 0, 0.520115,0.0671891)    );
  // itree = 722
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810577,0.00121147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.330839,0.00108726) , 
8, 91.2308, 1, 0, 0.600931,0.0710301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502379,1.03264e+31) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.19124e+29) , 
5, 146.331, 1, 0, 0.24998,0.227494) , 
6, 164.083, 1, 0, 0.575928,0.0821771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.3341e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0699062,-6.3892e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
1, 298.376, 1, 0, 0.0419229,-0.010398) , 
5, 153.203, 1, 0, 0.0323465,-0.0247749) , 
6, 197.836, 1, 0, 0.514908,0.0701711)    );
  // itree = 723
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768707,0.00183662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.853435,0.00215869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686755,0.00100743) , 
6, 62.0552, 1, 0, 0.711936,0.091282) , 
7, 136.288, 1, 0, 0.719878,0.115427) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145696,-51.3053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0595229,3.91073e+30) , 
7, 300.485, 1, 0, 0.102853,-0.0525637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212443,4640.47) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.00236e+29) , 
4, 0.242233, 1, 0, 0.132418,0.0906098) , 
0, 362.561, 1, 0, 0.113693,-7.11986e-05) , 
8, 116.197, 1, 0, 0.505914,0.0746597)    );
  // itree = 724
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488991,0.000787561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0712537,-0.0232768) , 
3, 0.338316, 1, 0, 0.463822,0.0294394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675127,0.00149302) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.51627e+29) , 
7, 319.588, 1, 0, 0.517477,0.104542) , 
3, 0.444094, 1, 0, 0.475759,0.0461474) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.31304,-0.000940042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.265084,-0.0544999) , 
4, 0.744046, 1, 0, 0.290803,-0.0911441) , 
4, 0.605583, 1, 0, 0.460332,0.0346961)    );
  // itree = 725
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761935,0.00102418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.799394,0.00295112) , 
2, 18.3291, 1, 0, 0.771016,0.117431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151391,-0.00708348) , 
8, 97.434, 1, 0, 0.731382,0.0999132) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0206553,-3.67764) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.14248,-0.000573665) , 
0, 293.931, 1, 0, 0.0799886,-0.061137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.219498,-3.50988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469862,0.0043516) , 
4, 0.362615, 1, 0, 0.301498,0.0607933) , 
3, 0.40364, 1, 0, 0.142728,-0.0266018) , 
8, 110.548, 1, 0, 0.511523,0.0526606)    );
  // itree = 726
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769967,0.00104806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764467,0.00273722) , 
3, 0.444102, 1, 0, 0.769049,0.113174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-62.8952) , 
7, 227.093, 1, 0, 0.738936,0.100781) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.29393,5.88267e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14007,4.16598e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0738488,-4.2936e+30) , 
9, 0.884532, 1, 0, 0.0852546,-0.000580506) , 
1, 113.957, 1, 0, 0.112622,0.0227447) , 
7, 244.583, 1, 0, 0.512955,0.0726245)    );
  // itree = 727
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545698,0.00158749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.410781,-0.000489417) , 
4, 0.282605, 1, 0, 0.504485,0.0563889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4785,0.00186166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684339,0.0052132) , 
4, 0.363276, 1, 0, 0.553874,0.181376) , 
3, 0.403729, 1, 0, 0.516737,0.0873938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.53385,0.0989276) , 
2, 41.9453, 1, 0, 0.517281,0.0997051)    );
  // itree = 728
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760571,0.00184142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0464897,-1.10991e+30) , 
7, 237.112, 1, 0, 0.622246,0.117381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184465,-3.10286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.089374,-0.000177602) , 
1, 113.629, 1, 0, 0.105031,-0.0254354) , 
6, 138.81, 1, 0, 0.50385,0.0846885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.469868,41.0394) , 
2, 40.0416, 1, 0, 0.50282,0.094946)    );
  // itree = 729
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540801,-0.00115695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.795367,0.000676228) , 
9, 0.93485, 1, 0, 0.73849,0.0376668) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226218,-1.84399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0913489,-0.00204234) , 
1, 202.911, 1, 0, 0.14233,-0.0682461) , 
8, 101.812, 1, 0, 0.489008,-0.00665587) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723244,0.000815274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39347,0.0328113) , 
8, 109.645, 1, 0, 0.619566,0.12082) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.94211e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0479597,-9.10791e+29) , 
9, 0.884493, 1, 0, 0.0406183,-0.0163874) , 
7, 325.681, 1, 0, 0.473818,0.0862784) , 
3, 0.121119, 1, 0, 0.478227,0.0593011)    );
  // itree = 730
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497171,0.00131353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694338,0.00895006) , 
9, 0.869001, 1, 0, 0.603034,0.302093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690298,0.00180815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211424,-0.250203) , 
8, 99.0711, 1, 0, 0.462428,0.0699598) , 
4, 0.161456, 1, 0, 0.524197,0.171936) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52145,-0.000822438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614834,0.00209234) , 
3, 0.524838, 1, 0, 0.537875,-0.0108601) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.463332,0.00189197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489596,0.0361143) , 
2, 34.0676, 1, 0, 0.464695,0.0813977) , 
1, 143.896, 1, 0, 0.489767,0.0497894) , 
9, 0.884444, 1, 0, 0.49589,0.0715121)    );
  // itree = 731
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.608386,0.00147695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.298373,-0.000705285) , 
7, 151.726, 1, 0, 0.386031,0.025156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65003,0.00157453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645362,0.00298881) , 
4, 0.36335, 1, 0, 0.64879,0.125022) , 
0, 222.554, 1, 0, 0.557704,0.0904037) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0864779,-2.72939e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.40156e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.4683e+29) , 
1, 279.921, 1, 0, 0,-0.0198087) , 
1, 144.211, 1, 0, 0.0224742,-0.0405036) , 
6, 173.918, 1, 0, 0.471358,0.0692849)    );
  // itree = 732
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656492,0.000394449) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623588,0.0019387) , 
4, 0.121117, 1, 0, 0.631293,0.108529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.648833,0.0172917) , 
6, 133.187, 1, 0, 0.632139,0.121402) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269243,0.0113811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.328292,-0.00319193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.023054,1.31172e+30) , 
7, 304.688, 1, 0, 0.127196,-0.0203046) , 
0, 168.101, 1, 0, 0.148028,0.00939558) , 
6, 138.81, 1, 0, 0.51373,0.0940059)    );
  // itree = 733
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.648868,0.000346627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584752,0.00344558) , 
0, 290.615, 1, 0, 0.633189,0.058046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276397,-2.01855e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121246,-1.85126) , 
3, 0.0807064, 1, 0, 0.173256,-0.0474261) , 
6, 130.496, 1, 0, 0.50288,0.0281636) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697987,0.00152696) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.59673,0.054508) , 
1, 222.339, 1, 0, 0.688431,0.135265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138229,6.20978e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.7717e+29) , 
7, 413.808, 1, 0, 0.0746421,0.038997) , 
8, 148.72, 1, 0, 0.533053,0.110895) , 
3, 0.121119, 1, 0, 0.524933,0.0886319)    );
  // itree = 734
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.699774,0.00262994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.764615,0.00142896) , 
1, 68.8506, 1, 0, 0.758867,0.143019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283669,-0.295602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54377,0.00163668) , 
1, 171.357, 1, 0, 0.429501,-0.0141738) , 
8, 97.6187, 1, 0, 0.717614,0.12333) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121037,-1.35538e+13) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283,-1.57802e+30) , 
7, 300.482, 1, 0, 0.192468,-0.193857) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.192973,1715.38) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0672662,-1.04542e+27) , 
6, 130.279, 1, 0, 0.132671,0.0418685) , 
1, 145.429, 1, 0, 0.141894,0.00551063) , 
8, 116.197, 1, 0, 0.508906,0.0806189)    );
  // itree = 735
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8403,0.00153608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.346801,-0.00368248) , 
8, 103.214, 1, 0, 0.793743,0.111197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822547,0.00248658) , 
3, 0.403729, 1, 0, 0.800656,0.148534) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-22.6738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155104,0.182643) , 
0, 205.585, 1, 0, 0.0869632,-0.0422141) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12781,10.658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.348387,71.2352) , 
9, 0.992354, 1, 0, 0.176613,0.0945855) , 
0, 329.399, 1, 0, 0.129965,0.023404) , 
7, 202.98, 1, 0, 0.491682,0.0908891)    );
  // itree = 736
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0872147,-0.00457788) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639228,0.00282576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.746489,0.00129989) , 
1, 94.1433, 1, 0, 0.726978,0.130658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0704393,-8.85839e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.170492,1.34871e+31) , 
0, 267.398, 1, 0, 0.127004,0.0204204) , 
8, 116.197, 1, 0, 0.518414,0.092337) , 
9, 0.862863, 1, 0, 0.502342,0.0856992)    );
  // itree = 737
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624389,0.00220149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.741323,0.000998998) , 
1, 91.7067, 1, 0, 0.72156,0.0982591) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.824326,0.00266987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629105,0.00203621) , 
7, 189.714, 1, 0, 0.767714,0.278989) , 
3, 0.444102, 1, 0, 0.73107,0.135499) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128362,-1.47267e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385829,6.4704e+30) , 
9, 0.879333, 1, 0, 0.218304,0.0890049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0996607,2.16221e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0380991,-1.18617e+31) , 
0, 150.438, 1, 0, 0.0457401,-0.0493799) , 
9, 0.891683, 1, 0, 0.0841035,-0.0186151) , 
7, 242.617, 1, 0, 0.489685,0.0779986)    );
  // itree = 738
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610303,0.000675998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710713,0.00216757) , 
2, 9.09905, 1, 0, 0.685153,0.125618) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0670836,-2.90673e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114485,1.95135e+30) , 
8, 251.367, 1, 0, 0.0780121,-0.0108471) , 
8, 155.9, 1, 0, 0.596026,0.105586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.87479e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.64633e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.87987e+28) , 
2, 11.3468, 1, 0, 0,-0.00459382) , 
9, 0.891702, 1, 0, 0,-0.0232152) , 
7, 418.952, 1, 0, 0.51351,0.0877539)    );
  // itree = 739
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510671,0.00135393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337652,-0.00153922) , 
9, 0.864855, 1, 0, 0.41823,0.0207128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.1929e+10) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.25157e+29) , 
8, 201.175, 1, 0, 0,-0.112471) , 
8, 113.761, 1, 0, 0.199199,-0.0490368) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488011,-0.00174586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46499,-0.000399864) , 
3, 0.0653213, 1, 0, 0.473488,-0.0288944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593521,0.00371263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542554,0.00253985) , 
3, 0.15387, 1, 0, 0.56095,0.137652) , 
3, 0.0807457, 1, 0, 0.554284,0.124958) , 
9, 0.891637, 1, 0, 0.511489,0.103988)    );
  // itree = 740
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663543,0.000545274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780169,0.00167481) , 
9, 0.97071, 1, 0, 0.723742,0.085141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769533,0.00193408) , 
3, 0.565211, 1, 0, 0.730046,0.101364) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.58388e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123294,-1.57987e+30) , 
7, 366.011, 1, 0, 0.0710601,-0.0994322) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.282127,6.11784e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100974,2.19749e+30) , 
9, 0.901045, 1, 0, 0.12049,0.0382396) , 
9, 0.884493, 1, 0, 0.112508,0.0160089) , 
7, 244.016, 1, 0, 0.502283,0.0698829)    );
  // itree = 741
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.663209,0.00152328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.610372,0.00929081) , 
1, 201.183, 1, 0, 0.659001,0.116345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289914,0.00757873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0712,-57.1852) , 
3, 0.161456, 1, 0, 0.169607,-0.00501144) , 
1, 222.249, 1, 0, 0.552505,0.0899371) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.21835e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114303,-1.65935e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.53439e+29) , 
8, 220.697, 1, 0, 0.0728945,-0.0213592) , 
9, 0.89172, 1, 0, 0.0590672,-0.0384872) , 
6, 173.918, 1, 0, 0.472075,0.0690041)    );
  // itree = 742
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.374063,-8.57333e-07) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0976498,-4.50558) , 
0, 312.811, 1, 0, 0.288787,-0.0436247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579232,0.00160996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.17116e+30) , 
1, 286.643, 1, 0, 0.487209,0.0699926) , 
9, 0.891637, 1, 0, 0.458668,0.0536503) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.401393,0.907483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588529,0.00177293) , 
9, 0.963517, 1, 0, 0.502768,0.246575) , 
3, 0.726712, 1, 0, 0.461428,0.0657229)    );
  // itree = 743
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.802837,0.00156903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702202,-0.0067326) , 
7, 199.879, 1, 0, 0.471811,0.0677105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.544364,8.33317e+30) , 
2, 41.7723, 1, 0, 0.474188,0.0789666) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74657,0.0107948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503393,0.00701017) , 
4, 0.199237, 1, 0, 0.663031,0.381021) , 
3, 0.726712, 1, 0, 0.488999,0.102656)    );
  // itree = 744
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670451,0.00182844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575814,0.00145847) , 
1, 109.773, 1, 0, 0.599542,0.0992226) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212451,-0.0195606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.47866e+29) , 
5, 180.651, 1, 0, 0.12035,-0.0781138) , 
6, 138.43, 1, 0, 0.548964,0.0805049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.82306e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134883,-1.21609e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.46016e+29) , 
5, 259.024, 1, 0, 0.0716475,-0.01582) , 
9, 0.891652, 1, 0, 0.0581134,-0.0300056) , 
6, 174.937, 1, 0, 0.468437,0.062375)    );
  // itree = 745
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747202,0.00121889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28534,5.14733e+30) , 
6, 223.253, 1, 0, 0.725502,0.100048) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0964013,-0.314883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455355,0.0242123) , 
9, 0.920412, 1, 0, 0.370924,0.251746) , 
8, 108.651, 1, 0, 0.651432,0.131737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131656,1.16928e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0760477,-3.05906e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.66367e+29) , 
8, 275.772, 1, 0, 0.0466017,-0.0217084) , 
1, 145.429, 1, 0, 0.0554703,-0.0126077) , 
8, 151.933, 1, 0, 0.501093,0.0953245)    );
  // itree = 746
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81798,0.00176858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81839,0.000735973) , 
9, 0.905986, 1, 0, 0.818289,0.0950265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0715734,-11.993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118938,5.52639) , 
9, 0.913218, 1, 0, 0.105584,0.00227392) , 
7, 203.547, 1, 0, 0.516354,0.0557323) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713744,0.00276708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621905,0.138992) , 
6, 125.084, 1, 0, 0.695005,0.289924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.05608e+29) , 
6, 157.77, 1, 0, 0.5953,0.242833) , 
3, 0.444102, 1, 0, 0.534158,0.097926)    );
  // itree = 747
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533912,0.00192878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0373993,-1.86571e+30) , 
6, 182.815, 1, 0, 0.474158,0.0852997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.642332,0.0144038) , 
2, 23.2537, 1, 0, 0.481932,0.100259) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58605,-0.00525923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337791,-0.000280443) , 
1, 160.387, 1, 0, 0.46208,-0.0388496) , 
2, 26.5574, 1, 0, 0.480219,0.0882522)    );
  // itree = 748
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672047,0.00197933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.756466,-0.00149561) , 
4, 0.686327, 1, 0, 0.680592,0.117387) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.166353,-2.46835e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145809,-7.67313e+29) , 
7, 286.391, 1, 0, 0.153507,-0.0413233) , 
5, 179.518, 1, 0, 0.612807,0.0969759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.32628e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.26149e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.63533e+29) , 
1, 167.648, 1, 0, 0,-0.00669986) , 
9, 0.891683, 1, 0, 0,-0.0178713) , 
5, 256.45, 1, 0, 0.521058,0.079781)    );
  // itree = 749
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.329184,-0.00182061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686699,0.00265327) , 
5, 92.9088, 1, 0, 0.64164,0.129469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.142566,-9.61132e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.34227e+29) , 
9, 0.891683, 1, 0, 0.0302626,-0.0152177) , 
7, 334.432, 1, 0, 0.518617,0.100355) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359707,0.000310782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484182,0.00312701) , 
9, 0.930551, 1, 0, 0.405174,0.0657119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576527,0.000308438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.314436,-0.0024581) , 
9, 0.989199, 1, 0, 0.462257,-0.0159153) , 
9, 0.963494, 1, 0, 0.43199,0.0273668) , 
3, 0.242237, 1, 0, 0.487349,0.0740101)    );
  // itree = 750
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.280316,-0.000147392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772355,0.00406366) , 
5, 63.2694, 1, 0, 0.617323,0.221403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.352466,-0.00315493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680232,0.00154181) , 
8, 59.5339, 1, 0, 0.659382,0.0826975) , 
5, 75.2522, 1, 0, 0.654689,0.0981741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0763484,-1.6468e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.128038,-6.68317e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.035683,-2.87184e+29) , 
1, 145.429, 1, 0, 0.0500478,-0.00707882) , 
9, 0.891683, 1, 0, 0.0553073,-0.0154238) , 
7, 311.813, 1, 0, 0.509766,0.0707076)    );
  // itree = 751
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.218279,-0.00492119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.426389,0.00245799) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135109,-803.321) , 
6, 153.983, 1, 0, 0.305035,0.0497963) , 
6, 90.6529, 1, 0, 0.282345,0.0109388) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610419,0.000936806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621164,0.002523) , 
4, 0.121117, 1, 0, 0.618976,0.126831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.89109e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.01991e+28) , 
1, 286.343, 1, 0, 0,-0.00689451) , 
5, 255.688, 1, 0, 0.526344,0.106819) , 
9, 0.905985, 1, 0, 0.479576,0.0884409)    );
  // itree = 752
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740072,0.00109373) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.416661,1.06716e+31) , 
7, 257.432, 1, 0, 0.708399,0.111449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.130702,-1.06838e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0275304,-4.24855e+29) , 
9, 0.891665, 1, 0, 0.0492597,-0.0159569) , 
7, 291.925, 1, 0, 0.544157,0.0797021) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43049,0.00248389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212918,-5.44632e-05) , 
3, 0.161491, 1, 0, 0.319848,0.0918397) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28102,-0.00266722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.445002,0.000248888) , 
1, 111.849, 1, 0, 0.417856,-0.00945881) , 
9, 0.891637, 1, 0, 0.400604,0.00837208) , 
4, 0.201861, 1, 0, 0.481391,0.0485142)    );
  // itree = 753
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.467438,0.00645078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.669391,0.00107079) , 
0, 110.833, 1, 0, 0.654998,0.0863064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.465359,1.14123e+31) , 
8, 139.528, 1, 0, 0.642983,0.103357) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224771,9.91646e+29) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0521595,-1.92755e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.22947e+29) , 
8, 275.683, 1, 0, 0.0312523,-0.0135674) , 
1, 145.429, 1, 0, 0.0539452,-0.00618448) , 
8, 151.933, 1, 0, 0.494241,0.0756958)    );
  // itree = 754
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.502654,0.00155999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.671614,0.00910042) , 
1, 147.573, 1, 0, 0.557556,0.219164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.1488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.09346e+10) , 
5, 145.233, 1, 0, 0,-0.0455726) , 
1, 181.17, 1, 0, 0.434661,0.160812) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.386492,-0.0017877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768055,0.00133859) , 
8, 63.9178, 1, 0, 0.726117,0.0679507) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.42981e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.124099,3.00953e+29) , 
9, 0.898874, 1, 0, 0.0998552,-0.0177669) , 
8, 119.512, 1, 0, 0.507794,0.0380685) , 
0, 181.652, 1, 0, 0.489617,0.0685763)    );
  // itree = 755
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644486,0.000564087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.564761,0.0027439) , 
4, 0.121117, 1, 0, 0.584917,0.111725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.214063,-2.63041e+30) , 
6, 159.287, 1, 0, 0.571548,0.103029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.29266e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0639683,-9.09316e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.17025e+29) , 
8, 193.762, 1, 0, 0.0286451,-0.0133679) , 
1, 148.567, 1, 0, 0.0216758,-0.0228558) , 
6, 173.918, 1, 0, 0.487633,0.0838177)    );
  // itree = 756
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.796951,0.00156572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132355,-4.40637e+30) , 
8, 124.52, 1, 0, 0.69004,0.115047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610112,0.0130164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855689,0.00229795) , 
0, 209.342, 1, 0, 0.795874,0.24799) , 
5, 122.866, 1, 0, 0.720819,0.153709) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289245,-0.0062585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.78586e+29) , 
7, 289.353, 1, 0, 0.128517,-0.0496059) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244517,0.00250259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515841,4.42738e+30) , 
2, 40.4803, 1, 0, 0.271975,0.0567482) , 
2, 11.1695, 1, 0, 0.225593,0.0223622) , 
5, 139.747, 1, 0, 0.524213,0.101564)    );
  // itree = 757
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.471284,-0.0013465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.399801,0.000148444) , 
1, 149.663, 1, 0, 0.42012,-0.0134532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190315,-0.0137199) , 
4, 0.109521, 1, 0, 0.37878,-0.0301129) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75799,0.00315714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807339,0.00134614) , 
9, 0.927552, 1, 0, 0.792451,0.178884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1825,0.0021085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337987,42.7485) , 
4, 0.744004, 1, 0, 0.194151,0.029124) , 
7, 197.982, 1, 0, 0.49629,0.104752) , 
4, 0.121117, 1, 0, 0.474197,0.0793965)    );
  // itree = 758
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558811,0.00195158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474179,0.00142984) , 
1, 112.739, 1, 0, 0.493455,0.0842609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.473729,-0.00484106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.90151e+29) , 
7, 271.431, 1, 0, 0.271256,-0.075193) , 
4, 0.605583, 1, 0, 0.476132,0.0718296) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653025,0.0610324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612314,0.00110272) , 
9, 0.949148, 1, 0, 0.633038,0.268914) , 
3, 0.726712, 1, 0, 0.487889,0.0865976)    );
  // itree = 759
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665573,0.0032265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.865802,0.00121797) , 
5, 84.3905, 1, 0, 0.831381,0.136808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0811208,-0.0119866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690241,0.00223967) , 
3, 0.362279, 1, 0, 0.379498,-0.071455) , 
7, 199.767, 1, 0, 0.77003,0.108533) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.101976,3.06018e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702111,-3.86006e+30) , 
4, 0.172916, 1, 0, 0.0842857,-0.00332389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221318,3.47032e+30) , 
4, 0.726693, 1, 0, 0.0939325,0.0103157) , 
7, 234.843, 1, 0, 0.525165,0.0729611)    );
  // itree = 760
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.63149,0.00132242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779237,0.00385953) , 
2, 12.1839, 1, 0, 0.690179,0.170075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119299,-0.0113689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.494746,0.0020139) , 
1, 108.958, 1, 0, 0.462207,0.0462619) , 
5, 108.239, 1, 0, 0.538041,0.0874481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138315,-16.4486) , 
2, 34.0676, 1, 0, 0.527295,0.0820145)    );
  // itree = 761
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618432,0.00186684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.62176,0.000239908) , 
9, 0.941929, 1, 0, 0.620337,0.058525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887594,0.00580718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122595,-18.6305) , 
6, 143.523, 1, 0, 0.743946,0.175546) , 
0, 315.533, 1, 0, 0.647193,0.0839492) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.78036e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120959,-2.08649e+30) , 
9, 0.891683, 1, 0, 0.100088,-0.0273801) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140037,2.20267e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0819447,-2.42226e+29) , 
4, 0.552286, 1, 0, 0.105799,0.0469498) , 
4, 0.403722, 1, 0, 0.101391,-0.0104184) , 
5, 184.297, 1, 0, 0.500013,0.0585022)    );
  // itree = 762
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.440773,0.00250265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573712,0.0045019) , 
0, 267.638, 1, 0, 0.490416,0.196463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597721,0.000804725) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658058,0.00266352) , 
3, 0.444094, 1, 0, 0.610562,0.0724178) , 
9, 0.891608, 1, 0, 0.591341,0.092263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.106008,-1.13376e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.47658e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0544344,-2.6727e+29) , 
9, 0.891719, 1, 0, 0.0450346,-0.00750175) , 
1, 153.224, 1, 0, 0.0565738,-0.0145436) , 
5, 229.949, 1, 0, 0.484057,0.0708357)    );
  // itree = 763
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812891,0.0013498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207659,-0.015025) , 
7, 196.83, 1, 0, 0.721882,0.0951945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.33589,0.0142199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.471,0.0347116) , 
6, 109.101, 1, 0, 0.409222,0.215881) , 
8, 110.715, 1, 0, 0.626441,0.132035) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.33354e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315216,5.08047e+30) , 
9, 0.873145, 1, 0, 0.157213,0.134429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.32966e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.91672e+29) , 
1, 145.429, 1, 0, 0,-0.00495598) , 
9, 0.891683, 1, 0, 0.0344076,0.0255499) , 
7, 320.987, 1, 0, 0.482906,0.106218)    );
  // itree = 764
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.748633,0.000526002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461999,-0.00184455) , 
6, 122.454, 1, 0, 0.67869,0.0184755) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658969,0.00139763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758487,0.00286005) , 
9, 0.956306, 1, 0, 0.716493,0.179929) , 
4, 0.121117, 1, 0, 0.709314,0.149271) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.297153,0.00104311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.269143,4.64953e+30) , 
1, 335.274, 1, 0, 0.292877,0.065574) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.133701,-2.00835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193506,-0.00137677) , 
1, 144.211, 1, 0, 0.181565,-0.0301428) , 
0, 272.667, 1, 0, 0.225879,0.00796295) , 
5, 139.747, 1, 0, 0.515529,0.0926279)    );
  // itree = 765
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.602202,0.00515716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379176,0.00486672) , 
9, 0.913211, 1, 0, 0.473118,0.310607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.450785,-0.000335493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.656476,0.00257368) , 
2, 8.88289, 1, 0, 0.616627,0.110536) , 
0, 122.029, 1, 0, 0.597624,0.137029) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-30.9954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.206783,-0.00858476) , 
9, 0.895129, 1, 0, 0.148665,-0.0516808) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620439,0.00470453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0878808,-7.07464e+29) , 
1, 228.821, 1, 0, 0.394394,0.0599569) , 
9, 0.970794, 1, 0, 0.261519,-0.000409958) , 
0, 360.402, 1, 0, 0.530233,0.109471)    );
  // itree = 766
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.609921,0.00124104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.613346,0.00226571) , 
3, 0.163393, 1, 0, 0.611779,0.109767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422546,-0.00081656) , 
3, 0.686339, 1, 0, 0.602883,0.103039) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.99004e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135946,3.11465e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0825207,-8.84243e+29) , 
0, 332.344, 1, 0, 0.106922,0.0197817) , 
1, 116.077, 1, 0, 0.0928395,0.00185111) , 
6, 157.783, 1, 0, 0.507174,0.0840512)    );
  // itree = 767
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466322,0.00143945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680548,0.00672939) , 
5, 107.283, 1, 0, 0.544213,0.23945) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.678981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.258815,0.00143832) , 
4, 0.282603, 1, 0, 0.108003,-0.00667744) , 
5, 134.191, 1, 0, 0.433817,0.17716) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89607,0.00206968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377055,0.00236503) , 
7, 187.223, 1, 0, 0.654047,0.108068) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211312,-3.77832e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0894033,-6.8271e+29) , 
7, 422.897, 1, 0, 0.152213,-0.0375281) , 
6, 159.843, 1, 0, 0.543779,0.0760763) , 
0, 181.376, 1, 0, 0.518111,0.0996716)    );
  // itree = 768
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640897,0.0126416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589285,0.00228327) , 
9, 0.927552, 1, 0, 0.609888,0.247676) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642659,0.00709174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501615,0.00312453) , 
4, 0.0691672, 1, 0, 0.515062,0.121728) , 
1, 145.429, 1, 0, 0.549467,0.167424) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679777,0.000952332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156428,-0.0205986) , 
8, 92.7597, 1, 0, 0.403526,0.0113669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703413,0.00348141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515749,0.000604341) , 
9, 0.988179, 1, 0, 0.58641,0.130944) , 
9, 0.97787, 1, 0, 0.482283,0.0628611) , 
4, 0.242231, 1, 0, 0.5232,0.126543)    );
  // itree = 769
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.85139,0.00218994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437128,0.000554585) , 
8, 88.9676, 1, 0, 0.66861,0.130021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.74203,0.00735433) , 
4, 0.564879, 1, 0, 0.680984,0.17554) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454992,-0.00137638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322511,0.00127677) , 
1, 143.896, 1, 0, 0.366996,0.00628506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.562537,0.0030681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.64037) , 
6, 142.714, 1, 0, 0.366754,0.101711) , 
9, 0.992288, 1, 0, 0.366948,0.0255438) , 
6, 97.3387, 1, 0, 0.512973,0.0952913)    );
  // itree = 770
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636684,0.00146026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.541324,-0.00680195) , 
4, 0.726699, 1, 0, 0.632006,0.0901346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412453,9.01482e+30) , 
8, 225.831, 1, 0, 0.622386,0.103666) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303,-16.5777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.49891e+29) , 
8, 160.193, 1, 0, 0.16113,-0.0875164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.143746,2.72301e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.43956e+29) , 
9, 0.884493, 1, 0, 0.0256723,0.0213879) , 
7, 301.406, 1, 0, 0.0593982,-0.0057269) , 
1, 229.121, 1, 0, 0.492707,0.0784685)    );
  // itree = 771
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740491,0.00173217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704714,0.00060589) , 
4, 0.201742, 1, 0, 0.723245,0.0943055) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863992,0.00566146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283488,-9.73038e+29) , 
6, 158.174, 1, 0, 0.74753,0.2298) , 
2, 18.6581, 1, 0, 0.728727,0.124892) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0850806,-6.23597e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108986,1.30394e+30) , 
6, 173.918, 1, 0, 0.0933,-0.0299596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.294938,9.08934e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204307,4.79814e+29) , 
2, 10.6038, 1, 0, 0.242997,0.116611) , 
9, 0.985154, 1, 0, 0.143098,0.0187979) , 
8, 119.41, 1, 0, 0.530801,0.0890353)    );
  // itree = 772
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799741,0.00131451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.234526,0.00286334) , 
7, 189.695, 1, 0, 0.492309,0.0676321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.498533,1.71874e+14) , 
2, 34.0676, 1, 0, 0.492604,0.0767071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.573317,0.047839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447602,0.00226164) , 
9, 0.941969, 1, 0, 0.513578,0.297858) , 
3, 0.726712, 1, 0, 0.493867,0.0900225)    );
  // itree = 773
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53831,0.00101873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.501095,0.00301223) , 
4, 0.201693, 1, 0, 0.522528,0.0881142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476735,-0.000132204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229654,-0.045299) , 
4, 0.744046, 1, 0, 0.381415,-0.0526275) , 
4, 0.605583, 1, 0, 0.5114,0.0770152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260351,-0.0112631) , 
3, 0.686339, 1, 0, 0.499075,0.0679949)    );
  // itree = 774
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.8305,0.000646782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317581,-1.79417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237378,-0.00151747) , 
1, 145.429, 1, 0, 0.256613,-0.0536324) , 
7, 177.659, 1, 0, 0.465094,-0.0173301) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530728,0.0020715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63242,0.0032388) , 
3, 0.403729, 1, 0, 0.557429,0.116638) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.46615e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.42958e+29) , 
1, 243.713, 1, 0, 0,-0.0113164) , 
7, 426.338, 1, 0, 0.480532,0.0989867) , 
4, 0.121117, 1, 0, 0.477126,0.0733277)    );
  // itree = 775
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.58297,0.00181978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698905,0.00399313) , 
3, 0.391918, 1, 0, 0.609212,0.129545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.280544,-0.00522221) , 
3, 0.686327, 1, 0, 0.595678,0.119346) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.45794e+29) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.56964e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126714,-5.00251e+29) , 
9, 0.984157, 1, 0, 0.0470029,-0.0063603) , 
9, 0.891683, 1, 0, 0.0386262,-0.0136635) , 
5, 255.842, 1, 0, 0.505517,0.0978175)    );
  // itree = 776
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.554186,0.0078518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.767184,0.00160222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.38929,-0.00309489) , 
8, 96.2589, 1, 0, 0.716436,0.0986021) , 
0, 99.3564, 1, 0, 0.707608,0.114952) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.285885,1.6813e+31) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.6776e+29) , 
7, 397.496, 1, 0, 0.182261,0.0789219) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190826,-3.85485e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181028,-4.79608e+29) , 
8, 206.049, 1, 0, 0.18598,-0.0844919) , 
9, 0.992351, 1, 0, 0.183007,0.0461589) , 
8, 119.41, 1, 0, 0.514468,0.0896246)    );
  // itree = 777
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757405,0.00138752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.502072,-0.000126305) , 
8, 92.9836, 1, 0, 0.708688,0.0899884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810719,0.00495222) , 
4, 0.686327, 1, 0, 0.720303,0.106312) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183545,-1.83218e+31) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122224,2.69633e+29) , 
7, 266.186, 1, 0, 0.160773,-0.180173) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0862017,-4.27605e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0265873,1.50725e+30) , 
1, 287.8, 1, 0, 0.0487595,-0.0198882) , 
7, 317.624, 1, 0, 0.0956369,-0.0869672) , 
8, 116.197, 1, 0, 0.503963,0.0393735)    );
  // itree = 778
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.53593,0.000637441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627747,0.00232519) , 
3, 0.242102, 1, 0, 0.576751,0.0806077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.661448,0.00443132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506795,22721.8) , 
6, 146.347, 1, 0, 0.610378,0.246874) , 
0, 314.837, 1, 0, 0.584761,0.120214) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.32435e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161372,-5.707e+29) , 
1, 145.896, 1, 0, 0.0992025,-0.0409304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.79923e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.04796e+28) , 
7, 488.015, 1, 0, 0,-0.0070772) , 
1, 234.069, 1, 0, 0.0339282,-0.0186553) , 
7, 352.991, 1, 0, 0.46933,0.0911127)    );
  // itree = 779
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.799169,0.00181892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683601,-0.00169776) , 
4, 0.52453, 1, 0, 0.786598,0.133918) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0913273,-6.21456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.328194,12.514) , 
7, 224.006, 1, 0, 0.206099,-0.0728158) , 
7, 203.984, 1, 0, 0.715948,0.108758) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131869,7.41859e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101315,-6.20683e+30) , 
9, 0.87729, 1, 0, 0.105452,-0.0419099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.165584,9.19462e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0491512,-2.1075e+30) , 
3, 0.242237, 1, 0, 0.120536,0.0534929) , 
4, 0.201861, 1, 0, 0.113054,0.00617056) , 
7, 239.017, 1, 0, 0.476729,0.0680526)    );
  // itree = 780
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624697,0.00347874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599692,0.00109258) , 
4, 0.161456, 1, 0, 0.609428,0.104657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.105867,-245.064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0387905,1.09771e+30) , 
6, 160.444, 1, 0, 0.0784014,-0.0142786) , 
1, 232.612, 1, 0, 0.485271,0.0768494) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.428113,-0.0037602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477682,-9.11648e-05) , 
6, 75.0831, 1, 0, 0.451933,-0.0545933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.542177,0.00357594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654913,0.0125122) , 
9, 0.997426, 1, 0, 0.586597,0.297484) , 
6, 95.3, 1, 0, 0.55236,0.207972) , 
9, 0.992288, 1, 0, 0.50046,0.106535)    );
  // itree = 781
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5733,0.00360467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443072,-0.00245378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871009,0.00143745) , 
7, 143.576, 1, 0, 0.840129,0.103182) , 
0, 123.162, 1, 0, 0.809572,0.130519) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.07757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.72837e+30) , 
8, 152.196, 1, 0, 0,-0.0828216) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.13919,0.00333602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.275782,0.0607361) , 
2, 18.3291, 1, 0, 0.177832,0.0491388) , 
9, 0.898831, 1, 0, 0.14324,0.0234696) , 
7, 193.807, 1, 0, 0.47796,0.0772439)    );
  // itree = 782
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.74394,0.00172073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57894,0.0625888) , 
1, 212.907, 1, 0, 0.730416,0.143244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.235129,1.3976e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119268,-6.59609e+30) , 
8, 93.352, 1, 0, 0.146515,-0.065474) , 
7, 230.885, 1, 0, 0.629398,0.107134) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0706508,-3.87619e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.08318e+29) , 
7, 397.18, 1, 0, 0.0329694,-0.0292013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0793722,2.09215e+30) , 
6, 298.7, 1, 0, 0.0413744,-0.0122357) , 
7, 299.699, 1, 0, 0.464285,0.073616)    );
  // itree = 783
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40583,-0.00134847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765328,0.00109195) , 
1, 94.8525, 1, 0, 0.714312,0.0713821) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68798,0.00836544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735628,0.00312277) , 
9, 0.920361, 1, 0, 0.721666,0.218133) , 
0, 261.98, 1, 0, 0.717474,0.134477) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.229623,1.08124e+31) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0260478,2.90241e+29) , 
5, 187.633, 1, 0, 0.125398,0.0644729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0744384,-2.05553e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.06563e+29) , 
7, 349.277, 1, 0, 0.0368295,-0.0415152) , 
4, 0.322977, 1, 0, 0.101366,0.0357151) , 
8, 116.197, 1, 0, 0.505026,0.100422)    );
  // itree = 784
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.461602,0.00240081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.848376,0.000829026) , 
0, 140.301, 1, 0, 0.799218,0.0838058) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0662988,-0.0200837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.24836,0.0267707) , 
9, 0.985165, 1, 0, 0.126647,-0.00152211) , 
7, 199.879, 1, 0, 0.483079,0.0436979) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496541,0.00091825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583057,0.0077116) , 
3, 0.732524, 1, 0, 0.52201,0.104208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64857,0.00644049) , 
9, 0.992247, 1, 0, 0.55366,0.157582) , 
3, 0.444102, 1, 0, 0.498873,0.0691822)    );
  // itree = 785
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493138,0.00221217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.514904,-0.000572923) , 
9, 0.905986, 1, 0, 0.508941,0.0288921) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.65338,0.00192748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.490154,0.021437) , 
0, 333.25, 1, 0, 0.620209,0.148882) , 
2, 9.09905, 1, 0, 0.585761,0.111735) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12295,-4.68474e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.37827e+29) , 
5, 182.922, 1, 0, 0.0743087,-0.0779561) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.48701e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.20697e+29) , 
1, 244.645, 1, 0, 0,-0.00633576) , 
7, 421.161, 1, 0, 0.0386356,-0.0435735) , 
6, 157.77, 1, 0, 0.485838,0.0833704)    );
  // itree = 786
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.703215,0.00599245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.382559,0.00167588) , 
6, 91.2689, 1, 0, 0.566377,0.312319) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.847944,0.000728923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.575432,0.00374373) , 
7, 181.882, 1, 0, 0.72714,0.103156) , 
1, 94.0668, 1, 0, 0.70063,0.137648) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.30893,6.33509e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0554272,-7.8193e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0852427,3.79013e+30) , 
5, 256.435, 1, 0, 0.0672489,-0.0196015) , 
4, 0.0807444, 1, 0, 0.0916813,0.010084) , 
8, 119.512, 1, 0, 0.495315,0.0946378)    );
  // itree = 787
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543308,0.00257974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.793269,0.00113168) , 
0, 155.428, 1, 0, 0.748864,0.111941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.589863,0.0428376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.641298,0.00234807) , 
9, 0.942093, 1, 0, 0.618213,0.224677) , 
0, 317.505, 1, 0, 0.720164,0.136706) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0521578,-40786.7) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.128726,0.00625666) , 
9, 0.906024, 1, 0, 0.110085,0.0121976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.546285,4.23764e+30) , 
3, 0.766655, 1, 0, 0.145282,0.0278373) , 
8, 113.273, 1, 0, 0.506966,0.0963313)    );
  // itree = 788
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368432,-0.0232844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604572,0.000589678) , 
9, 0.970715, 1, 0, 0.47487,-0.0471342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696634,0.00396935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.690813,0.00187997) , 
5, 72.8845, 1, 0, 0.691441,0.153929) , 
2, 7.25538, 1, 0, 0.668065,0.132226) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.53419e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0469246,-1.02197e+30) , 
9, 0.891665, 1, 0, 0.0382196,-0.0197669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.193366,4.10789e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.82936e+29) , 
5, 242.732, 1, 0, 0.0802547,0.0618407) , 
4, 0.322977, 1, 0, 0.0513306,0.00568708) , 
7, 291.933, 1, 0, 0.49724,0.0971769)    );
  // itree = 789
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698765,0.00158732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581569,-0.00375519) , 
4, 0.605583, 1, 0, 0.689204,0.093134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463957,8.41265e+30) , 
6, 164.959, 1, 0, 0.679493,0.107517) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0370571,-3.06113e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.69274e+29) , 
7, 372.677, 1, 0, 0.0144762,-0.0242352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.80576e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127798,2.0355e+30) , 
6, 175.979, 1, 0, 0.0565052,0.0425194) , 
9, 0.992351, 1, 0, 0.0226107,-0.0113152) , 
7, 272.379, 1, 0, 0.478843,0.0712188)    );
  // itree = 790
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672308,0.00362668) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696356,0.00257389) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818098,0.00151888) , 
1, 118.669, 1, 0, 0.781559,0.149661) , 
5, 60.7366, 1, 0, 0.773882,0.167535) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0327935,-2.38563e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138895,3.49488e+30) , 
4, 0.40364, 1, 0, 0.0597068,0.00551399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.385436,1.09487e+31) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0792431,-3.76613e+29) , 
3, 0.161401, 1, 0, 0.23385,0.183316) , 
9, 0.992351, 1, 0, 0.098507,0.0451293) , 
7, 234.843, 1, 0, 0.5363,0.124476)    );
  // itree = 791
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68029,0.00209178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.601534,0.000185393) , 
4, 0.161489, 1, 0, 0.633671,0.0622983) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719939,0.00392482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.090914,1.28589e+30) , 
5, 174.61, 1, 0, 0.540977,0.153587) , 
1, 172.58, 1, 0, 0.601844,0.0936429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0919242,-1.1627e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.38706e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.65035e+29) , 
9, 0.992353, 1, 0, 0,-0.00502621) , 
1, 232.646, 1, 0, 0.0183419,-0.0133097) , 
8, 185.404, 1, 0, 0.491399,0.073399)    );
  // itree = 792
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.693126,0.00330523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660956,0.00168753) , 
9, 0.913174, 1, 0, 0.670839,0.151621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.09247e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.24434e+29) , 
1, 227.414, 1, 0, 0,-0.0198866) , 
8, 179.431, 1, 0, 0.585258,0.129741) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.237546,-0.0170299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251687,-5.2883e+29) , 
6, 186.905, 1, 0, 0.244578,-0.0686093) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21796,-0.000936502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395376,0.00949348) , 
4, 0.36335, 1, 0, 0.272105,0.0156659) , 
1, 144.211, 1, 0, 0.266388,-0.00183723) , 
0, 328.018, 1, 0, 0.505181,0.0966979)    );
  // itree = 793
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.2923,0.00208099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463982,-0.000497365) , 
0, 129.894, 1, 0, 0.405825,0.0193751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.712241,0.000677394) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.706698,0.00384004) , 
2, 8.88289, 1, 0, 0.707898,0.150534) , 
0, 208.096, 1, 0, 0.634123,0.118501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.166662,-7.62981e+29) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.32584e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
5, 267.147, 1, 0, 0,-0.00444905) , 
1, 287.8, 1, 0, 0.0458361,-0.010625) , 
8, 216.623, 1, 0, 0.556317,0.101423)    );
  // itree = 794
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567509,0.00430778) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547246,0.000457372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583694,0.00279929) , 
3, 0.121119, 1, 0, 0.573518,0.0996516) , 
8, 49.9477, 1, 0, 0.573139,0.112679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0851137,-9.81132e+29) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.56981e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.35983e+29) , 
9, 0.985165, 1, 0, 0,-0.00603938) , 
1, 301.235, 1, 0, 0.0242916,-0.0141246) , 
8, 216.623, 1, 0, 0.492214,0.0939823)    );
  // itree = 795
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758221,0.000905288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636293,0.0049991) , 
5, 101.535, 1, 0, 0.675387,0.211617) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.566145,0.00201523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765316,0.000743304) , 
1, 99.6352, 1, 0, 0.728168,0.0741781) , 
9, 0.941927, 1, 0, 0.707447,0.128136) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0344926,-3.37125e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0379445,-3.35047e+29) , 
1, 289.028, 1, 0, 0.0362492,-0.0284833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274372,4.45355e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0606373,-6.06213e+29) , 
9, 0.979025, 1, 0, 0.100002,0.0410611) , 
9, 0.970779, 1, 0, 0.062938,0.000630148) , 
8, 119.989, 1, 0, 0.494205,0.0859498)    );
  // itree = 796
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.476901,0.00362851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.763248,0.00112547) , 
0, 145.02, 1, 0, 0.71712,0.100902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740132,0.0141223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195874,1.00897e+30) , 
8, 136.622, 1, 0, 0.512371,0.25701) , 
1, 197.737, 1, 0, 0.684628,0.125675) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0502777,-1.4713e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.81247e+29) , 
1, 286.343, 1, 0, 0.025706,-0.0112502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0924115,1.55831e+30) , 
4, 0.565096, 1, 0, 0.0345462,-0.00155005) , 
7, 286.239, 1, 0, 0.507508,0.0910118)    );
  // itree = 797
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.276919,0.00113253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0812361,-0.00939293) , 
9, 0.985058, 1, 0, 0.227753,0.00771263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696312,0.00310068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0659316,1.80064e+30) , 
7, 354.406, 1, 0, 0.559947,0.134856) , 
0, 182.102, 1, 0, 0.500588,0.112137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191674,0.000421297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531522,-0.0308794) , 
4, 0.755576, 1, 0, 0.381554,-0.042152) , 
4, 0.605583, 1, 0, 0.490046,0.0984733)    );
  // itree = 798
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715771,0.00151106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422969,0.0976755) , 
1, 213.415, 1, 0, 0.682324,0.134369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706297,0.00147926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.754566,0.0100785) , 
1, 163.211, 1, 0, 0.728391,0.296701) , 
3, 0.403729, 1, 0, 0.693125,0.172428) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.304468,5.11539e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.25399e+29) , 
4, 0.161394, 1, 0, 0.140083,0.130127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.50633e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120134,3.82982e+30) , 
4, 0.403722, 1, 0, 0.0307705,0.0151283) , 
8, 119.512, 1, 0, 0.0522589,0.0377344) , 
7, 286.239, 1, 0, 0.520379,0.136121)    );
  // itree = 799
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.724396,0.000910128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540253,0.00530597) , 
7, 171.93, 1, 0, 0.598653,0.152555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.96791e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.931e+29) , 
7, 486.043, 1, 0, 0,-0.0235199) , 
7, 361.847, 1, 0, 0.54052,0.135457) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140702,-4.06234e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.19826e+29) , 
8, 194.598, 1, 0, 0.0325731,-0.00681975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.89719e+29) , 
9, 0.98516, 1, 0, 0.0232557,-0.0140294) , 
1, 286.343, 1, 0, 0.451673,0.109781)    );
  // itree = 800
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.457893,0.00367838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730745,0.00149077) , 
0, 136.499, 1, 0, 0.693748,0.120021) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.688671,1.13226e+09) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.47787e+29) , 
8, 154.181, 1, 0, 0.379372,0.309497) , 
1, 238.051, 1, 0, 0.662319,0.138963) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.58705e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.41935e+29) , 
4, 0.483957, 1, 0, 0,-0.0139354) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127911,2.37981e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.30086e+29) , 
3, 0.551942, 1, 0, 0.0576745,0.0516357) , 
3, 0.403729, 1, 0, 0.0146706,0.00274387) , 
7, 311.813, 1, 0, 0.509061,0.106729)    );
  // itree = 801
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327531,-0.00250168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.732594,0.00115688) , 
5, 76.9072, 1, 0, 0.675605,0.0658026) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.315805,-0.0081101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708004,0.00607346) , 
2, 9.09905, 1, 0, 0.644427,0.202821) , 
5, 124.254, 1, 0, 0.661092,0.129582) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.12903e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0695842,-1.13974e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.99629e+29) , 
3, 0.161456, 1, 0, 0.0283335,-0.0103317) , 
1, 145.429, 1, 0, 0.0238091,-0.0146611) , 
7, 286.239, 1, 0, 0.474713,0.0873967)    );
  // itree = 802
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.458319,0.00285674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.7074,0.00797674) , 
9, 0.97789, 1, 0, 0.58568,0.378906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.13409e+30) , 
7, 225.356, 1, 0, 0.422799,0.260091) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706138,0.00110057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461804,0.0120566) , 
8, 108.687, 1, 0, 0.648507,0.102791) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0390156,-1.41457e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0604071,1.8128e+30) , 
2, 18.8634, 1, 0, 0.0438953,0.0026983) , 
8, 152.035, 1, 0, 0.493602,0.0771467) , 
0, 137.219, 1, 0, 0.484556,0.100522)    );
  // itree = 803
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.375729,0.00689959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531768,0.00168582) , 
0, 136.493, 1, 0, 0.513023,0.085188) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.5714,0.00639814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.459558,0.00197664) , 
3, 0.524899, 1, 0, 0.513627,0.165876) , 
3, 0.363356, 1, 0, 0.513179,0.105989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567454,-0.00667207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373836,0.0283679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.270273,-0.0030593) , 
9, 0.927657, 1, 0, 0.314635,0.00755712) , 
8, 89.0863, 1, 0, 0.402871,-0.0338798) , 
4, 0.605583, 1, 0, 0.503046,0.0931409)    );
  // itree = 804
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.572289,0.00522118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684756,0.000887848) , 
9, 0.862853, 1, 0, 0.679079,0.0686036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.250131,-2.53944e+16) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640506,8.84319e+14) , 
2, 8.95184, 1, 0, 0.516352,0.280638) , 
1, 233.897, 1, 0, 0.659426,0.0942117) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.286829,6.76171e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.78679e+29) , 
8, 202.355, 1, 0, 0.142493,0.133186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.6653e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.02952e+30) , 
4, 0.605583, 1, 0, 0,-0.0138292) , 
4, 0.121115, 1, 0, 0.0377575,0.0251269) , 
7, 291.925, 1, 0, 0.484194,0.0747386)    );
  // itree = 805
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626091,0.000751393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.65925,0.00190831) , 
3, 0.444102, 1, 0, 0.632795,0.060035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645868,7211.54) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.31644,1.03527e+30) , 
1, 245.265, 1, 0, 0.49857,0.305467) , 
1, 222.134, 1, 0, 0.619456,0.0844247) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0234272,-5.23067e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.81672e+29) , 
4, 0.44409, 1, 0, 0.0185172,-0.0103525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.31406e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229256,2.16735e+30) , 
0, 315.396, 1, 0, 0.117584,0.0471385) , 
9, 0.992247, 1, 0, 0.0396645,0.00191983) , 
8, 152.035, 1, 0, 0.464073,0.0623135)    );
  // itree = 806
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.579636,0.00368379) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.365952,0.00576694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552771,0.00154129) , 
0, 105.032, 1, 0, 0.535571,0.0905187) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269744,-0.00156559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245882,0.0190531) , 
3, 0.56522, 1, 0, 0.266828,0.000996622) , 
0, 360.402, 1, 0, 0.475636,0.0705536) , 
9, 0.855666, 1, 0, 0.47953,0.0805361)    );
  // itree = 807
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720778,0.0012559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.821886,0.000245235) , 
6, 69.988, 1, 0, 0.791322,0.0550776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.19489,-0.00751653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566824,0.00520585) , 
2, 7.19983, 1, 0, 0.534094,0.163989) , 
7, 176.032, 1, 0, 0.646311,0.116476) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0673147,8.54878e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2614,4.57281e+30) , 
1, 208.129, 1, 0, 0.107779,0.062968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0872161,-4.21183e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.72217e+29) , 
4, 0.443627, 1, 0, 0.0718401,-0.00911286) , 
1, 241.04, 1, 0, 0.0886548,0.0246115) , 
5, 184.297, 1, 0, 0.494221,0.0914215)    );
  // itree = 808
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.42477,0.00349915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475705,0.00080312) , 
9, 0.869012, 1, 0, 0.470109,0.0433556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655171,0.00517533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556766,0.00109698) , 
2, 10.9426, 1, 0, 0.610063,0.17679) , 
9, 0.99225, 1, 0, 0.507133,0.0786545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.660479,1.01549e+31) , 
2, 41.7723, 1, 0, 0.513354,0.0899205)    );
  // itree = 809
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.626749,0.0018909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0287472,-7.23626e+29) , 
8, 182.581, 1, 0, 0.536702,0.0933495) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.322254,-0.00414475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.30125e+29) , 
7, 403.704, 1, 0, 0.154003,-0.0221637) , 
0, 384.185, 1, 0, 0.476776,0.0752614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340362,-10.6978) , 
2, 32.683, 1, 0, 0.471142,0.0679043)    );
  // itree = 810
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550006,0.000598106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.604563,0.00224607) , 
3, 0.121117, 1, 0, 0.589692,0.0980675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.70846e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.55577e+29) , 
2, 26.3628, 1, 0, 0,-0.0162536) , 
5, 255.842, 1, 0, 0.498498,0.080388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.267204,-0.0323005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481766,0.000469413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.438561,-0.0221097) , 
4, 0.744046, 1, 0, 0.462283,-0.0247349) , 
2, 10.2266, 1, 0, 0.403264,-0.0541982) , 
4, 0.605583, 1, 0, 0.490119,0.0685467)    );
  // itree = 811
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665631,0.00178979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.655141,0.000802058) , 
7, 136.704, 1, 0, 0.656696,0.0701228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706732,0.000447641) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.670789,0.00480857) , 
4, 0.121117, 1, 0, 0.679385,0.198992) , 
5, 123.556, 1, 0, 0.667188,0.129714) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174353,-1.3256e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0759861,-1.3326e+30) , 
4, 0.443833, 1, 0, 0.156746,-0.0179284) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.26167,4.67111e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.22669e+29) , 
4, 0.161456, 1, 0, 0.11315,0.0934675) , 
6, 228.784, 1, 0, 0.146333,0.00867718) , 
5, 184.297, 1, 0, 0.525987,0.0969017)    );
  // itree = 812
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702414,0.000954909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.370252,1.11367e+31) , 
8, 127.198, 1, 0, 0.66706,0.0760133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.400751,9.48538e+30) , 
6, 227.239, 1, 0, 0.650079,0.0900437) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.124812,-8.26944e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.44081e+29) , 
1, 148.046, 1, 0, 0.0515665,-0.0257211) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0626541,-2.56462e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.89471e+29) , 
6, 162.736, 1, 0, 0.0384102,-0.00763445) , 
1, 236.083, 1, 0, 0.0419454,-0.0124945) , 
8, 152.035, 1, 0, 0.496731,0.0641873)    );
  // itree = 813
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.721904,0.00067009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.767073,0.00482071) , 
5, 124.066, 1, 0, 0.739289,0.112221) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-79.2553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217196,-63.8708) , 
0, 258.539, 1, 0, 0.136286,-0.0773401) , 
5, 165.059, 1, 0, 0.683004,0.0945273) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.21082e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132377,-1.42709e+30) , 
9, 0.927561, 1, 0, 0.0852074,-0.0704723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.86628e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0692225,-5.33989e+29) , 
1, 219.243, 1, 0, 0.0582554,-0.00977816) , 
8, 152.035, 1, 0, 0.0657083,-0.0265617) , 
7, 296.099, 1, 0, 0.520156,0.0625829)    );
  // itree = 814
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.334588,-0.0107674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.389015,-0.000816245) , 
2, 7.64838, 1, 0, 0.371146,-0.0608086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.786019,0.000816935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0301952,-10.3351) , 
7, 196.027, 1, 0, 0.519791,0.0155253) , 
4, 0.161489, 1, 0, 0.472607,-0.00870508) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.784486,0.0065513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614249,0.00270188) , 
6, 70.4468, 1, 0, 0.648605,0.153084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0880192,-6.29677e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.7304e+30) , 
2, 25.6294, 1, 0, 0.0672351,-0.0220828) , 
7, 334.64, 1, 0, 0.484575,0.103662) , 
2, 10.9533, 1, 0, 0.479545,0.0564352)    );
  // itree = 815
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397882,0.00393081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550612,0.00112685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379017,-0.00209058) , 
4, 0.242233, 1, 0, 0.491139,0.00966162) , 
9, 0.862921, 1, 0, 0.486363,0.0210376) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598487,0.00302914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.711487,0.00169405) , 
0, 159.163, 1, 0, 0.683108,0.151627) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.21812e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.82799e+29) , 
8, 160.733, 1, 0, 0,-0.0184149) , 
7, 304.669, 1, 0, 0.517136,0.110312) , 
3, 0.201864, 1, 0, 0.501474,0.0648775)    );
  // itree = 816
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814491,0.00594553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13566,0.00562928) , 
8, 96.6581, 1, 0, 0.562707,0.240365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278802,-0.0010914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383175,0.003099) , 
9, 0.882709, 1, 0, 0.335991,0.0463978) , 
4, 0.161487, 1, 0, 0.44179,0.136914) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742475,0.000973662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529399,0.0238396) , 
8, 110.248, 1, 0, 0.728099,0.0821235) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.043606,-5.20362e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182092,9.90677e+29) , 
0, 362.94, 1, 0, 0.0963106,-0.0279161) , 
8, 119.512, 1, 0, 0.527579,0.0471986) , 
9, 0.920412, 1, 0, 0.50186,0.0740949)    );
  // itree = 817
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671517,0.00117614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0908058,-3.41168e+30) , 
5, 173.754, 1, 0, 0.505988,0.0351854) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587457,0.00240402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203439,-0.00127046) , 
0, 360.829, 1, 0, 0.511513,0.109157) , 
3, 0.242231, 1, 0, 0.50823,0.0652031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.329076,-0.111882) , 
4, 0.767071, 1, 0, 0.502874,0.0589004)    );
  // itree = 818
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.513153,-4.51003e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649551,0.00259138) , 
2, 7.44935, 1, 0, 0.634046,0.13955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120168,-1.01389e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.50595e+29) , 
7, 285.389, 1, 0, 0.0300534,-0.0168045) , 
1, 261.74, 1, 0, 0.560349,0.120472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597056,-0.013695) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.98838e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.16759e+30) , 
2, 26.5966, 1, 0, 0,-0.022853) , 
7, 291.691, 1, 0, 0.143248,-0.0374369) , 
0, 387.047, 1, 0, 0.493989,0.0953488)    );
  // itree = 819
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.540065,0.00135142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726257,0.00361835) , 
2, 15.8509, 1, 0, 0.595252,0.103577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.673826,0.0093443) , 
0, 312.996, 1, 0, 0.599388,0.118262) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367918,-0.00660808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.88463e+29) , 
8, 152.544, 1, 0, 0.195205,-0.0370863) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.403288,0.00730983) , 
9, 0.992351, 1, 0, 0.242486,-0.00115595) , 
0, 328.521, 1, 0, 0.517353,0.0908135)    );
  // itree = 820
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726198,0.00181579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590215,0.0103755) , 
6, 126.388, 1, 0, 0.693675,0.162167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260705,-0.00293255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647927,0.00168351) , 
8, 67.7088, 1, 0, 0.611866,0.0615352) , 
4, 0.242233, 1, 0, 0.664038,0.125711) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.07536e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.25653e+29) , 
9, 0.891654, 1, 0, 0,-0.0148523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269856,5.20462e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.43044e+29) , 
3, 0.530972, 1, 0, 0.121063,0.107211) , 
3, 0.403729, 1, 0, 0.0324539,0.0178697) , 
7, 311.813, 1, 0, 0.515557,0.100358)    );
  // itree = 821
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719857,0.00122607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0945278,-161654) , 
7, 222.8, 1, 0, 0.56105,0.0599172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664412,0.00283199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212637,-0.00533801) , 
0, 413.214, 1, 0, 0.625971,0.13153) , 
2, 9.09905, 1, 0, 0.605343,0.108775) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0814027,1.60684e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.11714e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.94497e+28) , 
8, 216.72, 1, 0, 0,-0.0292083) , 
3, 0.121119, 1, 0, 0.0227437,-0.005651) , 
6, 173.918, 1, 0, 0.521313,0.0922712)    );
  // itree = 822
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.289718) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.20314e+19) , 
7, 217.371, 1, 0, 0,-0.104388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859718,0.000800632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106742,-3.29559) , 
7, 198.154, 1, 0, 0.526242,0.0275966) , 
0, 148.165, 1, 0, 0.476023,0.0150013) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.415443,0.000229424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585194,0.00236059) , 
4, 0.403722, 1, 0, 0.46781,0.0443217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.813322,0.00242118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.01253e+29) , 
7, 248.949, 1, 0, 0.597426,0.159088) , 
9, 0.977868, 1, 0, 0.521807,0.0921328) , 
3, 0.28261, 1, 0, 0.493168,0.0438858)    );
  // itree = 823
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.762341,0.00159663) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.52852e+30) , 
8, 117.99, 1, 0, 0.661524,0.0830234) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683564,0.00186277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474633,56517.9) , 
8, 115.943, 1, 0, 0.628128,0.210881) , 
4, 0.201861, 1, 0, 0.645476,0.144464) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339527,-2.72946e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.61124e+29) , 
8, 185.9, 1, 0, 0.152306,-0.048984) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110088,1.4577e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103775,-3.82636e+29) , 
8, 169.714, 1, 0, 0.105114,0.0109861) , 
5, 193.742, 1, 0, 0.122867,-0.0115736) , 
1, 232.912, 1, 0, 0.530969,0.110275)    );
  // itree = 824
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.405815,0.00114683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633162,-0.00152274) , 
0, 156.557, 1, 0, 0.570526,-0.013707) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535561,0.00333859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.691001,0.00221606) , 
0, 142.188, 1, 0, 0.667238,0.142082) , 
2, 7.48998, 1, 0, 0.653144,0.119377) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.29171e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.45294e+29) , 
9, 0.941949, 1, 0, 0,-0.0419941) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0570655,-2.34888e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.7332e+29) , 
4, 0.444094, 1, 0, 0.0464597,-0.00430212) , 
8, 156.411, 1, 0, 0.0354699,-0.0132179) , 
7, 322.65, 1, 0, 0.519001,0.0905811)    );
  // itree = 825
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738092,0.00127544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653322,-0.0057175) , 
4, 0.605227, 1, 0, 0.730338,0.0693908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.286086,0.0337159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547707,0.0377183) , 
2, 11.0352, 1, 0, 0.414283,0.315454) , 
8, 109.656, 1, 0, 0.643529,0.136976) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.100028,1.99167e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0381798,-9.89801e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.1974e+30) , 
4, 0.44409, 1, 0, 0.030803,-0.0132398) , 
5, 139.172, 1, 0, 0.039677,-0.00103189) , 
7, 286.239, 1, 0, 0.462684,0.0956448)    );
  // itree = 826
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697803,0.00105129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724981,0.00325208) , 
4, 0.126752, 1, 0, 0.717554,0.166116) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.54401,-0.00230947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583807,0.0014143) , 
1, 147.141, 1, 0, 0.56342,-0.0212977) , 
4, 0.444094, 1, 0, 0.694874,0.138538) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.92404e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0686252,-4.43875e+29) , 
8, 161.072, 1, 0, 0.0415092,-0.0179091) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.30303e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132746,2.0934e+30) , 
9, 0.985073, 1, 0, 0.0433576,0.0390883) , 
8, 308.924, 1, 0, 0.0420379,-0.00160672) , 
7, 291.925, 1, 0, 0.527536,0.102616)    );
  // itree = 827
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0916761,-0.023609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.463427,0.000591884) , 
1, 117.346, 1, 0, 0.413808,-0.000305562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681286,0.00218205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664355,0.000191482) , 
2, 9.91111, 1, 0, 0.677764,0.0958209) , 
9, 0.977906, 1, 0, 0.54415,0.0471619) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.422315,0.00457223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.652642,0.00612391) , 
3, 0.403644, 1, 0, 0.463114,0.148143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15538,-0.00504593) , 
3, 0.56522, 1, 0, 0.436883,0.129885) , 
2, 10.9533, 1, 0, 0.489716,0.0891408)    );
  // itree = 828
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.312844,-0.00291078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519265,-0.00067596) , 
8, 47.0837, 1, 0, 0.413024,-0.0594359) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795729,0.00214919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.437425,0.00279894) , 
8, 91.2738, 1, 0, 0.665743,0.127122) , 
8, 55.9281, 1, 0, 0.646666,0.11304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.11679,1.71722e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.76438e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.17261e+29) , 
9, 0.985072, 1, 0, 0,-0.00734165) , 
1, 145.429, 1, 0, 0.0124873,0.00373797) , 
8, 148.72, 1, 0, 0.488453,0.0857715)    );
  // itree = 829
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.597651,0.00190622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.398792,-0.00290026) , 
0, 266.702, 1, 0, 0.535846,0.0671349) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618358,0.00656472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.568169,0.00214369) , 
3, 0.224965, 1, 0, 0.589483,0.193278) , 
3, 0.121119, 1, 0, 0.575335,0.160005) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.103999,-1.70059e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
7, 471.888, 1, 0, 0.0450062,-0.00324085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.98136e+29) , 
9, 0.977969, 1, 0, 0.0303832,-0.00731) , 
1, 348.478, 1, 0, 0.514836,0.14143)    );
  // itree = 830
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.497967,0.0010948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.34189,-0.00684423) , 
4, 0.605583, 1, 0, 0.485385,0.0523931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587945,0.00195229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.635517,0.00656244) , 
3, 0.403718, 1, 0, 0.599074,0.109405) , 
2, 10.9533, 1, 0, 0.545356,0.082467) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.63371e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.20239e+28) , 
8, 194.525, 1, 0, 0,-0.00597661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.61028e+29) , 
2, 25.3244, 1, 0, 0,-0.0135658) , 
5, 255.688, 1, 0, 0.450385,0.0657435)    );
  // itree = 831
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.081828,-0.392294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.664589,0.000860013) , 
2, 6.8659, 1, 0, 0.434978,-0.0221969) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694846,0.00221684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470194,0.0339716) , 
1, 207.385, 1, 0, 0.655172,0.153561) , 
2, 7.66551, 1, 0, 0.628002,0.131874) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.67006e+29) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.48177e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.04274e+29) , 
4, 0.484466, 1, 0, 0,-0.0022079) , 
8, 152.035, 1, 0, 0,-0.00888232) , 
7, 349.025, 1, 0, 0.505213,0.104353)    );
  // itree = 832
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795594,0.00173827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.13246) , 
8, 106.596, 1, 0, 0.619801,0.157796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664958,0.0183958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.824916,0.00626191) , 
9, 0.957017, 1, 0, 0.771222,0.463824) , 
2, 11.4828, 1, 0, 0.683267,0.286063) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524175,0.00258717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.30284,0.000332951) , 
4, 0.201859, 1, 0, 0.433183,0.063789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.452155,-0.000785615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.645013,0.00491838) , 
3, 0.121073, 1, 0, 0.605044,0.216674) , 
9, 0.992347, 1, 0, 0.47985,0.105303) , 
6, 75.519, 1, 0, 0.529328,0.14927)    );
  // itree = 833
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698846,0.00224403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146266,-3.039e+30) , 
8, 123.945, 1, 0, 0.662723,0.126588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.578818,9.0742e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503868,7.48978e+30) , 
8, 133.114, 1, 0, 0.544677,0.435782) , 
1, 233.168, 1, 0, 0.653947,0.149576) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.92147e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.18225e+29) , 
8, 170.004, 1, 0, 0,-0.0161256) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.52429e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.65558e+28) , 
3, 0.403503, 1, 0, 0,-0.00099874) , 
7, 404.808, 1, 0, 0,-0.00853242) , 
8, 148.72, 1, 0, 0.495735,0.111324)    );
  // itree = 834
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.651108,0.00241128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117112,0.0230409) , 
6, 138.89, 1, 0, 0.547857,0.125487) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.72692e+16) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.108178,-2.59382e+29) , 
1, 289.814, 1, 0, 0.0664508,-0.0276175) , 
0, 542.722, 1, 0, 0.513362,0.114516) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.298347,-0.0114501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.411387,-0.0432244) , 
0, 283.782, 1, 0, 0.353478,-0.0806399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484592,0.000637892) , 
3, 0.363356, 1, 0, 0.391395,-0.0521604) , 
4, 0.605583, 1, 0, 0.502541,0.0997293)    );
  // itree = 835
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.601582,8.62427e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.450952,-0.00251213) , 
9, 0.934816, 1, 0, 0.523933,-0.0325742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392737,0.000683028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.627561,0.0033145) , 
9, 0.884444, 1, 0, 0.601149,0.149194) , 
3, 0.0807457, 1, 0, 0.595068,0.13488) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.72472e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.95152e+28) , 
9, 0.985103, 1, 0, 0,-0.000887117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.13902e+29) , 
4, 0.483957, 1, 0, 0,-0.00365132) , 
8, 202.273, 1, 0, 0.501693,0.113142)    );
  // itree = 836
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344127,-0.00277354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.612792,0.000762585) , 
4, 0.0922359, 1, 0, 0.517197,0.00650556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624397,0.00269542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0784561,1.01352e+30) , 
1, 232.612, 1, 0, 0.506442,0.117213) , 
4, 0.121117, 1, 0, 0.508809,0.0928511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.632276,1.12079e+31) , 
2, 41.7723, 1, 0, 0.513439,0.105303)    );
  // itree = 837
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538086,0.0330411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685357,0.00326622) , 
1, 57.1825, 1, 0, 0.624093,0.32092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690155,0.00166522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423287,0.02568) , 
6, 154.01, 1, 0, 0.66012,0.11967) , 
1, 74.681, 1, 0, 0.656925,0.137519) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.90054e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.50332e+29) , 
4, 0.524732, 1, 0, 0,-0.00474899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.3503e+30) , 
2, 26.5966, 1, 0, 0,-0.0138697) , 
7, 345.596, 1, 0, 0.534342,0.109269)    );
  // itree = 838
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625827,0.00101546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81432,0.0038695) , 
6, 50.2422, 1, 0, 0.741024,0.280253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.624751,0.0014488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.433283,0.00870772) , 
1, 199.581, 1, 0, 0.606764,0.085637) , 
6, 62.0552, 1, 0, 0.626854,0.114758) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268272,-4.12973e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0547806,-2.48684e+29) , 
8, 172.061, 1, 0, 0.114381,-0.0354708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239721,3.93933e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121688,-4.43604e+29) , 
9, 0.996467, 1, 0, 0.181526,0.0971634) , 
9, 0.992353, 1, 0, 0.129535,-0.00553706) , 
1, 232.612, 1, 0, 0.513556,0.0873526)    );
  // itree = 839
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.59808,0.00202705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.489952,0.0158422) , 
0, 359.722, 1, 0, 0.592339,0.116005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0703456,-0.011367) , 
0, 397.49, 1, 0, 0.565902,0.107544) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0805201,-72.4746) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.252629,-1.80696e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.122273,-3.93949e+29) , 
4, 0.20182, 1, 0, 0.193873,-0.0134103) , 
1, 286.643, 1, 0, 0.150052,-0.0381048) , 
0, 490.576, 1, 0, 0.524865,0.0931716)    );
  // itree = 840
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716237,0.00242684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.704522,0.00162194) , 
6, 73.8411, 1, 0, 0.707593,0.123812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0445797,-7.78858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.151842,3.71748e+30) , 
8, 121.647, 1, 0, 0.088405,0.000934598) , 
6, 144.647, 1, 0, 0.618353,0.106102) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.07433,-2.97831e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155954,2.12847e+30) , 
4, 0.161458, 1, 0, 0.121772,-0.00563589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273847,3.99616e+30) , 
4, 0.565211, 1, 0, 0.143845,0.0178371) , 
1, 223.398, 1, 0, 0.495463,0.0832432)    );
  // itree = 841
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781863,0.00323313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752711,0.00293584) , 
6, 77.3095, 1, 0, 0.765887,0.274851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814159,0.00078729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710495,0.00529284) , 
7, 181.284, 1, 0, 0.785954,0.106708) , 
9, 0.913174, 1, 0, 0.780695,0.150771) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227289,160.746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0343065,-3.33921e+29) , 
1, 286.643, 1, 0, 0.162697,0.0895663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.351749,-128721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0675852,-2.54587e+06) , 
4, 0.422949, 1, 0, 0.169887,-0.0417246) , 
4, 0.322977, 1, 0, 0.164845,0.0503361) , 
7, 209.619, 1, 0, 0.49561,0.104278)    );
  // itree = 842
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596981,0.00197561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0775207,1.89254e+30) , 
1, 286.643, 1, 0, 0.514733,0.0875954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417012,-0.00814753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.304824,0.000771503) , 
1, 170.479, 1, 0, 0.356387,-0.0455526) , 
3, 0.686339, 1, 0, 0.505809,0.0800915) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.3643,-3.01058e+30) , 
2, 34.0676, 1, 0, 0.500846,0.0729125)    );
  // itree = 843
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.758187,0.00199681) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558495,0.00407048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.43997,0.00130738) , 
4, 0.161489, 1, 0, 0.492269,0.0758313) , 
7, 137.972, 1, 0, 0.514428,0.0916257) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258133,-0.00509411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.292938,-0.000792147) , 
1, 146.977, 1, 0, 0.282071,-0.0408081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.547683,0.00318084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377007,-0.00441565) , 
3, 0.681472, 1, 0, 0.455885,0.055532) , 
3, 0.578724, 1, 0, 0.354487,-0.00067016) , 
3, 0.28261, 1, 0, 0.46872,0.0652496)    );
  // itree = 844
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.915859,0.0023176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.731888,0.000710008) , 
4, 0.121117, 1, 0, 0.804492,0.10003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0437554,-23.8922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0870171,8.3177e+30) , 
8, 152.035, 1, 0, 0.0695483,-0.00859724) , 
7, 197.982, 1, 0, 0.475932,0.0514677) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.446064,0.00105523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672708,0.00291869) , 
9, 0.992252, 1, 0, 0.519856,0.0939014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599754,8.21145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.525031,0.00917762) , 
3, 0.572957, 1, 0, 0.563859,0.382757) , 
4, 0.403722, 1, 0, 0.531325,0.169193) , 
3, 0.403729, 1, 0, 0.489642,0.0806061)    );
  // itree = 845
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79426,0.00322812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764366,0.00150007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435943,-0.00375856) , 
8, 93.7447, 1, 0, 0.711967,0.0689062) , 
6, 62.0552, 1, 0, 0.725156,0.103021) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0238834,-4.23143e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190428,1.408e+30) , 
9, 0.9375, 1, 0, 0.111579,-0.0144839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.377475,6.50003e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.182789,-1.52264e+30) , 
7, 294.87, 1, 0, 0.266897,0.0812018) , 
9, 0.992288, 1, 0, 0.148735,0.00840634) , 
8, 116.197, 1, 0, 0.520773,0.0694734)    );
  // itree = 846
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.782502,0.00119814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.788474,0.00522699) , 
7, 180.471, 1, 0, 0.784415,0.144589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24615,0.701622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.366504,7.38262e+30) , 
5, 290.676, 1, 0, 0.257359,0.0472324) , 
7, 202.099, 1, 0, 0.575197,0.105943) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.10521e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0893344,-6.6267e+29) , 
9, 0.985165, 1, 0, 0.0270028,-0.00909134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.73617e+30) , 
2, 26.3628, 1, 0, 0.0218798,-0.0239077) , 
7, 403.992, 1, 0, 0.48966,0.085869)    );
  // itree = 847
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.709363,0.00284848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.697137,0.00234562) , 
6, 67.9453, 1, 0, 0.699808,0.148118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37319,0.00916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0799131,-3.00665e+10) , 
5, 101.521, 1, 0, 0.134058,-0.0026312) , 
6, 144.647, 1, 0, 0.603742,0.12252) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114567,-1.5064e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.49986e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.69148e+29) , 
4, 0.444094, 1, 0, 0,-0.0126393) , 
8, 182.786, 1, 0, 0.0227435,-0.0237658) , 
1, 286.343, 1, 0, 0.512701,0.0995976)    );
  // itree = 848
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.704418,2.00165e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.659289,0.00312996) , 
5, 109.83, 1, 0, 0.673427,0.0977097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.548714,1.27459e+31) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.224957,1.88087e+30) , 
8, 140.337, 1, 0, 0.399147,0.312981) , 
8, 133.285, 1, 0, 0.648761,0.117069) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0467453,-1.41457e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.116339,-3.59683e+29) , 
3, 0.161319, 1, 0, 0.0880833,-0.016558) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0900837,2.1316e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.30128e+29) , 
4, 0.161489, 1, 0, 0.0363006,0.0253143) , 
8, 275.593, 1, 0, 0.0688602,-0.00101385) , 
8, 152.035, 1, 0, 0.505552,0.0879082)    );
  // itree = 849
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.739079,0.00151041) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.589677,0.00539754) , 
8, 107.454, 1, 0, 0.723382,0.0991663) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.117091,1.34266e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102013,-2.73752e+30) , 
3, 0.120628, 1, 0, 0.106687,-0.0203875) , 
8, 121.647, 1, 0, 0.646287,0.0842206) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.279824,-5.99972e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202826,-5.97399e+29) , 
8, 153.341, 1, 0, 0.236111,-0.0829805) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.68549e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.20662e+29) , 
9, 0.985165, 1, 0, 0,-0.0108237) , 
8, 207.886, 1, 0, 0.11427,-0.0457453) , 
1, 223.398, 1, 0, 0.523465,0.0542164)    );
  // itree = 850
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.571068,0.00289103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.559808,0.000579493) , 
3, 0.484474, 1, 0, 0.569152,0.122079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.44563e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.56069e+29) , 
9, 0.985072, 1, 0, 0,-0.0139753) , 
1, 348.193, 1, 0, 0.506894,0.107196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.351532,-0.0189877) , 
4, 0.726699, 1, 0, 0.499798,0.0964772)    );
  // itree = 851
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.636004,0.000651089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581866,0.00517432) , 
5, 101.521, 1, 0, 0.595874,0.214759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66501,0.00170846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649401,0.00101797) , 
1, 118.155, 1, 0, 0.654921,0.0806014) , 
9, 0.913218, 1, 0, 0.638778,0.11728) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0213694,-8.14879e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0428268,-1.49685e+30) , 
9, 0.98516, 1, 0, 0.0278183,-0.0146311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237063,1.91874e+30) , 
2, 26.5574, 1, 0, 0.0519908,-0.0021999) , 
8, 148.72, 1, 0, 0.483275,0.0856169)    );
  // itree = 852
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715561,0.0011607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683376,0.00473231) , 
0, 361.198, 1, 0, 0.713149,0.0867018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671082,4.80876e+11) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.345446,5316.47) , 
3, 0.161491, 1, 0, 0.536275,0.469306) , 
0, 420.283, 1, 0, 0.694442,0.127168) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424553,6.36174e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11796,-8.37312e+29) , 
8, 147.333, 1, 0, 0.264652,0.144766) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0733322,-6.24514e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233119,3.90572e+30) , 
3, 0.686188, 1, 0, 0.0888121,-0.0117581) , 
1, 145.429, 1, 0, 0.117111,0.0134318) , 
8, 119.673, 1, 0, 0.493983,0.0876771)    );
  // itree = 853
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590008,0.00204362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717389,0.00950988) , 
2, 25.9696, 1, 0, 0.598318,0.120099) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0516343,-1.59055e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.49242e+28) , 
1, 286.643, 1, 0, 0.0306156,-0.0222663) , 
6, 184.772, 1, 0, 0.525568,0.101855) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.24617,-0.0164944) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.358672,-0.014678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.428074,0.000369812) , 
2, 9.21438, 1, 0, 0.40942,-0.0143928) , 
1, 115.135, 1, 0, 0.382719,-0.0424649) , 
4, 0.444094, 1, 0, 0.50185,0.0778936)    );
  // itree = 854
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.523476,0.00707244) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.537756,0.00827469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197429,0.000696381) , 
3, 0.161319, 1, 0, 0.384089,0.202716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498314,0.00285788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.556459,0.000785021) , 
9, 0.917342, 1, 0, 0.540408,0.0545606) , 
0, 148.615, 1, 0, 0.518167,0.0756399) , 
9, 0.855666, 1, 0, 0.518332,0.0851283)    );
  // itree = 855
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.194475,0.000445671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.156457,-0.00639046) , 
2, 11.868, 1, 0, 0.176883,-0.0239257) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.585349,0.00316419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.72977e+28) , 
1, 428.79, 1, 0, 0.543698,0.129468) , 
9, 0.884444, 1, 0, 0.507533,0.114344) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116178,-0.0316155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333721,0.000299563) , 
6, 118.324, 1, 0, 0.254652,-0.0630439) , 
4, 0.605583, 1, 0, 0.488845,0.101235)    );
  // itree = 856
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629867,0.00245607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0194872,4.92501e+29) , 
1, 230.278, 1, 0, 0.498969,0.0953923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.336421,-0.00650506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.603451,0.000181757) , 
9, 0.970695, 1, 0, 0.477308,-0.0288562) , 
3, 0.484474, 1, 0, 0.495529,0.075664) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174804,-0.0278893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713584,0.000756159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0677749,-1.43386) , 
5, 132.908, 1, 0, 0.409573,-0.00416923) , 
2, 10.2266, 1, 0, 0.338028,-0.0392865) , 
4, 0.484466, 1, 0, 0.473769,0.0597822)    );
  // itree = 857
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488586,0.000627507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.529374,0.0141665) , 
2, 23.056, 1, 0, 0.490099,0.0314806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196773,5.62575e+30) , 
0, 622.801, 1, 0, 0.475047,0.0394103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.809857,0.0243026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.45105e+29) , 
7, 354.378, 1, 0, 0.540105,0.238937) , 
2, 26.3628, 1, 0, 0.481678,0.0597455)    );
  // itree = 858
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.725905,0.00228599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0326347,-2.36188e+29) , 
8, 163.639, 1, 0, 0.625103,0.11796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0380236,-1.47226e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114418,1.81217e+30) , 
3, 0.444102, 1, 0, 0.0548013,0.00391542) , 
6, 173.918, 1, 0, 0.544772,0.101896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526012,0.00242962) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.460777,-0.0066805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22001,0.000165459) , 
6, 117.503, 1, 0, 0.340504,-0.0438765) , 
9, 0.884507, 1, 0, 0.380409,-0.0169386) , 
4, 0.484466, 1, 0, 0.522107,0.0855088)    );
  // itree = 859
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.71619,0.00131523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.740295,0.00956755) , 
1, 186.838, 1, 0, 0.71907,0.117998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.719864,0.00786236) , 
2, 26.3628, 1, 0, 0.719146,0.141847) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0725968,-3.54739e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0290637,-1.91526e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141955,7.06819e+30) , 
3, 0.161456, 1, 0, 0.0979052,0.0247443) , 
1, 146.723, 1, 0, 0.0945033,0.00667347) , 
8, 116.197, 1, 0, 0.496749,0.0937201)    );
  // itree = 860
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438028,0.00034082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.629664,0.00545142) , 
4, 0.565206, 1, 0, 0.474366,0.0602716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695954,0.0019691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.640678,0.00679657) , 
6, 112.718, 1, 0, 0.677805,0.169567) , 
9, 0.95638, 1, 0, 0.601865,0.128769) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240392,4.56602e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.4402e+29) , 
3, 0.161491, 1, 0, 0.113626,0.0781806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0740493,-1.41587e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.38524e+30) , 
4, 0.403485, 1, 0, 0.0570387,-0.0337314) , 
9, 0.920396, 1, 0, 0.0773029,0.00634527) , 
6, 157.783, 1, 0, 0.503162,0.105733)    );
  // itree = 861
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705419,0.00244587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646439,0.0177514) , 
0, 376.157, 1, 0, 0.702095,0.157252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.09415e+29) , 
7, 275.561, 1, 0, 0.657879,0.145628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121395,2.35168e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173082,-1.78152e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.32661e+29) , 
8, 152.035, 1, 0, 0.0523666,-0.0169284) , 
0, 165.91, 1, 0, 0.0605645,-0.000964164) , 
7, 313.108, 1, 0, 0.51347,0.110188)    );
  // itree = 862
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.606366,0.00202296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.577982,0.00923722) , 
3, 0.184542, 1, 0, 0.601236,0.137368) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.408137,-1.66142e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0608889,-7.31898e+29) , 
7, 360.789, 1, 0, 0.174735,-0.0380239) , 
0, 404.504, 1, 0, 0.540361,0.112334) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.466063,-7.04047e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112899,-0.61266) , 
3, 0.646081, 1, 0, 0.41461,-0.0223518) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.503539,0.00425326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45476,-0.00227389) , 
1, 143.896, 1, 0, 0.471505,0.0688022) , 
2, 15.5924, 1, 0, 0.433287,0.00757072) , 
3, 0.242237, 1, 0, 0.502402,0.0751944)    );
  // itree = 863
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418177,-0.00140475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.548716,0.00972747) , 
9, 0.992253, 1, 0, 0.449219,0.0247327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.629703,0.0078312) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531261,0.00413819) , 
4, 0.155736, 1, 0, 0.552125,0.189494) , 
4, 0.121117, 1, 0, 0.532734,0.158447) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.814592,0.00176213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.646295,0.000911656) , 
8, 78.1836, 1, 0, 0.701653,0.0921954) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526457,0.00232038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.119161,-0.0645918) , 
6, 75.519, 1, 0, 0.213452,-0.0205039) , 
5, 132.012, 1, 0, 0.477347,0.0404154) , 
3, 0.242237, 1, 0, 0.511947,0.114149)    );
  // itree = 864
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692143,0.00301026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684976,0.0011089) , 
9, 0.905986, 1, 0, 0.686893,0.101598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.694868,116.818) , 
0, 371.284, 1, 0, 0.687545,0.128985) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.22075,4.36245e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153741,1.70369e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0185661,-1.85173e+30) , 
6, 90.8603, 1, 0, 0.0423142,-0.000879515) , 
1, 118.564, 1, 0, 0.0639162,0.022007) , 
7, 291.925, 1, 0, 0.522588,0.100688)    );
  // itree = 865
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.550297,0.00202665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.424978,-0.00110684) , 
1, 61.3099, 1, 0, 0.454408,-0.0093502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681324,0.00354831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129297,4.51024e+30) , 
1, 223.758, 1, 0, 0.514625,0.125168) , 
1, 115.45, 1, 0, 0.502993,0.0991825) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.44473,-0.00451015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.121001,-3.70684e+29) , 
7, 288.997, 1, 0, 0.29695,-0.0537345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620254,0.0085273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491912,-9.87346e-06) , 
9, 0.948141, 1, 0, 0.51682,0.0268023) , 
9, 0.927604, 1, 0, 0.45401,0.00379562) , 
3, 0.322983, 1, 0, 0.489313,0.0725431)    );
  // itree = 866
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718638,0.00564927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.717846,0.00160589) , 
2, 7.45161, 1, 0, 0.717963,0.134778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.73648,0.0107465) , 
2, 25.3244, 1, 0, 0.720074,0.161153) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225287,-44.6873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.14648e+29) , 
8, 200.528, 1, 0, 0.129134,-0.041644) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-10116.4) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220426,0.141832) , 
3, 0.161456, 1, 0, 0.145618,0.0602259) , 
4, 0.201861, 1, 0, 0.137466,0.00984641) , 
8, 113.273, 1, 0, 0.505561,0.105443)    );
  // itree = 867
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524259,0.00299765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.758686,0.00118907) , 
1, 100.212, 1, 0, 0.714312,0.0958977) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618818,612.878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.16925e+29) , 
6, 159.671, 1, 0, 0.374816,0.321457) , 
0, 370.475, 1, 0, 0.675481,0.121697) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107718,-3.87109e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0340022,-1.2943e+30) , 
7, 261.579, 1, 0, 0.0505774,-0.0291849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.38403,6.89319e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.61641e+30) , 
1, 230.278, 1, 0, 0.191561,0.10213) , 
9, 0.992351, 1, 0, 0.0824341,0.000487122) , 
8, 119.673, 1, 0, 0.464015,0.0784767)    );
  // itree = 868
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.522783,0.0047561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.665987,0.00190782) , 
1, 96.84, 1, 0, 0.636968,0.132765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570179,0.0113822) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.653115,0.25775) , 
3, 0.201864, 1, 0, 0.616712,0.400122) , 
1, 201.455, 1, 0, 0.635236,0.155629) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.36409e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.245841,3.8024e+30) , 
4, 0.153593, 1, 0, 0.0844905,0.0300615) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109992,-2.11528e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0368932,-9.54076e+29) , 
8, 163.987, 1, 0, 0.0536242,-0.0369744) , 
4, 0.201861, 1, 0, 0.0688785,-0.00384486) , 
1, 222.549, 1, 0, 0.499262,0.117342)    );
  // itree = 869
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.681086,0.00227375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.367566,0.0013488) , 
6, 119.841, 1, 0, 0.593607,0.0995007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439104,9.31881e+30) , 
0, 526.751, 1, 0, 0.587628,0.110945) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.86553e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.3591e+29) , 
9, 0.98516, 1, 0, 0,-0.00526098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.93922e+29) , 
2, 26.3628, 1, 0, 0,-0.0127363) , 
7, 426.338, 1, 0, 0.509585,0.0945186)    );
  // itree = 870
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.488285,-0.000941662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.776232,0.00185552) , 
8, 71.8031, 1, 0, 0.707993,0.0821138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116509,0.00631082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0698906,-0.0219553) , 
9, 0.944405, 1, 0, 0.0969099,-0.0031501) , 
8, 102.34, 1, 0, 0.44617,0.0455818) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785279,0.00134704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.549904,160.323) , 
1, 188.008, 1, 0, 0.706074,0.22985) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480458,0.00225912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.395708,-0.000356059) , 
0, 179.036, 1, 0, 0.423457,0.052358) , 
4, 0.161489, 1, 0, 0.576199,0.148285) , 
9, 0.992347, 1, 0, 0.478114,0.0708126)    );
  // itree = 871
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644279,0.00878189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.597738,0.00169015) , 
4, 0.242233, 1, 0, 0.623811,0.353819) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.58003e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.23548e+30) , 
9, 0.949115, 1, 0, 0,-0.045344) , 
8, 118.498, 1, 0, 0.418617,0.22252) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.485448,0.00116391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405636,-0.00219196) , 
2, 18.6581, 1, 0, 0.466969,0.0264628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.750464,0.00304654) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.15509,-1.83808e+30) , 
1, 228.821, 1, 0, 0.629718,0.0972632) , 
9, 0.985154, 1, 0, 0.527926,0.0529806) , 
0, 148.165, 1, 0, 0.51093,0.079342)    );
  // itree = 872
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.619201,0.0174741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615336,0.00356773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52759,0.00183644) , 
3, 0.242237, 1, 0, 0.584572,0.12374) , 
1, 51.3031, 1, 0, 0.585809,0.136467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.342193,-9.60085e+29) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.95115e+29) , 
4, 0.322977, 1, 0, 0,-0.00353639) , 
7, 401.473, 1, 0, 0.124705,-0.0133073) , 
1, 348.478, 1, 0, 0.530648,0.11855)    );
  // itree = 873
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.697708,0.00198602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.636256,0.0283039) , 
6, 154.659, 1, 0, 0.692972,0.125568) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.43482e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.54751e+30) , 
0, 264.358, 1, 0, 0,-0.0428571) , 
7, 266.295, 1, 0, 0.631944,0.110735) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.86525e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.02001e+29) , 
2, 26.3628, 1, 0, 0,-0.00860046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.20158e+30) , 
4, 0.444094, 1, 0, 0,-0.0144372) , 
7, 315.988, 1, 0, 0.479981,0.0806349)    );
  // itree = 874
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.658258,0.00285873) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668215,0.00186565) , 
5, 61.8366, 1, 0, 0.667478,0.116988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615236,1.02226e+31) , 
0, 429.049, 1, 0, 0.665283,0.130581) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.20135e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134136,2.17807e+30) , 
4, 0.403168, 1, 0, 0.0360933,0.0288455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0981252,-7.5707e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.16236e+30) , 
4, 0.444094, 1, 0, 0.0806236,-0.0189266) , 
0, 329.399, 1, 0, 0.063327,-0.000370814) , 
7, 315.988, 1, 0, 0.526291,0.100345)    );
  // itree = 875
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653184,0.00103642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.615471,0.00430832) , 
2, 8.88289, 1, 0, 0.626312,0.15371) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0335697,-2.14038e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136471,5.6781e+30) , 
2, 11.1695, 1, 0, 0.0923495,0.025541) , 
1, 234.069, 1, 0, 0.50832,0.125388) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.407238,-0.00931727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.638567,0.000303698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.334947,-1.36605) , 
3, 0.289934, 1, 0, 0.506954,-0.0277877) , 
3, 0.160093, 1, 0, 0.468282,-0.0525849) , 
4, 0.605583, 1, 0, 0.50431,0.107562)    );
  // itree = 876
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.639812,0.0015443) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205264,-2.98938e+30) , 
0, 409.109, 1, 0, 0.604829,0.0738347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.118535,-0.0101908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.214026,4.77319e+30) , 
6, 328.461, 1, 0, 0.131914,-0.0073678) , 
6, 130.279, 1, 0, 0.467023,0.0501727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745068,0.00513795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.56702e+29) , 
7, 251.993, 1, 0, 0.498093,0.16217) , 
3, 0.645966, 1, 0, 0.470116,0.0613217)    );
  // itree = 877
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.740776,0.00153575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.095591,-1.26157) , 
7, 194.665, 1, 0, 0.423911,0.0565065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.220062,-0.00796902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628554,0.0170138) , 
9, 0.897312, 1, 0, 0.507527,0.272428) , 
2, 18.6581, 1, 0, 0.445083,0.111178) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.287862,-0.00892812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4151,0.000251279) , 
4, 0.403722, 1, 0, 0.319824,-0.0495966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.392293,-0.00076514) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.599897,0.00180321) , 
1, 115.875, 1, 0, 0.569603,0.0482837) , 
9, 0.974903, 1, 0, 0.511878,0.0256631) , 
9, 0.941992, 1, 0, 0.484575,0.0606184)    );
  // itree = 878
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.481505,-0.000537585) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.650897,0.00318699) , 
8, 66.9787, 1, 0, 0.634466,0.154705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.213876,-1.99988e+30) , 
0, 499.448, 1, 0, 0.612221,0.143011) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0633813,-1.49163e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27877,4.23741e+30) , 
9, 0.915238, 1, 0, 0.145635,0.043491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.163855,-1.85078e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.28826e+29) , 
5, 187.669, 1, 0, 0.0681426,-0.0327954) , 
9, 0.941949, 1, 0, 0.105026,0.00351449) , 
6, 157.783, 1, 0, 0.516398,0.116656)    );
  // itree = 879
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253885,-0.00381525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634457,0.00319438) , 
9, 0.884444, 1, 0, 0.599748,0.131372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.27105e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11828,-8.10451e+29) , 
6, 297.802, 1, 0, 0.0300291,-0.0132607) , 
7, 365.809, 1, 0, 0.497015,0.105291) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.087393,-0.0423151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517459,-0.000536402) , 
2, 15.2969, 1, 0, 0.29612,-0.115809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424814,-0.000639669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.503688,0.00332644) , 
4, 0.201861, 1, 0, 0.46866,0.0382823) , 
1, 143.896, 1, 0, 0.426128,0.000297809) , 
3, 0.322983, 1, 0, 0.477343,0.0761552)    );
  // itree = 880
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.687163,0.00129615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248098,1.58873e+31) , 
7, 249.58, 1, 0, 0.60756,0.0954779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659375,0.119062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.619259,0.00209808) , 
9, 0.977871, 1, 0, 0.646362,0.267136) , 
0, 357.977, 1, 0, 0.61355,0.121979) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.053165,-4.99138e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.47026e+29) , 
2, 27.0285, 1, 0, 0.0441133,-0.0115263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0855039,2.01433e+30) , 
9, 0.992253, 1, 0, 0.0518523,0.0046514) , 
7, 349.025, 1, 0, 0.493083,0.0968155)    );
  // itree = 881
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730626,0.00410297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.6036,0.00127382) , 
0, 120.89, 1, 0, 0.662433,0.257307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.812344,0.000310715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747707,0.00320089) , 
2, 8.88289, 1, 0, 0.764633,0.109126) , 
0, 191.014, 1, 0, 0.736775,0.149519) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134854,1042.25) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127993,-748.599) , 
4, 0.161456, 1, 0, 0.130798,-0.0129396) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.549496,0.0924714) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.5105e+30) , 
1, 232.292, 1, 0, 0.311764,0.0648476) , 
9, 0.992353, 1, 0, 0.173738,0.00551828) , 
8, 113.273, 1, 0, 0.532169,0.0971894)    );
  // itree = 882
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652197,0.00984106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.676444,0.00260014) , 
1, 68.5612, 1, 0, 0.674367,0.165226) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0958908,-2.63474e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0661895,1.7189e+30) , 
8, 172.061, 1, 0, 0.073637,-0.00999035) , 
1, 226.869, 1, 0, 0.547082,0.128101) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.357069,-0.000532549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.686446,0.00270273) , 
4, 0.558875, 1, 0, 0.506987,0.102086) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236606,-0.00510133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422875,-0.000417402) , 
2, 14.2556, 1, 0, 0.342144,-0.0419356) , 
2, 8.88289, 1, 0, 0.396322,0.00539906) , 
4, 0.242231, 1, 0, 0.493088,0.0841559)    );
  // itree = 883
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.611667,0.00542755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643837,0.00111015) , 
9, 0.891608, 1, 0, 0.638123,0.088931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.714447,0.00999077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.638758,162.379) , 
2, 12.0947, 1, 0, 0.684507,0.303749) , 
0, 341.57, 1, 0, 0.645032,0.120929) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.075803,-1.71204e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0327172,-2.74757e+29) , 
8, 216.72, 1, 0, 0.0527975,-0.0142844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0642614,1.44302e+30) , 
9, 0.992351, 1, 0, 0.0549224,-0.00318493) , 
7, 315.988, 1, 0, 0.498004,0.0900055)    );
  // itree = 884
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.727851,0.000361263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.830622,0.00199492) , 
9, 0.963496, 1, 0, 0.788905,0.0950426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.862696,0.00374554) , 
5, 129.031, 1, 0, 0.807417,0.127753) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344264,0.270639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0622228,-1.20666e+30) , 
5, 203.212, 1, 0, 0.219594,0.0772524) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.188393,12162.8) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0749914,-0.0115228) , 
4, 0.161489, 1, 0, 0.12097,-0.0147358) , 
6, 138.81, 1, 0, 0.169662,0.03068) , 
7, 197.982, 1, 0, 0.504956,0.0817154)    );
  // itree = 885
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.817276,0.00322242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806858,0.00141166) , 
9, 0.891608, 1, 0, 0.808922,0.137679) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.361308,-0.00191437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.423128,0.0274941) , 
9, 0.985167, 1, 0, 0.380794,0.0355554) , 
8, 91.2308, 1, 0, 0.611428,0.0905697) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274394,-1.86074e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.85355e+29) , 
5, 254.067, 1, 0, 0.142561,-0.0519972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.71141e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.17643e+29) , 
1, 289.814, 1, 0, 0,-0.0151162) , 
8, 152.544, 1, 0, 0.0633644,-0.0315088) , 
6, 173.918, 1, 0, 0.53289,0.0730758)    );
  // itree = 886
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607554,0.00246019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.698926,0.00368711) , 
3, 0.130725, 1, 0, 0.635881,0.228616) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705536,0.00228608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419483,-0.000322438) , 
8, 81.3793, 1, 0, 0.522441,0.0538998) , 
3, 0.161489, 1, 0, 0.575751,0.136006) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.726477,0.00212928) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237847,-0.0536369) , 
8, 94.5459, 1, 0, 0.486592,0.0581799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0456058,-3.25308e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.18341e+29) , 
8, 152.035, 1, 0, 0.0187564,-0.0383033) , 
6, 170.272, 1, 0, 0.348922,0.0297878) , 
6, 97.3387, 1, 0, 0.443606,0.0741262)    );
  // itree = 887
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650349,0.00019737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.783073,0.00232692) , 
5, 110.566, 1, 0, 0.729709,0.0844889) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.273224,-8894.51) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147728,2.17216e+30) , 
7, 272.792, 1, 0, 0.18508,-0.0138545) , 
5, 163.311, 1, 0, 0.605467,0.0620545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0807347,-1.018e+07) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.331095,8.17708) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0722608,-0.0484765) , 
3, 0.121119, 1, 0, 0.162405,-0.0159443) , 
9, 0.891683, 1, 0, 0.147861,-0.0279701) , 
6, 138.81, 1, 0, 0.487132,0.0387745)    );
  // itree = 888
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668427,0.000342494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770343,0.00312872) , 
5, 109.635, 1, 0, 0.732499,0.110656) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0670488,-6.03448e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0866385,1.24073e+30) , 
8, 159.793, 1, 0, 0.0757253,-0.0783534) , 
7, 249.636, 1, 0, 0.654653,0.0882532) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0165854,-6.06104e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112758,-4.58669e+29) , 
2, 26.3628, 1, 0, 0.0313749,-0.00734823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.64119e+29) , 
4, 0.565206, 1, 0, 0.0275441,-0.0122923) , 
7, 311.813, 1, 0, 0.502712,0.0638922)    );
  // itree = 889
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70453,0.00228786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444347,8.82445e+30) , 
1, 300.232, 1, 0, 0.682659,0.174087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197826,2.66533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0504807,-3.60888) , 
3, 0.161401, 1, 0, 0.114634,-0.00563012) , 
5, 143.42, 1, 0, 0.538029,0.128327) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.478775,0.00785815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552603,0.00187897) , 
9, 0.920379, 1, 0, 0.53145,0.0903452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.776026,0.000587965) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168883,-3.71738e+30) , 
7, 223.096, 1, 0, 0.452554,-0.00524393) , 
4, 0.161489, 1, 0, 0.485618,0.034816) , 
2, 10.9533, 1, 0, 0.510093,0.0784844)    );
  // itree = 890
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671815,0.00534066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.413475,0.00137573) , 
5, 85.5716, 1, 0, 0.532938,0.244254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.398926,-0.000265511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708867,0.00255819) , 
1, 112.529, 1, 0, 0.660235,0.0931788) , 
0, 170.014, 1, 0, 0.63151,0.127269) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.68033e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264207,4.06673e+30) , 
5, 144.641, 1, 0, 0.110427,0.0762411) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0528356,-8.05406e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.65761e+29) , 
9, 0.992351, 1, 0, 0.0427884,-0.0120152) , 
7, 294.804, 1, 0, 0.058463,0.00843741) , 
8, 148.72, 1, 0, 0.475424,0.0949017)    );
  // itree = 891
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720813,0.00278432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757861,0.00110462) , 
9, 0.963496, 1, 0, 0.73844,0.136797) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.194194,0.00202902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.249012,-5.28357e+30) , 
8, 133.111, 1, 0, 0.214571,-0.0462752) , 
8, 102.517, 1, 0, 0.630413,0.0990457) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170252,-1.11301e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
7, 411.946, 1, 0, 0.09357,-0.00858477) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.108872,-1.15292e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.54725e+29) , 
5, 198.013, 1, 0, 0.048752,-0.0313075) , 
9, 0.98516, 1, 0, 0.0814317,-0.0147389) , 
8, 152.035, 1, 0, 0.483653,0.0686276)    );
  // itree = 892
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655471,0.00275998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.588366,0.000414416) , 
4, 0.322977, 1, 0, 0.637393,0.0963356) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778123,0.00397969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.130594,-4.2255e+29) , 
7, 268.435, 1, 0, 0.675145,0.224085) , 
3, 0.444102, 1, 0, 0.645491,0.123737) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145882,-2.13062e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.117425,-6.74841e+29) , 
7, 300.347, 1, 0, 0.127394,-0.0304491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.17508e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140295,2.3794e+30) , 
9, 0.98516, 1, 0, 0.0414471,0.0344775) , 
6, 158.802, 1, 0, 0.0935649,-0.00489381) , 
1, 232.612, 1, 0, 0.528614,0.0964981)    );
  // itree = 893
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582454,0.00493876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0915876,-4.09612e+29) , 
1, 334.657, 1, 0, 0.52359,0.150471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.653643,0.00101777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136296,-0.0418282) , 
5, 127.431, 1, 0, 0.411787,0.003206) , 
4, 0.444094, 1, 0, 0.503852,0.124473) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.528744,-0.000145146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.547696,0.00147272) , 
9, 0.997085, 1, 0, 0.536766,0.0422833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.336231,-0.0129986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478518,0.000586309) , 
2, 14.2371, 1, 0, 0.381772,-0.0550926) , 
4, 0.161489, 1, 0, 0.452373,-0.0107371) , 
9, 0.992288, 1, 0, 0.494375,0.0995815)    );
  // itree = 894
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.696382,0.0027932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.536775,0.00706188) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.611567,0.00268549) , 
9, 0.862863, 1, 0, 0.607414,0.104395) , 
7, 137.972, 1, 0, 0.613861,0.116945) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0763746,-7.26107e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.97358e+29) , 
9, 0.985108, 1, 0, 0.0560621,-0.00426815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.51981e+29) , 
4, 0.484466, 1, 0, 0.0457988,-0.00963139) , 
8, 210.872, 1, 0, 0.531065,0.0984962)    );
  // itree = 895
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.833681,0.00134163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425489,-0.00201049) , 
8, 95.8666, 1, 0, 0.735602,0.0678788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.831209,0.0103045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167901,1906.6) , 
7, 205.612, 1, 0, 0.67077,0.267059) , 
5, 126.905, 1, 0, 0.714371,0.133107) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0365961,-2.35227e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337498,5.88388e+30) , 
9, 0.992351, 1, 0, 0.107881,0.0690279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0826334,-9.98311e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.46118e+30) , 
9, 0.992351, 1, 0, 0.0679252,-0.0156768) , 
8, 152.035, 1, 0, 0.0816218,0.0133595) , 
7, 244.632, 1, 0, 0.481356,0.0890091)    );
  // itree = 896
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679396,0.00103992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700375,0.00893596) , 
2, 25.7859, 1, 0, 0.681438,0.0867083) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652174,0.00157503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842147,0.00499356) , 
9, 0.963491, 1, 0, 0.767377,0.28589) , 
3, 0.444102, 1, 0, 0.70145,0.133089) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0969652,-1.29251e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.56937e+30) , 
9, 0.985167, 1, 0, 0.0714184,-0.0433324) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0476173,-1.61922e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.11238,4.88881e+30) , 
4, 0.161489, 1, 0, 0.0876843,0.0199513) , 
6, 99.1275, 1, 0, 0.083012,0.00177327) , 
8, 119.512, 1, 0, 0.486901,0.087533)    );
  // itree = 897
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722144,0.00245747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606218,0.00129142) , 
6, 62.0552, 1, 0, 0.623396,0.080967) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.676043,1.22611e+31) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.13569,-2.72188e+29) , 
7, 280.919, 1, 0, 0.460172,0.273114) , 
1, 245.605, 1, 0, 0.611402,0.0950861) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173381,-5.0456e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135678,-9.95956e+29) , 
9, 0.977883, 1, 0, 0.159899,-0.0313142) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.73982e+29) , 
7, 656.165, 1, 0, 0,-0.00272542) , 
7, 412.07, 1, 0, 0.0685612,-0.0149836) , 
1, 286.343, 1, 0, 0.525856,0.0777403)    );
  // itree = 898
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.656865,0.00059856) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.44879,-0.000870068) , 
3, 0.0691769, 1, 0, 0.491833,-0.0119367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.266734,-0.00655733) , 
9, 0.992351, 1, 0, 0.4579,-0.0282103) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759212,0.0038012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197878,2.87666e+30) , 
8, 114.995, 1, 0, 0.555914,0.189972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.403485,-0.00102638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495832,0.00345514) , 
4, 0.292181, 1, 0, 0.459687,0.0526438) , 
4, 0.161456, 1, 0, 0.500965,0.111552) , 
3, 0.121119, 1, 0, 0.489604,0.0746824)    );
  // itree = 899
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.221215,0.00793066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.462724,-0.00132263) , 
0, 126.562, 1, 0, 0.436928,-0.0128872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195686,4.70623e+30) , 
6, 250.497, 1, 0, 0.409273,0.00908174) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448187,0.00262888) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.561033,0.00182661) , 
0, 140.588, 1, 0, 0.546041,0.0833208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846388,0.00800127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.55492e+29) , 
7, 241.577, 1, 0, 0.634765,0.27698) , 
3, 0.484294, 1, 0, 0.564062,0.122654) , 
9, 0.934799, 1, 0, 0.512558,0.084865)    );
  // itree = 900
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.771435,0.00403374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.742038,0.00122425) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.658589,0.0116802) , 
2, 26.3628, 1, 0, 0.735207,0.100122) , 
6, 59.4187, 1, 0, 0.739546,0.123929) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0993218,-3.6889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.10889,4.14957) , 
2, 9.84184, 1, 0, 0.101181,-0.0340943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233179,7.67244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147623,-0.0231866) , 
0, 182.181, 1, 0, 0.164222,0.0348062) , 
2, 10.9533, 1, 0, 0.137363,0.00545093) , 
8, 105.099, 1, 0, 0.49651,0.0761119)    );
  // itree = 901
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.778481,0.00156262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0698027,-1.22602) , 
8, 100.539, 1, 0, 0.559307,0.0976044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.683749,0.0123707) , 
2, 17.8191, 1, 0, 0.578006,0.140117) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.464481,0.0118304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.30534e+29) , 
7, 289.935, 1, 0, 0.24342,0.156895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.405566,0.00164559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.380386,-0.00167546) , 
4, 0.161489, 1, 0, 0.390387,-0.000976039) , 
9, 0.87725, 1, 0, 0.375412,0.0151105) , 
6, 97.3387, 1, 0, 0.456781,0.0653179)    );
  // itree = 902
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.588815,0.000561372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.779592,0.0039671) , 
9, 0.90324, 1, 0, 0.741268,0.192915) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.541708,-0.00590566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.858446,0.000515139) , 
0, 212.202, 1, 0, 0.751996,-0.0228105) , 
9, 0.992251, 1, 0, 0.743753,0.142951) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0613407,-3.97412e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0888298,4.45696e+29) , 
6, 153.264, 1, 0, 0.0776836,-0.0384027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.189094,4.48251e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110209,2.3592e+30) , 
9, 0.877302, 1, 0, 0.121205,0.0387302) , 
8, 152.035, 1, 0, 0.106314,0.0123386) , 
7, 234.843, 1, 0, 0.495224,0.0920269)    );
  // itree = 903
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863619,0.00312573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.751986,0.00197746) , 
6, 61.4397, 1, 0, 0.770801,0.147988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.38412) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.531295,0.000465157) , 
1, 171.357, 1, 0, 0.349672,-0.0599761) , 
8, 96.8438, 1, 0, 0.715918,0.120885) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0711881,-2.4426e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220579,1.16669e+31) , 
4, 0.122954, 1, 0, 0.172005,0.0518697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.100437,-1.3187e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.66331e+30) , 
4, 0.622886, 1, 0, 0.0703752,-0.0438972) , 
4, 0.322977, 1, 0, 0.143914,0.0253992) , 
8, 119.989, 1, 0, 0.519029,0.088018)    );
  // itree = 904
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865717,0.00193211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672957,0.000822765) , 
8, 90.0107, 1, 0, 0.817401,0.117659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253751,3.91406e+20) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.240985,-177.883) , 
6, 91.639, 1, 0, 0.244847,-0.0508919) , 
7, 201.952, 1, 0, 0.741093,0.0951954) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120441,-3.56614e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.92003e+30) , 
9, 0.985072, 1, 0, 0.0877415,-0.084576) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.102437,-7.55758e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126246,-1.17936e+30) , 
2, 31.241, 1, 0, 0.105054,-0.00731983) , 
5, 194.599, 1, 0, 0.0997034,-0.0311974) , 
7, 245.679, 1, 0, 0.517229,0.0510805)    );
  // itree = 905
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.715184,0.00344281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701167,0.00132441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781927,0.00437531) , 
1, 163.531, 1, 0, 0.725791,0.103303) , 
6, 60.3671, 1, 0, 0.724679,0.121511) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.181371,3.87978e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300695,4.02074e+30) , 
4, 0.565211, 1, 0, 0.197945,0.0470628) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162679,-3.49074e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.78509e+29) , 
7, 388.328, 1, 0, 0.0906931,-0.04775) , 
3, 0.282548, 1, 0, 0.163029,0.0161962) , 
8, 119.41, 1, 0, 0.532252,0.0854287)    );
  // itree = 906
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640609,0.00231213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725802,0.00100034) , 
9, 0.891608, 1, 0, 0.713116,0.0656583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.707745,0.0112569) , 
2, 26.3628, 1, 0, 0.712653,0.0883321) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20767,-9.51921e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106726,-1.98276e+30) , 
7, 295.723, 1, 0, 0.163286,-0.076464) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.182556,-1.57726e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102381,2.25791e+30) , 
3, 0.403503, 1, 0, 0.163994,0.00671925) , 
5, 256.435, 1, 0, 0.163571,-0.0429891) , 
8, 119.512, 1, 0, 0.516729,0.0414738)    );
  // itree = 907
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.737776,0.00419961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774075,0.00265824) , 
0, 157.156, 1, 0, 0.762862,0.243006) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757895,0.00108597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.377626,1.18006e+31) , 
0, 374.345, 1, 0, 0.71689,0.0834737) , 
2, 8.88289, 1, 0, 0.730451,0.130532) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0706259,-1.03773e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217027,7.84947e+30) , 
0, 195.461, 1, 0, 0.135408,0.0640996) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.320489,-4.93772e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0390164,-1.16109e+30) , 
7, 381.482, 1, 0, 0.160988,-0.0453142) , 
0, 272.667, 1, 0, 0.148887,0.00644757) , 
8, 116.197, 1, 0, 0.522613,0.0861872)    );
  // itree = 908
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.744431,0.00116501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790292,0.00522718) , 
0, 263.751, 1, 0, 0.763106,0.13948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.317058,-0.0189976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.333504,20.9734) , 
4, 0.282605, 1, 0, 0.323035,0.0206492) , 
8, 100.755, 1, 0, 0.6231,0.101674) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0697653,-8.86451e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160144,-7.66714e+29) , 
9, 0.992353, 1, 0, 0.0876323,-0.0118987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.24004e+30) , 
0, 700.007, 1, 0, 0.0740149,-0.0175881) , 
7, 321.603, 1, 0, 0.488308,0.0723973)    );
  // itree = 909
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650329,-0.000286895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.886884,0.00199562) , 
9, 0.956306, 1, 0, 0.823333,0.122293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.242722,-0.0102119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551743,0.0169942) , 
4, 0.564879, 1, 0, 0.296828,-0.00821008) , 
8, 89.8747, 1, 0, 0.608724,0.0690983) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.417976,0.00132234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368695,-0.00215395) , 
4, 0.161489, 1, 0, 0.388564,-0.00964839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.472914,0.00528509) , 
3, 0.726712, 1, 0, 0.393639,0.00106702) , 
6, 97.3387, 1, 0, 0.48278,0.0292623)    );
  // itree = 910
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731378,0.00141326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.672851,0.00501214) , 
5, 138.185, 1, 0, 0.720475,0.0997075) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.86474e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.58487e+30) , 
5, 191.388, 1, 0, 0,-0.113837) , 
5, 165.617, 1, 0, 0.662469,0.0825149) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.260368,-2.42416e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115426,1.89626e+30) , 
9, 0.970696, 1, 0, 0.209669,0.032834) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.15433e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0568743,-2.35e+30) , 
0, 183.105, 1, 0, 0.0482212,-0.0244013) , 
4, 0.121117, 1, 0, 0.090143,-0.00953944) , 
7, 291.925, 1, 0, 0.499077,0.0562345)    );
  // itree = 911
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.710578,0.00342933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.755573,0.00428783) , 
3, 0.28261, 1, 0, 0.728411,0.213982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.33216,-5.48488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0912961,5.6409e+29) , 
7, 233.646, 1, 0, 0.148865,-0.0200272) , 
8, 99.127, 1, 0, 0.474536,0.111472) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.552517,-0.00326244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517926,0.00389136) , 
6, 77.7011, 1, 0, 0.524289,0.0711846) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.404829,-0.00214576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52279,0.000927522) , 
9, 0.959427, 1, 0, 0.484506,0.00606837) , 
4, 0.161489, 1, 0, 0.500533,0.0322998) , 
9, 0.906024, 1, 0, 0.493902,0.0524936)    );
  // itree = 912
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.308514,-0.00432967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684267,0.00176683) , 
8, 57.8254, 1, 0, 0.663693,0.0717953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766429,0.00478145) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.705518,0.00322565) , 
8, 81.7964, 1, 0, 0.726885,0.215964) , 
3, 0.444102, 1, 0, 0.677856,0.104108) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144395,-2.0805e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131141,-4.76751e+29) , 
7, 392.89, 1, 0, 0.136794,-0.0152627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.04513e+30) , 
0, 718.284, 1, 0, 0.119645,-0.0188051) , 
7, 299.699, 1, 0, 0.529255,0.0713874)    );
  // itree = 913
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543945,0.00168948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432597,-0.00239116) , 
6, 67.2279, 1, 0, 0.45833,-0.0375552) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745409,0.00311746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2736,-1.88511e+30) , 
5, 163.766, 1, 0, 0.691002,0.107622) , 
1, 111.735, 1, 0, 0.643426,0.0779372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.338937,-1.26239e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0658549,-1.63668e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104933,-8.23412e+29) , 
2, 26.3628, 1, 0, 0.0711917,-0.0140307) , 
1, 111.849, 1, 0, 0.100445,-0.018911) , 
7, 291.925, 1, 0, 0.480814,0.0489331)    );
  // itree = 914
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643495,0.00142459) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622207,-0.00604764) , 
3, 0.130669, 1, 0, 0.638427,0.0351423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.664475,0.00300326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.181707,-1.81867e+30) , 
1, 240.48, 1, 0, 0.622363,0.144487) , 
3, 0.161489, 1, 0, 0.629638,0.0949626) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.10392,-4.85385e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0809434,-4.93734e+29) , 
5, 154.283, 1, 0, 0.0843475,-0.00685423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0928917,-1.04058e+30) , 
2, 26.3628, 1, 0, 0.0857078,-0.0118877) , 
7, 319.588, 1, 0, 0.492574,0.0680376)    );
  // itree = 915
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741252,0.00163221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.347905,1.29985e+31) , 
8, 141.687, 1, 0, 0.702411,0.111841) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.166534,2.77474e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0738656,1.92747e+30) , 
4, 0.0807436, 1, 0, 0.082108,0.0234068) , 
7, 269.401, 1, 0, 0.518668,0.0856455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577832,8.04412e+08) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495856,7.27246e+12) , 
9, 0.933755, 1, 0, 0.540318,0.376905) , 
2, 32.683, 1, 0, 0.519886,0.102033)    );
  // itree = 916
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.668181,0.00170755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.241744,-6.41333e+30) , 
8, 136.633, 1, 0, 0.592403,0.0583727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.76364,0.00528811) , 
2, 20.398, 1, 0, 0.618066,0.0908645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.02954e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0417363,-7.45977e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.99891e+29) , 
0, 654.37, 1, 0, 0.0343026,-0.00939542) , 
1, 145.429, 1, 0, 0.0294692,-0.014246) , 
7, 311.813, 1, 0, 0.464521,0.0634447)    );
  // itree = 917
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.510651,-0.00019366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.22391,-0.0149343) , 
6, 88.1971, 1, 0, 0.361648,-0.0675908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.902198,0.00109107) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205635,-1.39894e+30) , 
7, 208.155, 1, 0, 0.581719,0.0232981) , 
0, 210.707, 1, 0, 0.520265,-0.00208231) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763141,0.00521596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.700896,0.00171706) , 
5, 76.7613, 1, 0, 0.710046,0.125902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212974,3.17187e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.060211,-1.55094e+30) , 
3, 0.259577, 1, 0, 0.119172,0.0111458) , 
8, 116.486, 1, 0, 0.489952,0.0831563) , 
3, 0.161491, 1, 0, 0.502963,0.0465704)    );
  // itree = 918
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.857812,0.00268715) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.791027,0.000758807) , 
4, 0.161394, 1, 0, 0.820081,0.11161) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.138481,-18.9081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.225977,0.143267) , 
2, 10.9533, 1, 0, 0.194423,0.0161262) , 
7, 193.807, 1, 0, 0.514514,0.0649763) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795028,0.00727063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.633587,0.00366087) , 
4, 0.20182, 1, 0, 0.732264,0.330711) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.368827,22350.9) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192673,-11.3265) , 
9, 0.941925, 1, 0, 0.280178,0.0856544) , 
8, 105.099, 1, 0, 0.515801,0.213376) , 
3, 0.444102, 1, 0, 0.514773,0.0948347)    );
  // itree = 919
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.738452,0.00206429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132942,2.49451e+30) , 
7, 234.465, 1, 0, 0.565363,0.0962586) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0385877,-1.58232e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.79217e+29) , 
4, 0.40364, 1, 0, 0.0299925,-0.00539978) , 
8, 213.571, 1, 0, 0.482077,0.0804439) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777189,0.000985783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663188,-0.000256925) , 
4, 0.161081, 1, 0, 0.717801,0.0365583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359143,-44.4006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.243123,-7.34117e+29) , 
5, 188.175, 1, 0, 0.303251,-0.0631218) , 
8, 110.548, 1, 0, 0.545143,-0.00495803) , 
9, 0.992347, 1, 0, 0.496207,0.0613086)    );
  // itree = 920
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.7342,0.00161603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.596379,262.831) , 
6, 148.13, 1, 0, 0.727027,0.111879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.150261,-2.06204e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.98876e+29) , 
5, 241.368, 1, 0, 0.0732893,-0.051731) , 
6, 161.54, 1, 0, 0.661451,0.0954675) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0538435,-1.87587e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0443193,-8.84499e+29) , 
7, 315.003, 1, 0, 0.0470832,-0.0182637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.242119,1.86679e+30) , 
2, 25.9696, 1, 0, 0.0700826,-0.00521509) , 
8, 152.035, 1, 0, 0.517397,0.0709418)    );
  // itree = 921
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701423,0.00146662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.607058,-0.0020411) , 
4, 0.242233, 1, 0, 0.667435,0.0372153) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.711068,0.00354403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.283024,61.2895) , 
8, 105.075, 1, 0, 0.556562,0.131152) , 
5, 122.951, 1, 0, 0.611015,0.0850169) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.98145e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.87601e+29) , 
5, 205.823, 1, 0, 0,-0.00460229) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.42073e+29) , 
0, 678.331, 1, 0, 0,-0.00773465) , 
7, 349.025, 1, 0, 0.48961,0.0665878)    );
  // itree = 922
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.543486,-0.00281178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.710754,0.00364371) , 
4, 0.092259, 1, 0, 0.676227,0.163062) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.496571,0.00223474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.432956,0.00105732) , 
2, 11.0019, 1, 0, 0.458123,0.0418761) , 
6, 90.3373, 1, 0, 0.539592,0.0871431) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0873518,-0.479371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.385242,-0.000505719) , 
1, 98.0118, 1, 0, 0.353584,-0.0333463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.486301,0.00102271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.60793,0.00361514) , 
4, 0.58636, 1, 0, 0.51451,0.0827039) , 
3, 0.28261, 1, 0, 0.420724,0.0150709) , 
4, 0.161489, 1, 0, 0.472227,0.046298)    );
  // itree = 923
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652619,0.00566977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506263,-0.00113184) , 
3, 0.201861, 1, 0, 0.591023,0.239428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.556952,-4.83021e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.684137,0.00231955) , 
3, 0.444004, 1, 0, 0.588975,0.0313815) , 
1, 94.1496, 1, 0, 0.589313,0.0656571) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.366434,0.000129573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482225,0.00410906) , 
9, 0.978588, 1, 0, 0.391441,0.0186906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240603,-0.020335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.519793,-0.000778484) , 
0, 204.116, 1, 0, 0.458182,-0.039964) , 
9, 0.992288, 1, 0, 0.406942,0.00506775) , 
6, 97.3387, 1, 0, 0.480073,0.0293643)    );
  // itree = 924
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75432,0.00398591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.768284,0.00100909) , 
5, 78.8916, 1, 0, 0.762712,0.227838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757653,0.00200026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.247231,-0.023696) , 
8, 95.9345, 1, 0, 0.699265,0.0810858) , 
7, 158.853, 1, 0, 0.716421,0.120768) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169883,-4.1028e+22) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0661034,-6.35138e+29) , 
7, 287.207, 1, 0, 0.121356,-0.048205) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0727066,-7.02688e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.212783,1.85781e+30) , 
9, 0.992351, 1, 0, 0.102935,0.0122491) , 
5, 256.435, 1, 0, 0.114405,-0.0253917) , 
8, 113.273, 1, 0, 0.49871,0.0679112)    );
  // itree = 925
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.722002,0.00288147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.360704,0.000753544) , 
6, 101.508, 1, 0, 0.635393,0.269786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.504087,0.0024876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.412908,-0.00221207) , 
9, 0.920547, 1, 0, 0.445332,0.000350421) , 
0, 208.096, 1, 0, 0.560076,0.163015) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72917,0.00371314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.882105,0.00106059) , 
2, 7.98409, 1, 0, 0.854111,0.073372) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.107282,-3.24564e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357725,1.8313e+30) , 
3, 0.726699, 1, 0, 0.127466,-0.00541269) , 
7, 206.063, 1, 0, 0.496428,0.034591) , 
1, 117.962, 1, 0, 0.511619,0.0652435)    );
  // itree = 926
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.842253,0.00275249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.229017,-0.00399194) , 
8, 92.7009, 1, 0, 0.68993,0.216718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713917,0.00303581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.567654,-0.00036028) , 
4, 0.242233, 1, 0, 0.666243,0.0729918) , 
6, 68.2802, 1, 0, 0.670967,0.101655) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.31185e+29) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0250097,-2.26542e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0550118,-5.31392e+29) , 
9, 0.988589, 1, 0, 0.0335501,-0.00539672) , 
9, 0.884493, 1, 0, 0.0281724,-0.00830555) , 
7, 313.108, 1, 0, 0.520343,0.0758886)    );
  // itree = 927
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438332,0.00665489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.715399,0.000955998) , 
5, 69.9763, 1, 0, 0.690623,0.0671736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0874908,-0.0222761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.127737,-0.00235791) , 
1, 115.45, 1, 0, 0.121817,-0.0226461) , 
5, 142.03, 1, 0, 0.4744,0.03303) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207845,-0.00993102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474405,0.00217364) , 
0, 260.062, 1, 0, 0.359027,-0.0193214) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.615952,0.0131336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.540499,0.00245083) , 
9, 0.94195, 1, 0, 0.576265,0.250828) , 
2, 11.1695, 1, 0, 0.498736,0.154416) , 
3, 0.403729, 1, 0, 0.480134,0.0616286)    );
  // itree = 928
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.268135,-0.00583319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492825,0.000164844) , 
5, 120.533, 1, 0, 0.420602,-0.0539341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621614,0.00234723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.231281,-0.0175824) , 
6, 139.12, 1, 0, 0.590252,0.104669) , 
6, 59.9016, 1, 0, 0.572762,0.0883177) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290026,-1.7973e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0863012,-7.18331e+29) , 
7, 289.164, 1, 0, 0.147549,-0.0317956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.02696e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
3, 0.242184, 1, 0, 0,-0.00396456) , 
8, 205.422, 1, 0, 0.0896294,-0.0208707) , 
6, 157.783, 1, 0, 0.474973,0.0662173)    );
  // itree = 929
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.071808,-0.499997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.422647,0.000449412) , 
3, 0.28261, 1, 0, 0.238031,-0.0242827) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.655839,0.00661409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.04903e+29) , 
6, 153.006, 1, 0, 0.542197,0.226769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729338,0.00282178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136267,2.55495e+30) , 
8, 119.512, 1, 0, 0.532353,0.0981279) , 
9, 0.917999, 1, 0, 0.534586,0.127313) , 
9, 0.877238, 1, 0, 0.510111,0.114801)    );
  // itree = 930
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.247831,-0.00211673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.838451,0.00159975) , 
8, 59.2669, 1, 0, 0.805663,0.106543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.11385,-2.15909e+06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218468,3.09294e+30) , 
2, 19.7078, 1, 0, 0.128113,-0.00902261) , 
7, 199.879, 1, 0, 0.509998,0.0561133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743165,0.0227772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.20894e+29) , 
7, 354.378, 1, 0, 0.446421,0.200919) , 
2, 26.3628, 1, 0, 0.50472,0.0681349)    );
  // itree = 931
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.795892,0.00153013) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256044,-0.00994938) , 
8, 103.752, 1, 0, 0.610273,0.0573018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176024,0.00858236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0567369,-9.38923) , 
4, 0.161489, 1, 0, 0.106137,-0.0141179) , 
6, 138.81, 1, 0, 0.487157,0.0398602) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.673714,0.00583175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.654482,0.00137642) , 
9, 0.977881, 1, 0, 0.666937,0.196583) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261563,-0.0070944) , 
3, 0.694088, 1, 0, 0.58904,0.143621) , 
3, 0.444102, 1, 0, 0.511386,0.0645359)    );
  // itree = 932
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764084,0.00659393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.682221,0.000602191) , 
3, 0.201864, 1, 0, 0.729371,0.284489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.763059,0.00118811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727268,0.00498061) , 
3, 0.242233, 1, 0, 0.750544,0.117783) , 
9, 0.905986, 1, 0, 0.745438,0.157985) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.100034,-3.78886e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.077854,1.98996e+30) , 
6, 199.266, 1, 0, 0.0927974,-0.00868019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.257225,5.16135e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.37952e+29) , 
3, 0.161401, 1, 0, 0.124728,0.0825779) , 
9, 0.992351, 1, 0, 0.0992372,0.00972469) , 
7, 234.843, 1, 0, 0.498054,0.101227)    );
  // itree = 933
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.148644,-0.000710155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553712,0.0232624) , 
2, 16.0643, 1, 0, 0.321633,0.197525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584907,0.00367077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464337,9.53223e-05) , 
3, 0.115234, 1, 0, 0.51053,0.0389897) , 
9, 0.87725, 1, 0, 0.492395,0.0542099) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64353,0.00302693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.598848,-0.000829458) , 
2, 11.8651, 1, 0, 0.628956,0.109521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.593242,21.9399) , 
2, 18.1711, 1, 0, 0.622054,0.172395) , 
3, 0.403729, 1, 0, 0.528716,0.0873167)    );
  // itree = 934
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652001,0.00102697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729466,0.00409999) , 
3, 0.403729, 1, 0, 0.671373,0.0910403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.785903,0.295127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486837,7.4736e+24) , 
6, 118.289, 1, 0, 0.674717,0.317472) , 
0, 357.977, 1, 0, 0.671757,0.117071) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.72128e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0183878,-7.87534e+29) , 
1, 143.896, 1, 0, 0.0159445,-0.0101343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0975211,2.01665e+30) , 
4, 0.565211, 1, 0, 0.0275289,0.00331797) , 
7, 311.813, 1, 0, 0.520268,0.0903222)    );
  // itree = 935
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539174,0.00529213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.464451,0.00490155) , 
2, 7.83877, 1, 0, 0.483251,0.17698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.75057,0.00210466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147898,-6.61923e+29) , 
8, 116.197, 1, 0, 0.545426,0.0736083) , 
9, 0.906024, 1, 0, 0.53063,0.0982077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622549,1.54896e+31) , 
2, 34.2513, 1, 0, 0.53591,0.113946)    );
  // itree = 936
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.695669,0.0030752) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628484,0.01595) , 
1, 160.882, 1, 0, 0.67329,0.229708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.11273e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154961,2.50773e+30) , 
3, 0.363276, 1, 0, 0.0485941,0.0227811) , 
7, 269.401, 1, 0, 0.472066,0.163054) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.760697,0.00425247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.713833,0.00102972) , 
5, 78.693, 1, 0, 0.719897,0.0788849) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0639955,-3.85501e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.113,1.66865e+30) , 
4, 0.565206, 1, 0, 0.0704033,-0.013896) , 
8, 119.512, 1, 0, 0.508878,0.0487406) , 
9, 0.913218, 1, 0, 0.498501,0.0809653)    );
  // itree = 937
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.539565,0.0100733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.689124,0.0026312) , 
5, 69.4457, 1, 0, 0.678619,0.154583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.344654,-0.00460569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.765285,0.00154278) , 
0, 215.459, 1, 0, 0.633908,0.0189215) , 
4, 0.322975, 1, 0, 0.666061,0.116482) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.106752,1.9199e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0689349,-1.16023e+30) , 
4, 0.121092, 1, 0, 0.0783184,0.00436524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.322273,-2.64634e+30) , 
2, 34.0676, 1, 0, 0.106319,-0.00959694) , 
7, 296.099, 1, 0, 0.507311,0.0807241)    );
  // itree = 938
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.599446,0.007847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770568,0.000920428) , 
5, 74.324, 1, 0, 0.745985,0.0876509) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761143,0.00950978) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468051,-0.00374787) , 
8, 95.2585, 1, 0, 0.686993,0.264955) , 
5, 140.086, 1, 0, 0.734113,0.123331) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1464,3.27966e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.261671,5.88695e+30) , 
9, 0.992351, 1, 0, 0.170856,0.0547541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.09012e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.42836e+29) , 
7, 369.182, 1, 0, 0,-0.0268741) , 
4, 0.242233, 1, 0, 0.107781,0.0246192) , 
7, 234.843, 1, 0, 0.486162,0.0842528)    );
  // itree = 939
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618496,-0.00275283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.810277,0.00143457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842025,0.0036968) , 
5, 130.07, 1, 0, 0.816632,0.11217) , 
6, 48.9361, 1, 0, 0.803238,0.0981886) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.7325e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123038,-1.34136e+30) , 
1, 88.0342, 1, 0, 0.0617111,-0.111118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0618602,-4.15359e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.253153,3.4826e+30) , 
3, 0.403729, 1, 0, 0.117088,-0.00254784) , 
1, 115.135, 1, 0, 0.110321,-0.0158151) , 
7, 199.879, 1, 0, 0.48569,0.0459433)    );
  // itree = 940
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456969,0.00110375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785634,0.00431421) , 
9, 0.977909, 1, 0, 0.62211,0.217277) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518269,0.0363891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649438,0.00128038) , 
9, 0.870041, 1, 0, 0.639978,0.0651569) , 
2, 7.416, 1, 0, 0.636814,0.0920946) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.03896e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0651575,-6.16688e+29) , 
5, 158.158, 1, 0, 0.0549144,-0.00643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154284,-1.9066e+30) , 
2, 34.0676, 1, 0, 0.063946,-0.0157915) , 
7, 291.925, 1, 0, 0.466899,0.0600952)    );
  // itree = 941
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447389,0.00697081) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.731874,0.00211246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0869424,1.61548e+30) , 
7, 252.393, 1, 0, 0.530576,0.0709196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.389291,-0.00747141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478089,-2.82336e+30) , 
2, 39.5842, 1, 0, 0.422613,-0.0756577) , 
2, 26.3628, 1, 0, 0.522661,0.0601737) , 
9, 0.855669, 1, 0, 0.520526,0.0678317)    );
  // itree = 942
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685056,0.00257278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.581615,0.0199618) , 
0, 358.316, 1, 0, 0.67569,0.130391) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109924,-1.38867e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.145727,3.65805e+30) , 
9, 0.992254, 1, 0, 0.116932,0.0152932) , 
7, 311.813, 1, 0, 0.536676,0.101756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.162485,-0.00461157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.47757,-0.000494042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.28077,-0.0275288) , 
3, 0.201864, 1, 0, 0.39761,-0.03323) , 
0, 195.032, 1, 0, 0.337454,-0.0529568) , 
4, 0.444094, 1, 0, 0.506552,0.0783621)    );
  // itree = 943
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757092,0.0037064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614942,0.00251642) , 
5, 111.652, 1, 0, 0.682523,0.164932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757197,0.00169268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.296701,-5.0036) , 
8, 98.4875, 1, 0, 0.611891,0.0514334) , 
4, 0.201861, 1, 0, 0.650024,0.112709) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.021856,-6.2544e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203425,-5.22367e+29) , 
9, 0.992351, 1, 0, 0.0630026,-0.00798489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.65988e+29) , 
6, 330.996, 1, 0, 0.0552235,-0.0122795) , 
7, 315.988, 1, 0, 0.507328,0.0827233)    );
  // itree = 944
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707862,0.00197684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643328,0.00189064) , 
6, 68.2802, 1, 0, 0.657236,0.0941769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.348519,-2.11835e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.7233e+29) , 
8, 157.361, 1, 0, 0.155819,-0.066424) , 
1, 237.232, 1, 0, 0.615747,0.0808882) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.108146,2.01299e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0452467,-1.18719e+30) , 
5, 146.159, 1, 0, 0.0534898,0.00532176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.27746,-1.36514e+30) , 
2, 34.0676, 1, 0, 0.0783523,-0.00308981) , 
7, 311.813, 1, 0, 0.470522,0.0581941)    );
  // itree = 945
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596084,0.00443476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.444723,0.0022649) , 
4, 0.201861, 1, 0, 0.529977,0.29432) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.283823,0.0037542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.232638,-0.00725421) , 
0, 122.562, 1, 0, 0.255007,0.0332024) , 
1, 99.7837, 1, 0, 0.332872,0.107144) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173326,-0.0195584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461323,0.000516538) , 
1, 103.532, 1, 0, 0.434973,-0.00517878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480368,7.58917e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583377,0.00380275) , 
4, 0.322912, 1, 0, 0.517102,0.0532342) , 
3, 0.28261, 1, 0, 0.467072,0.0176511) , 
0, 182.181, 1, 0, 0.43563,0.0386186)    );
  // itree = 946
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.445209,0.00212491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649956,0.00986708) , 
9, 0.99225, 1, 0, 0.508451,0.273047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.780361,0.000643775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608494,0.0110255) , 
5, 127.313, 1, 0, 0.703219,0.112374) , 
0, 144.758, 1, 0, 0.67075,0.139159) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0212099,-9.56495e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.62742e+29) , 
0, 731.331, 1, 0, 0.0182906,-0.0132432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.102947,1.91898e+30) , 
4, 0.565211, 1, 0, 0.0302423,0.00062359) , 
7, 319.588, 1, 0, 0.530467,0.108817)    );
  // itree = 947
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.61879,0.00243076) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.516204,0.0072523) , 
3, 0.138231, 1, 0, 0.571302,0.149017) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1284,-0.00961056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466949,-0.00425197) , 
0, 247.66, 1, 0, 0.360438,-0.0565552) , 
3, 0.322977, 1, 0, 0.524509,0.103399) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.424683,-0.00404669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.496435,-0.000258142) , 
5, 86.3508, 1, 0, 0.482717,-0.0242934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57341,0.00314379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0714041,-2.48538e+30) , 
0, 394.217, 1, 0, 0.385418,0.0384071) , 
0, 273.146, 1, 0, 0.440945,0.00262518) , 
4, 0.161487, 1, 0, 0.476197,0.0451379)    );
  // itree = 948
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524425,23.6365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.369085,0.000166957) , 
3, 0.161491, 1, 0, 0.444115,0.247297) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.720856,0.00173993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504968,0.00152805) , 
7, 140.303, 1, 0, 0.527462,0.0588917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.300974,-2.7474e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0357845,-8.05865e+29) , 
7, 340.847, 1, 0, 0.110297,-0.035491) , 
0, 386.976, 1, 0, 0.457225,0.0430007) , 
9, 0.862863, 1, 0, 0.456417,0.055593)    );
  // itree = 949
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172622,-0.00192325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594922,0.00448609) , 
9, 0.877225, 1, 0, 0.388112,0.136234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.455566,0.0621181) , 
2, 15.8697, 1, 0, 0.407347,0.210029) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610304,-0.00040162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.647434,0.00319023) , 
9, 0.917314, 1, 0, 0.642303,0.113122) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0440786,-1.93563e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0663546,-6.374e+29) , 
9, 0.984128, 1, 0, 0.0526703,-0.00926038) , 
8, 202.273, 1, 0, 0.55455,0.0949078) , 
9, 0.891637, 1, 0, 0.531464,0.112962)    );
  // itree = 950
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741417,0.00172946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419671,0.0378737) , 
1, 188.205, 1, 0, 0.641592,0.156797) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770174,0.00156314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.326788,0.00196155) , 
8, 89.8747, 1, 0, 0.557971,0.0621635) , 
4, 0.121115, 1, 0, 0.579115,0.0860915) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.9068e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.68856e+29) , 
5, 189.707, 1, 0, 0,-0.00805185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.35949e+29) , 
2, 27.0285, 1, 0, 0,-0.0156863) , 
6, 173.918, 1, 0, 0.491844,0.0707539)    );
  // itree = 951
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652558,0.00208466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196575,-1.94651e+30) , 
6, 156.306, 1, 0, 0.568378,0.0614304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559013,0.0446321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.404361,0.00536118) , 
9, 0.898862, 1, 0, 0.448368,0.228322) , 
3, 0.184542, 1, 0, 0.548303,0.0893488) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.4695,-0.000269762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.585323,0.00221922) , 
4, 0.153389, 1, 0, 0.509128,0.050986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474215,0.000748421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273491,-0.0297354) , 
3, 0.357811, 1, 0, 0.357246,-0.0340942) , 
4, 0.20182, 1, 0, 0.440555,0.0125732) , 
3, 0.242237, 1, 0, 0.510499,0.0624117)    );
  // itree = 952
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0985849,-0.34967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.419962,0.000288777) , 
5, 79.3152, 1, 0, 0.329964,-0.0404134) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.746833,0.00275905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.842899,0.000870212) , 
5, 97.7699, 1, 0, 0.81309,0.0688641) , 
0, 190.48, 1, 0, 0.683609,0.039577) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.66221,0.00760061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426501,0.0114511) , 
6, 65.8646, 1, 0, 0.473093,0.155237) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0526296,-5.17221e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.08025e+29) , 
2, 26.3628, 1, 0, 0.0430992,-0.0105589) , 
7, 395.891, 1, 0, 0.349411,0.107548) , 
5, 128.871, 1, 0, 0.506294,0.0756403)    );
  // itree = 953
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69457,0.00358127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87311,0.000805878) , 
5, 95.1929, 1, 0, 0.823854,0.0927784) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.535684,0.0110958) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.466683,0.00433044) , 
3, 0.242237, 1, 0, 0.510671,0.255804) , 
5, 136.615, 1, 0, 0.727977,0.142686) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0265433,-9.52042e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.20366,-1.60387e+30) , 
9, 0.985083, 1, 0, 0.0836666,-0.0230537) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.256505,8.07862e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0541754,7.47783e+29) , 
1, 226.869, 1, 0, 0.136269,0.0643877) , 
2, 11.1695, 1, 0, 0.112748,0.0252893) , 
8, 113.273, 1, 0, 0.509536,0.101004)    );
  // itree = 954
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.674746,0.00403208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.651938,0.00236801) , 
6, 69.2258, 1, 0, 0.656439,0.12106) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.051898,-1.04575e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0350784,-1.32843e+29) , 
1, 243.874, 1, 0, 0.0413304,-0.0103381) , 
7, 313.108, 1, 0, 0.51205,0.0902162) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.150853,-0.576442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.506887,-0.00116726) , 
0, 184.706, 1, 0, 0.428123,-0.0522564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0651127,1.63431e+30) , 
6, 173.918, 1, 0, 0.351311,-0.0308774) , 
3, 0.322983, 1, 0, 0.472531,0.0604441)    );
  // itree = 955
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.574945,0.0023096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.48007,-0.00283624) , 
9, 0.901854, 1, 0, 0.542388,0.0296386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.770262,0.0200381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623192,0.00270322) , 
9, 0.947136, 1, 0, 0.643937,0.139141) , 
9, 0.934799, 1, 0, 0.610086,0.102639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0802231,-1.282e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120499,-7.71427e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.30048e+29) , 
8, 154.236, 1, 0, 0.043086,-0.0123461) , 
1, 144.211, 1, 0, 0.0519007,-0.0194623) , 
6, 157.783, 1, 0, 0.508445,0.080405)    );
  // itree = 956
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23353,0.000402553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.563646,0.0135257) , 
2, 11.3084, 1, 0, 0.396709,0.202252) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.360247,0.00848632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.551773,0.00167293) , 
0, 132.245, 1, 0, 0.528748,0.0792886) , 
9, 0.891637, 1, 0, 0.507609,0.0989749) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.526481,-0.0204063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493127,-0.00185602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.552389,0.00174214) , 
4, 0.524834, 1, 0, 0.504154,-0.00100321) , 
1, 100.281, 1, 0, 0.507324,-0.0196314) , 
2, 18.6581, 1, 0, 0.50755,0.0747006)    );
  // itree = 957
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39698,-0.00249378) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.734559,0.00727798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.608137,0.00292337) , 
6, 58.993, 1, 0, 0.62745,0.15237) , 
6, 49.9193, 1, 0, 0.602081,0.125909) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.419233,0.00178555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.477206,0.0471128) , 
9, 0.912487, 1, 0, 0.432706,0.101639) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.458717,-0.00172081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.344272,0.00403385) , 
3, 0.161431, 1, 0, 0.396602,0.0126757) , 
9, 0.927552, 1, 0, 0.41015,0.0460599) , 
6, 97.3387, 1, 0, 0.487523,0.0782494)    );
  // itree = 958
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755979,0.00197925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.446768,1.40602e+31) , 
7, 221.187, 1, 0, 0.731061,0.121138) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215187,-3.19228e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.131858,1.98484e+30) , 
4, 0.322324, 1, 0, 0.193605,-0.0174604) , 
7, 238.722, 1, 0, 0.656095,0.101806) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0962991,2.55232e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0549567,-1.13952e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0844695,-4.11432e+29) , 
1, 200.897, 1, 0, 0.0762065,-0.00982168) , 
9, 0.884493, 1, 0, 0.0794947,0.00530352) , 
7, 296.099, 1, 0, 0.497068,0.0751905)    );
  // itree = 959
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.713337,0.00151199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0921597,1.32407) , 
8, 110.548, 1, 0, 0.47781,0.0452077) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652651,0.0319442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.576309,0.00522623) , 
3, 0.241478, 1, 0, 0.626292,0.181022) , 
9, 0.985487, 1, 0, 0.498109,0.0637748) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584892,-0.00118629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.154399,-1.24796) , 
3, 0.161084, 1, 0, 0.414739,-0.0803031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.657545,0.00285009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.45509,-0.00158072) , 
9, 0.99703, 1, 0, 0.547906,0.0287046) , 
9, 0.995773, 1, 0, 0.506649,-0.00506767) , 
9, 0.992347, 1, 0, 0.499927,0.0491206)    );
  // itree = 960
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57263,0.00305845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.663915,0.00573187) , 
0, 247.609, 1, 0, 0.614847,0.197403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472343,-0.000215002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491178,0.00657643) , 
4, 0.103794, 1, 0, 0.486122,0.0874953) , 
1, 145.429, 1, 0, 0.535981,0.130066) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538226,0.00301053) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.482497,0.000882992) , 
2, 9.26118, 1, 0, 0.512538,0.160053) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477429,-0.00138865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143282,4.49343e+30) , 
8, 259.736, 1, 0, 0.426429,-0.00236221) , 
6, 69.4749, 1, 0, 0.440276,0.0237566) , 
4, 0.242233, 1, 0, 0.50004,0.0901418)    );
  // itree = 961
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.605678,0.00597779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.723152,0.00548239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.622679,0.00141136) , 
4, 0.161489, 1, 0, 0.667112,0.125078) , 
5, 62.1483, 1, 0, 0.663295,0.145551) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0197771,-2.95829e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.76118e+29) , 
9, 0.992351, 1, 0, 0.0157448,-0.00440611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.00982e+30) , 
2, 26.3628, 1, 0, 0.0134777,-0.00943981) , 
7, 291.925, 1, 0, 0.489592,0.104121)    );
  // itree = 962
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.209094,0.00810441) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239823,-0.00840528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0620148,-5.55572e+29) , 
7, 239.442, 1, 0, 0.162892,-0.0908315) , 
1, 97.0651, 1, 0, 0.172387,-0.0545385) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.777704,0.00233955) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.192003,3.40749e+07) , 
8, 110.548, 1, 0, 0.566034,0.0833343) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438905,-0.0183556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.16661e+29) , 
8, 119.942, 1, 0, 0.233417,-0.0718259) , 
2, 26.3628, 1, 0, 0.54318,0.0726734) , 
0, 181.652, 1, 0, 0.479287,0.0507528)    );
  // itree = 963
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.769283,0.00232428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.833425,0.00573955) , 
6, 118.311, 1, 0, 0.77972,0.182298) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0853163,-3.9638e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146641,9.43379e+30) , 
8, 114.629, 1, 0, 0.134291,0.0233068) , 
7, 204.054, 1, 0, 0.501273,0.113707) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.642099,-0.00359624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.426029,-0.0411061) , 
9, 0.941927, 1, 0, 0.556146,-0.0908567) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.258588,0.053241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397427,-0.00376289) , 
4, 0.161319, 1, 0, 0.350873,0.0324977) , 
1, 144.211, 1, 0, 0.43534,-0.0182611) , 
2, 18.6581, 1, 0, 0.488814,0.0887695)    );
  // itree = 964
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.811105,0.00371931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.31146e+30) , 
7, 207.393, 1, 0, 0.714915,0.153231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.665416,-0.0044619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.680072,0.000989152) , 
4, 0.161456, 1, 0, 0.674747,-0.00929947) , 
2, 17.9658, 1, 0, 0.706964,0.121058) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.343732,-3.37656e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.259457,-1.19939e+30) , 
8, 161.478, 1, 0, 0.30779,-0.105986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.176719,-3.7796e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150682,3.62112e+30) , 
0, 360.139, 1, 0, 0.167168,-0.000711381) , 
1, 145.429, 1, 0, 0.189997,-0.0178018) , 
8, 116.197, 1, 0, 0.510691,0.068338)    );
  // itree = 965
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.551561,-0.00128048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760059,0.00263181) , 
1, 73.4804, 1, 0, 0.744181,0.136282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.302361,-4.84051) , 
8, 101.786, 1, 0, 0.721905,0.120124) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.214527,-1593.05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.144743,-6.88519e+29) , 
7, 302.738, 1, 0, 0.186915,-0.0569364) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123014,4.52214e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.473793,5.63046e+30) , 
3, 0.524652, 1, 0, 0.208992,0.0393002) , 
0, 256.994, 1, 0, 0.199051,-0.00403295) , 
8, 110.548, 1, 0, 0.51057,0.0699406)    );
  // itree = 966
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.644418,0.00192956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63506,0.00410791) , 
3, 0.645966, 1, 0, 0.643593,0.107581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.139786,-4.05071e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.118624,-1.12953e+30) , 
7, 267.825, 1, 0, 0.129781,-0.128411) , 
8, 127.173, 1, 0, 0.596374,0.0858939) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0701716,-8.82858e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0462141,-5.89483e+29) , 
9, 0.889625, 1, 0, 0.052098,-0.0107445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116931,-9.12229e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.55283e+29) , 
8, 237.084, 1, 0, 0.0589715,-0.0512534) , 
9, 0.992351, 1, 0, 0.05348,-0.0188893) , 
8, 152.035, 1, 0, 0.443847,0.0564548)    );
  // itree = 967
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.575752,0.00889311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.825278,0.00335378) , 
0, 123.754, 1, 0, 0.800611,0.194467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.584619,0.0120795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.723733,0.000153647) , 
5, 79.0342, 1, 0, 0.703007,0.058478) , 
4, 0.242233, 1, 0, 0.766251,0.146594) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290767,8.22238e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.22221e+30) , 
8, 82.381, 1, 0, 0.146944,0.11448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.254847,-1.72615e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106203,-8.91824e+29) , 
1, 147.55, 1, 0, 0.125268,-0.0124736) , 
8, 119.512, 1, 0, 0.130159,0.0161687) , 
7, 234.843, 1, 0, 0.528416,0.0978283)    );
  // itree = 968
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.719822,0.00289653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725719,0.00236566) , 
9, 0.870163, 1, 0, 0.725154,0.130831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.240535,-0.105221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.478886,5.73192) , 
1, 204.671, 1, 0, 0.351415,0.0202602) , 
8, 99.2179, 1, 0, 0.629527,0.10254) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0631175,-1.26167e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.136266,-1.84574e+30) , 
9, 0.992291, 1, 0, 0.078609,-0.0195244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.184278,3.80041e+30) , 
4, 0.565211, 1, 0, 0.0930685,0.00375842) , 
8, 148.72, 1, 0, 0.47963,0.0749384)    );
  // itree = 969
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-0.632292) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.517765,0.00246549) , 
2, 6.91708, 1, 0, 0.445594,0.0559496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.718932,0.0195033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.583938,0.00117838) , 
9, 0.996057, 1, 0, 0.636418,0.215552) , 
9, 0.992288, 1, 0, 0.502652,0.103672) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.524226,-0.00506268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.759433,-7.92543e-05) , 
0, 217.3, 1, 0, 0.669441,-0.0465107) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168883,-0.0304045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.383902,0.00628303) , 
9, 0.898874, 1, 0, 0.346058,0.0425706) , 
5, 128.008, 1, 0, 0.456126,0.0122504) , 
2, 10.9533, 1, 0, 0.477552,0.0543518)    );
  // itree = 970
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.423637,-0.35087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.81927,0.00255875) , 
1, 71.8871, 1, 0, 0.798242,0.136464) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.477798,8.29099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.350707,-47.386) , 
5, 85.296, 1, 0, 0.388842,-0.0868447) , 
8, 102.595, 1, 0, 0.721631,0.0946764) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0388519,-1.39985e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103222,-1.98358e+30) , 
9, 0.992353, 1, 0, 0.054587,-0.0187261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.444994,9.72722e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-8.53406e+29) , 
7, 414.658, 1, 0, 0.251037,0.110133) , 
2, 18.8634, 1, 0, 0.115175,0.0210155) , 
7, 239.017, 1, 0, 0.484879,0.0659202)    );
  // itree = 971
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.610682,0.00422536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703568,0.00126161) , 
9, 0.870042, 1, 0, 0.69626,0.079658) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.766756,0.00306227) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.790394,0.00726176) , 
3, 0.164741, 1, 0, 0.780658,0.249171) , 
1, 168.299, 1, 0, 0.716625,0.120561) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.192701,-2.51291e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110524,3.57089e+30) , 
9, 0.941616, 1, 0, 0.172512,0.00671369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.227443,-3.66591e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0920942,-1.92069e+30) , 
7, 276.589, 1, 0, 0.13527,-0.0548133) , 
9, 0.970779, 1, 0, 0.157885,-0.0174509) , 
8, 116.197, 1, 0, 0.511696,0.0699423)    );
  // itree = 972
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.675972,0.00234203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557416,2.34131e+31) , 
6, 149.861, 1, 0, 0.661254,0.156067) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.119169,2.39055e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0599488,-1.05492e+30) , 
4, 0.0921774, 1, 0, 0.0689557,0.00939739) , 
7, 311.813, 1, 0, 0.515591,0.119997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.447016,-0.0102157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253499,0.00843073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.236903,-0.0170312) , 
3, 0.161021, 1, 0, 0.243609,-0.0143231) , 
8, 87.6384, 1, 0, 0.302257,-0.0491102) , 
4, 0.484466, 1, 0, 0.487964,0.0980974)    );
  // itree = 973
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68299,0.00328366) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806071,0.00604791) , 
3, 0.44298, 1, 0, 0.713235,0.234785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.224695,-4.28169e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0738139,1.59567e+30) , 
7, 294.898, 1, 0, 0.137317,-0.0248456) , 
7, 218.834, 1, 0, 0.50509,0.140951) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.570113,0.00723185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.451103,-0.00112785) , 
2, 11.6523, 1, 0, 0.467406,-7.58179e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.348155,-9.56049) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.315158,-0.0136985) , 
1, 161.51, 1, 0, 0.327764,-0.0987777) , 
2, 25.6294, 1, 0, 0.448171,-0.0136715) , 
2, 10.9533, 1, 0, 0.474153,0.0569096)    );
  // itree = 974
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816642,0.00370906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.823838,0.001793) , 
6, 66.4264, 1, 0, 0.822445,0.153166) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.284559,-0.00884269) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.409392,0.0186614) , 
6, 116.323, 1, 0, 0.319169,0.0190122) , 
8, 91.2308, 1, 0, 0.618123,0.098702) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.393827,-66.7159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114222,-1.30902e+30) , 
7, 266.095, 1, 0, 0.259623,-0.156646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.255807,-1.29988e+07) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161011,9.37478e+29) , 
1, 122.126, 1, 0, 0.1775,-0.0144162) , 
5, 125.31, 1, 0, 0.196114,-0.046654) , 
6, 138.81, 1, 0, 0.505842,0.0600282)    );
  // itree = 975
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.732179,0.00562833) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654911,0.00539531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.843741,0.0017168) , 
5, 82.1041, 1, 0, 0.812028,0.132879) , 
9, 0.891608, 1, 0, 0.800949,0.163648) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.318643,164.66) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21467,-4.05176e+29) , 
5, 177.44, 1, 0, 0.255204,0.0490545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.200496,-1.20896e+31) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.70773e+30) , 
7, 334.359, 1, 0, 0.0817604,-0.0818272) , 
6, 132.174, 1, 0, 0.164866,-0.0191156) , 
7, 197.982, 1, 0, 0.49343,0.0752895)    );
  // itree = 976
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.501794,0.000216166) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.542886,0.00693437) , 
4, 0.20182, 1, 0, 0.523258,0.105269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.318981,-0.0454096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356787,0.00106717) , 
1, 109.274, 1, 0, 0.350436,-0.0101028) , 
3, 0.121119, 1, 0, 0.410372,0.0299092) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640144,0.00109139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727225,0.00501142) , 
3, 0.121051, 1, 0, 0.705974,0.164961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.16926e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0540777,-4.59808e+29) , 
1, 204.984, 1, 0, 0.0350416,-0.0248574) , 
5, 187.311, 1, 0, 0.566478,0.125495) , 
9, 0.970767, 1, 0, 0.48461,0.0753659)    );
  // itree = 977
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702159,0.00397909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.668053,0.000904383) , 
3, 0.484368, 1, 0, 0.696703,0.176672) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.278742,-4.37685e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.244924,8.08265e+29) , 
4, 0.241622, 1, 0, 0.264843,-0.0804667) , 
6, 149.861, 1, 0, 0.66148,0.155699) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.065254,-4.60258e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0995903,-6.12296e+29) , 
2, 26.3628, 1, 0, 0.0712522,-0.00742641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.9279e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250856,4.0054e+30) , 
6, 182.902, 1, 0, 0.125756,0.103286) , 
9, 0.992351, 1, 0, 0.0818786,0.0141585) , 
7, 311.813, 1, 0, 0.51769,0.120585)    );
  // itree = 978
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.689717,0.00325927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.709772,0.000212648) , 
8, 82.3587, 1, 0, 0.697702,0.0943635) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702608,41.7847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.257245,-259.41) , 
5, 137.641, 1, 0, 0.551426,0.342341) , 
8, 102.218, 1, 0, 0.677577,0.128481) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.277627,1.28416e+31) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.045781,-6.98959e+29) , 
5, 180.052, 1, 0, 0.165238,0.117342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140531,8.58897e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126911,-2.63636e+30) , 
9, 0.949139, 1, 0, 0.13339,-0.0121814) , 
3, 0.161456, 1, 0, 0.146605,0.0415609) , 
8, 116.197, 1, 0, 0.467028,0.0940143)    );
  // itree = 979
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.823697,0.00214287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845437,0.00336026) , 
3, 0.484466, 1, 0, 0.827804,0.14897) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.201239,-29.1681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.538249,0.00387244) , 
9, 0.913174, 1, 0, 0.464095,0.0229795) , 
7, 189.146, 1, 0, 0.70781,0.107404) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.143854,-1.56429e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.365321,9.52478e+30) , 
9, 0.908803, 1, 0, 0.217971,0.0953603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0963501,-2.78383e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0511727,-3.77512e+30) , 
1, 147.55, 1, 0, 0.0580257,-0.0460223) , 
9, 0.927636, 1, 0, 0.123292,0.011669) , 
8, 119.512, 1, 0, 0.503123,0.0738793)    );
  // itree = 980
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.764418,0.00121783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.845936,0.00335668) , 
9, 0.956306, 1, 0, 0.814709,0.159189) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140581,-4.66982e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.234792,2.01322e+30) , 
1, 168.299, 1, 0, 0.168567,-0.0374322) , 
7, 213.92, 1, 0, 0.707781,0.12665) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184696,-2.44173e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.071901,-2.66885e+30) , 
1, 148.567, 1, 0, 0.0899851,-0.0308023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.236748,7.46481e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163032,-1.90325e+30) , 
6, 125.383, 1, 0, 0.199064,0.0704566) , 
9, 0.98516, 1, 0, 0.12515,0.00184184) , 
8, 116.197, 1, 0, 0.496031,0.0812903)    );
  // itree = 981
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.794744,0.00284676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.854797,0.00454317) , 
4, 0.564879, 1, 0, 0.805579,0.203144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412492,-101.415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569294,0.0479735) , 
9, 0.970678, 1, 0, 0.488222,-0.00232371) , 
7, 195.2, 1, 0, 0.738438,0.159675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0794175,-2.54695e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0773505,2.94633e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0828527,-2.64848e+30) , 
2, 11.1695, 1, 0, 0.0806982,0.00136373) , 
1, 120.684, 1, 0, 0.0805456,-0.00907014) , 
7, 239.017, 1, 0, 0.496465,0.0976104)    );
  // itree = 982
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759945,0.00371908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649242,0.00258098) , 
6, 58.8861, 1, 0, 0.665181,0.123607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.674062,0.017688) , 
3, 0.686339, 1, 0, 0.665774,0.140194) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20856,-4.60663e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.100537,-1.17283e+30) , 
2, 9.88181, 1, 0, 0.163097,-0.033182) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0453217,-3.91094e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.90232e+29) , 
4, 0.524838, 1, 0, 0.0387471,-0.00756654) , 
7, 306.691, 1, 0, 0.0729607,-0.0146144) , 
8, 148.72, 1, 0, 0.511965,0.100028)    );
  // itree = 983
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.717277,0.00483014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.698184,0.00143354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774795,0.00364688) , 
4, 0.403722, 1, 0, 0.720818,0.102235) , 
9, 0.870042, 1, 0, 0.720451,0.128358) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110311,-95.3576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176577,2.19499) , 
0, 182.102, 1, 0, 0.160097,0.00281037) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251519,3493.6) , 
4, 0.726699, 1, 0, 0.165842,0.0155324) , 
8, 105.099, 1, 0, 0.48373,0.0802012)    );
  // itree = 984
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587904,0.00568883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.777219,0.0026747) , 
0, 165.46, 1, 0, 0.74596,0.152621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373411,-12.1327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.358396,0.00645796) , 
0, 234.762, 1, 0, 0.36588,-0.0616443) , 
8, 102.254, 1, 0, 0.713554,0.134352) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.76063e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112135,-4.39641e+30) , 
1, 146.723, 1, 0, 0.0981259,-0.0326097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135388,1.87608e+30) , 
4, 0.686327, 1, 0, 0.100869,-0.0222901) , 
8, 116.197, 1, 0, 0.498327,0.0793262)    );
  // itree = 985
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.652556,0.000779519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.643377,0.00531951) , 
3, 0.121119, 1, 0, 0.646217,0.130293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.73366,0.0136349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492824,1.67961e+21) , 
3, 0.161489, 1, 0, 0.635018,0.379163) , 
0, 357.977, 1, 0, 0.645034,0.156571) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.20936,6.57149e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.31273e+28) , 
3, 0.161489, 1, 0, 0.0987349,0.0934762) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.80709e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.83775e+29) , 
9, 0.992351, 1, 0, 0,-0.0105439) , 
4, 0.161489, 1, 0, 0.0404097,0.0320289) , 
7, 311.813, 1, 0, 0.493903,0.125441)    );
  // itree = 986
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.807297,0.00556179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.810886,0.00277144) , 
6, 70.0688, 1, 0, 0.809757,0.251049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.747617,0.000963142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.781947,0.00297817) , 
3, 0.362438, 1, 0, 0.756709,0.0854001) , 
8, 80.3874, 1, 0, 0.783176,0.168047) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.11463,-7.20833e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.08719,3.92799e+30) , 
6, 182.815, 1, 0, 0.105638,-0.0124525) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.397552,8.38406e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.14828e+29) , 
5, 186.028, 1, 0, 0.202948,0.172415) , 
4, 0.565211, 1, 0, 0.119696,0.0142538) , 
7, 199.879, 1, 0, 0.458332,0.092749)    );
  // itree = 987
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.377474,-0.00543466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.579725,0.00364093) , 
3, 0.0807457, 1, 0, 0.567182,0.129031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.140593,-1.28525e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.448659,1.53525e+30) , 
4, 0.444094, 1, 0, 0.221504,0.00260777) , 
0, 386.322, 1, 0, 0.515272,0.110046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.741824,2660.92) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.111401,-6.67657e+29) , 
5, 258.229, 1, 0, 0.513179,0.414676) , 
2, 26.3628, 1, 0, 0.515086,0.137086)    );
  // itree = 988
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.625564,6.78693e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.594234,0.00574074) , 
3, 0.0807457, 1, 0, 0.597183,0.162782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.54235,-0.00771558) , 
4, 0.726699, 1, 0, 0.594185,0.149252) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-3.12304e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,0) , 
2, 10.8233, 1, 0, 0,-0.0035283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.123085,-6.70393e+29) , 
4, 0.524834, 1, 0, 0.0219277,-0.00912431) , 
1, 286.343, 1, 0, 0.504111,0.124323)    );
  // itree = 989
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.781131,0.00379081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.727246,0.00210733) , 
4, 0.242233, 1, 0, 0.760508,0.156279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0707982,-1.77501e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0872036,5.55588e+30) , 
1, 154.358, 1, 0, 0.0832728,0.0270212) , 
7, 225.808, 1, 0, 0.579425,0.121717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.137191,-0.104583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222239,-0.00668545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.204096,0.0625113) , 
3, 0.524847, 1, 0, 0.219361,-0.00317975) , 
1, 143.896, 1, 0, 0.203866,-0.019981) , 
0, 328.446, 1, 0, 0.494001,0.0894866)    );
  // itree = 990
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.67735,0.0015221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.51974,0.00712913) , 
6, 94.016, 1, 0, 0.584114,0.144177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.533792,0.00504331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.52835,-0.00172055) , 
9, 0.898889, 1, 0, 0.529713,-0.00426363) , 
4, 0.524838, 1, 0, 0.576649,0.123809) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-5.52475e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.50581e+29) , 
5, 259.024, 1, 0, 0,-0.0077554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264094,-6.52115e+29) , 
4, 0.565211, 1, 0, 0.043517,-0.0124856) , 
1, 286.343, 1, 0, 0.489867,0.101623)    );
  // itree = 991
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.52662,0.005381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.557891,0.000733639) , 
4, 0.153701, 1, 0, 0.536288,0.116873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509506,0.00275946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.616509,0.0177222) , 
9, 0.93474, 1, 0, 0.578805,0.338362) , 
3, 0.484203, 1, 0, 0.544296,0.158589) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.531438,0.00308987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.406802,0.00150063) , 
2, 8.88289, 1, 0, 0.446306,0.0705701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518645,0.000113916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50307,-0.00956084) , 
4, 0.657453, 1, 0, 0.509477,-0.0347087) , 
4, 0.540277, 1, 0, 0.466184,0.037442) , 
4, 0.201861, 1, 0, 0.507507,0.101531)    );
  // itree = 992
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.759486,0.00319123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807305,0.0015027) , 
9, 0.906072, 1, 0, 0.79755,0.0984773) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.769407,0.00773438) , 
3, 0.565211, 1, 0, 0.794084,0.133239) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.95489e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.166413,7.8297e+30) , 
4, 0.134489, 1, 0, 0.0833746,0.0410133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153763,-4.71519e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0382929,-5.69196e+29) , 
5, 223.196, 1, 0, 0.104076,-0.0345607) , 
4, 0.201859, 1, 0, 0.0940628,0.00199372) , 
7, 201.581, 1, 0, 0.472857,0.0730128)    );
  // itree = 993
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.618899,0.0020504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.685326,0.0050109) , 
3, 0.484466, 1, 0, 0.63204,0.0972447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.212035,-0.000388815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553573,0.0158639) , 
0, 229.558, 1, 0, 0.449312,0.245904) , 
6, 125.084, 1, 0, 0.600185,0.12316) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-1.54764e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0754671,-1.35836e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134537,-9.42065e+29) , 
8, 119.512, 1, 0, 0.117699,-0.0208492) , 
9, 0.891652, 1, 0, 0.0972446,-0.0288149) , 
6, 157.77, 1, 0, 0.502443,0.0936247)    );
  // itree = 994
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.672542,-0.000893007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.847905,0.00293784) , 
7, 162.78, 1, 0, 0.800879,0.0937165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.34505e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.132686,5.30072e+30) , 
9, 0.934799, 1, 0, 0.0830331,0.0131042) , 
7, 203.547, 1, 0, 0.4926,0.0590975) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.413631,-0.00183564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.738575,0.0057289) , 
9, 0.898796, 1, 0, 0.698663,0.219439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.80848e+28) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-2.61086e+29) , 
6, 180.363, 1, 0, 0,-0.00914438) , 
7, 324.558, 1, 0, 0.553924,0.172084) , 
3, 0.403729, 1, 0, 0.50819,0.0878218)    );
  // itree = 995
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671905,0.00194121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.337821,0.0257782) , 
6, 135.14, 1, 0, 0.605986,0.133714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805967,-0.00347114) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341736,0.00762903) , 
5, 151.45, 1, 0, 0.585481,0.00456847) , 
2, 18.6581, 1, 0, 0.601908,0.108029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.323727,-1.67332e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.14919e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0609373,-7.48301e+29) , 
5, 139.25, 1, 0, 0.0520752,-0.0107945) , 
7, 258.741, 1, 0, 0.0994141,-0.0191068) , 
1, 223.398, 1, 0, 0.474884,0.0758905)    );
  // itree = 996
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671121,0.00285565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.569584,1.11613e+31) , 
6, 154.806, 1, 0, 0.663155,0.159885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.50327,-0.0184455) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.785163,0.00182529) , 
0, 216.555, 1, 0, 0.727366,0.0117861) , 
2, 15.8019, 1, 0, 0.676485,0.12914) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0923597,2.51285e+30) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.031668,-1.38951e+30) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-9.67196e+29) , 
4, 0.565211, 1, 0, 0.0276237,-0.0160057) , 
9, 0.884493, 1, 0, 0.0392457,0.000870091) , 
7, 296.099, 1, 0, 0.512777,0.0961872)    );
  // itree = 997
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.479057,0.00089015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.628802,0.00239729) , 
9, 0.99225, 1, 0, 0.522568,0.0685562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.834585,0.0255874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-4.0002e+29) , 
7, 299.043, 1, 0, 0.628671,0.24244) , 
0, 293.166, 1, 0, 0.564677,0.137566) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.23478,-0.00725519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.491293,0.00105911) , 
9, 0.884493, 1, 0, 0.463671,0.00955496) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.576874,0.00326789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.562461,0.000992317) , 
4, 0.541057, 1, 0, 0.566659,0.0978132) , 
4, 0.444094, 1, 0, 0.487544,0.0300141) , 
2, 11.1695, 1, 0, 0.526678,0.0845807)    );
  // itree = 998
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.671969,0.00156224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.553794,0.0320904) , 
5, 113.556, 1, 0, 0.596118,0.284775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0,-7.12456e+29) , 
1, 220.971, 1, 0, 0.452904,0.211186) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.640938,0.0039664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.630381,0.00143528) , 
5, 89.3207, 1, 0, 0.632493,0.0855342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0,-6.69224e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.134307,-7.39186e+29) , 
4, 0.564616, 1, 0, 0.0190172,-0.0115212) , 
7, 320.987, 1, 0, 0.486003,0.0623586) , 
9, 0.898831, 1, 0, 0.478987,0.0939046)    );
  // itree = 999
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.593281,0.0088621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.359573,-0.751047) , 
3, 0.242233, 1, 0, 0.527281,0.275696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.634159,0.00190746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.295553,-0.00889866) , 
4, 0.403722, 1, 0, 0.589004,0.0666181) , 
9, 0.92755, 1, 0, 0.568641,0.135593) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649151,0.00192702) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.750756,0.00519043) , 
9, 0.992351, 1, 0, 0.677203,0.0825565) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0228204,-6.79172e+29) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0514564,-1.05881e+30) , 
9, 0.985103, 1, 0, 0.03108,-0.0112321) , 
8, 150.664, 1, 0, 0.434883,0.0473822) , 
1, 145.429, 1, 0, 0.486302,0.0812923)    );
   return;
};
 
// Clean up
inline void ReadBDTG::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDTG::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
         if (IsNormalised()) {
            // normalise variables
            std::vector<double> iV;
            iV.reserve(inputValues.size());
            int ivar = 0;
            for (std::vector<double>::const_iterator varIt = inputValues.begin();
                 varIt != inputValues.end(); varIt++, ivar++) {
               iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
            }
            retval = GetMvaValue__( iV );
         }
         else {
            retval = GetMvaValue__( inputValues );
         }
      }

      return retval;
   }
